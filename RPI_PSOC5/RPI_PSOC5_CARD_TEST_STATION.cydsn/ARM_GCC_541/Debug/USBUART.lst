ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	USBUART_initVar
  20              		.bss
  21              		.type	USBUART_initVar, %object
  22              		.size	USBUART_initVar, 1
  23              	USBUART_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.USBUART_Start,"ax",%progbits
  26              		.align	2
  27              		.global	USBUART_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	USBUART_Start, %function
  31              	USBUART_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\USBUART.c"
   1:Generated_Source\PSoC5/USBUART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART.c **** * \file USBUART.c
   3:Generated_Source\PSoC5/USBUART.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBUART.c **** *
   5:Generated_Source\PSoC5/USBUART.c **** * \brief
   6:Generated_Source\PSoC5/USBUART.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBUART.c **** *
   8:Generated_Source\PSoC5/USBUART.c **** * Note:
   9:Generated_Source\PSoC5/USBUART.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBUART.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBUART.c **** *
  13:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBUART.c **** * \copyright
  15:Generated_Source\PSoC5/USBUART.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBUART.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBUART.c **** 
  21:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_pvt.h"
  22:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_cydmac.h"
  23:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_hid.h"
  24:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_Dp.h"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 2


  25:Generated_Source\PSoC5/USBUART.c **** 
  26:Generated_Source\PSoC5/USBUART.c **** 
  27:Generated_Source\PSoC5/USBUART.c **** /***************************************
  28:Generated_Source\PSoC5/USBUART.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBUART.c **** ***************************************/
  30:Generated_Source\PSoC5/USBUART.c **** 
  31:Generated_Source\PSoC5/USBUART.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBUART.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBUART.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBUART.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBUART.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBUART.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBUART.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBUART.c **** * functions.
  39:Generated_Source\PSoC5/USBUART.c **** */
  40:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_initVar = 0u;
  41:Generated_Source\PSoC5/USBUART.c **** 
  42:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBUART.c ****         static void USBUART_InitEpDma(void);
  45:Generated_Source\PSoC5/USBUART.c **** 
  46:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_DmaChan[USBUART_MAX_EP] =
  48:Generated_Source\PSoC5/USBUART.c ****         {
  49:Generated_Source\PSoC5/USBUART.c ****             0u,
  50:Generated_Source\PSoC5/USBUART.c ****             0u,
  51:Generated_Source\PSoC5/USBUART.c ****             0u,
  52:Generated_Source\PSoC5/USBUART.c ****             0u,
  53:Generated_Source\PSoC5/USBUART.c ****             0u,
  54:Generated_Source\PSoC5/USBUART.c ****             0u,
  55:Generated_Source\PSoC5/USBUART.c ****             0u,
  56:Generated_Source\PSoC5/USBUART.c ****             0u,
  57:Generated_Source\PSoC5/USBUART.c ****             0u,
  58:Generated_Source\PSoC5/USBUART.c ****         };        
  59:Generated_Source\PSoC5/USBUART.c ****     #else
  60:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:Generated_Source\PSoC5/USBUART.c ****         
  63:Generated_Source\PSoC5/USBUART.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaTd[USBUART_MAX_EP];
  65:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBUART.c **** 
  68:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBUART.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCnt   [USBUART_MAX_EP];
  72:Generated_Source\PSoC5/USBUART.c ****     
  73:Generated_Source\PSoC5/USBUART.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpLastBurstEl[USBUART_MAX_EP];
  75:Generated_Source\PSoC5/USBUART.c **** 
  76:Generated_Source\PSoC5/USBUART.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCntBackup  [USBUART_MAX_EP];
  78:Generated_Source\PSoC5/USBUART.c ****     uint32 USBUART_DmaEpBufferAddrBackup[USBUART_MAX_EP];
  79:Generated_Source\PSoC5/USBUART.c ****      
  80:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaReqOut[USBUART_MAX_EP] =
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 3


  82:Generated_Source\PSoC5/USBUART.c ****     {
  83:Generated_Source\PSoC5/USBUART.c ****         0u,
  84:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC5/USBUART.c ****         0u,
  88:Generated_Source\PSoC5/USBUART.c ****         0u,
  89:Generated_Source\PSoC5/USBUART.c ****         0u,
  90:Generated_Source\PSoC5/USBUART.c ****         0u,
  91:Generated_Source\PSoC5/USBUART.c ****         0u,
  92:Generated_Source\PSoC5/USBUART.c ****     };
  93:Generated_Source\PSoC5/USBUART.c **** 
  94:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaBurstEndOut[USBUART_MAX_EP] =
  96:Generated_Source\PSoC5/USBUART.c ****     {
  97:Generated_Source\PSoC5/USBUART.c ****         0u,
  98:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBUART.c ****     };
 107:Generated_Source\PSoC5/USBUART.c ****     
 108:Generated_Source\PSoC5/USBUART.c **** #else
 109:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBUART.c ****         static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
 112:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
 113:Generated_Source\PSoC5/USBUART.c ****         {
 114:Generated_Source\PSoC5/USBUART.c ****             0u,
 115:Generated_Source\PSoC5/USBUART.c ****             0u,
 116:Generated_Source\PSoC5/USBUART.c ****             0u,
 117:Generated_Source\PSoC5/USBUART.c ****             0u,
 118:Generated_Source\PSoC5/USBUART.c ****             0u,
 119:Generated_Source\PSoC5/USBUART.c ****             0u,
 120:Generated_Source\PSoC5/USBUART.c ****             0u,
 121:Generated_Source\PSoC5/USBUART.c ****             0u,
 122:Generated_Source\PSoC5/USBUART.c ****             0u,
 123:Generated_Source\PSoC5/USBUART.c ****         };
 124:Generated_Source\PSoC5/USBUART.c **** 
 125:Generated_Source\PSoC5/USBUART.c ****         volatile uint16 USBUART_inLength[USBUART_MAX_EP];
 126:Generated_Source\PSoC5/USBUART.c ****         const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
 127:Generated_Source\PSoC5/USBUART.c ****         volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
 128:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBUART.c **** 
 132:Generated_Source\PSoC5/USBUART.c **** 
 133:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Start
 135:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBUART.c **** *
 137:Generated_Source\PSoC5/USBUART.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBUART.c **** *   After this function call, the USB device initiates communication with the
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 4


 139:Generated_Source\PSoC5/USBUART.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBUART.c **** *   operation.
 141:Generated_Source\PSoC5/USBUART.c **** *
 142:Generated_Source\PSoC5/USBUART.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBUART.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBUART.c **** *
 145:Generated_Source\PSoC5/USBUART.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBUART.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBUART.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBUART.c **** *
 149:Generated_Source\PSoC5/USBUART.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBUART.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBUART.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBUART.c **** *
 153:Generated_Source\PSoC5/USBUART.c **** *  \param device
 154:Generated_Source\PSoC5/USBUART.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBUART.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBUART.c **** *   following list.
 163:Generated_Source\PSoC5/USBUART.c **** *
 164:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBUART.c **** *
 167:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBUART.c **** *
 170:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 177:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_initVar
 178:Generated_Source\PSoC5/USBUART.c **** *
 179:Generated_Source\PSoC5/USBUART.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBUART.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBUART.c **** *
 182:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 183:Generated_Source\PSoC5/USBUART.c **** *  No.
 184:Generated_Source\PSoC5/USBUART.c **** *
 185:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBUART.c **** {
  34              		.loc 1 187 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 5


  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  46 0006 0346     		mov	r3, r0
  47 0008 0A46     		mov	r2, r1
  48 000a FB71     		strb	r3, [r7, #7]
  49 000c 1346     		mov	r3, r2
  50 000e BB71     		strb	r3, [r7, #6]
 188:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
  51              		.loc 1 188 0
  52 0010 094B     		ldr	r3, .L3
  53 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  54 0014 002B     		cmp	r3, #0
  55 0016 04D1     		bne	.L2
 189:Generated_Source\PSoC5/USBUART.c ****     {
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_Init();
  56              		.loc 1 190 0
  57 0018 FFF7FEFF 		bl	USBUART_Init
 191:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
  58              		.loc 1 191 0
  59 001c 064B     		ldr	r3, .L3
  60 001e 0122     		movs	r2, #1
  61 0020 1A70     		strb	r2, [r3]
  62              	.L2:
 192:Generated_Source\PSoC5/USBUART.c ****     }
 193:Generated_Source\PSoC5/USBUART.c **** 
 194:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitComponent(device, mode);
  63              		.loc 1 194 0
  64 0022 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
  65 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  66 0026 1146     		mov	r1, r2
  67 0028 1846     		mov	r0, r3
  68 002a FFF7FEFF 		bl	USBUART_InitComponent
 195:Generated_Source\PSoC5/USBUART.c **** }
  69              		.loc 1 195 0
  70 002e 00BF     		nop
  71 0030 0837     		adds	r7, r7, #8
  72              		.cfi_def_cfa_offset 8
  73 0032 BD46     		mov	sp, r7
  74              		.cfi_def_cfa_register 13
  75              		@ sp needed
  76 0034 80BD     		pop	{r7, pc}
  77              	.L4:
  78 0036 00BF     		.align	2
  79              	.L3:
  80 0038 00000000 		.word	USBUART_initVar
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	USBUART_Start, .-USBUART_Start
  84              		.section	.text.USBUART_Init,"ax",%progbits
  85              		.align	2
  86              		.global	USBUART_Init
  87              		.thumb
  88              		.thumb_func
  89              		.type	USBUART_Init, %function
  90              	USBUART_Init:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 6


  91              	.LFB1:
 196:Generated_Source\PSoC5/USBUART.c **** 
 197:Generated_Source\PSoC5/USBUART.c **** 
 198:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Init
 200:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBUART.c **** *
 202:Generated_Source\PSoC5/USBUART.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBUART.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBUART.c **** * USBUART_Init() because the USBUART_Start() routine calls
 205:Generated_Source\PSoC5/USBUART.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBUART.c **** *
 207:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 208:Generated_Source\PSoC5/USBUART.c **** *  No.
 209:Generated_Source\PSoC5/USBUART.c **** *
 210:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBUART.c **** void USBUART_Init(void) 
 212:Generated_Source\PSoC5/USBUART.c **** {
  92              		.loc 1 212 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 8
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 80B5     		push	{r7, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 82B0     		sub	sp, sp, #8
 101              		.cfi_def_cfa_offset 16
 102 0004 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 213:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBUART.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBUART.c **** 
 217:Generated_Source\PSoC5/USBUART.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBUART.c ****     * USBUART_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBUART.c ****     */
 220:Generated_Source\PSoC5/USBUART.c **** 
 221:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= ~ (uint32) USBUART_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBUART.c **** 
 224:Generated_Source\PSoC5/USBUART.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBUART.c ****     USBUART_BUS_RST_CNT_REG = USBUART_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBUART.c **** 
 227:Generated_Source\PSoC5/USBUART.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBUART.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBUART.c ****     */
 230:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG = USBUART_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBUART.c **** 
 232:Generated_Source\PSoC5/USBUART.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG |= USBUART_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBUART.c **** 
 235:Generated_Source\PSoC5/USBUART.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 7


 240:Generated_Source\PSoC5/USBUART.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBUART.c **** 
 243:Generated_Source\PSoC5/USBUART.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_LVL_SEL_REG = USBUART_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBUART.c **** 
 246:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
 247:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG = USBUART_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBUART.c **** 
 249:Generated_Source\PSoC5/USBUART.c **** #else
 250:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
 104              		.loc 1 250 0
 105 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 106 000a 0346     		mov	r3, r0
 107 000c FB71     		strb	r3, [r7, #7]
 251:Generated_Source\PSoC5/USBUART.c **** 
 252:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBUART.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBUART.c **** 
 256:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
 108              		.loc 1 257 0
 109 000e 544A     		ldr	r2, .L6
 110 0010 534B     		ldr	r3, .L6
 111 0012 1B78     		ldrb	r3, [r3]
 112 0014 DBB2     		uxtb	r3, r3
 113 0016 43F00103 		orr	r3, r3, #1
 114 001a DBB2     		uxtb	r3, r3
 115 001c 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
 116              		.loc 1 259 0
 117 001e 514A     		ldr	r2, .L6+4
 118 0020 504B     		ldr	r3, .L6+4
 119 0022 1B78     		ldrb	r3, [r3]
 120 0024 DBB2     		uxtb	r3, r3
 121 0026 43F00103 		orr	r3, r3, #1
 122 002a DBB2     		uxtb	r3, r3
 123 002c 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USBUART.c **** 
 261:Generated_Source\PSoC5/USBUART.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
 124              		.loc 1 262 0
 125 002e 4E4B     		ldr	r3, .L6+8
 126 0030 0122     		movs	r2, #1
 127 0032 1A70     		strb	r2, [r3]
 263:Generated_Source\PSoC5/USBUART.c **** 
 264:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
 128              		.loc 1 264 0
 129 0034 4D4B     		ldr	r3, .L6+12
 130 0036 0222     		movs	r2, #2
 131 0038 1A70     		strb	r2, [r3]
 265:Generated_Source\PSoC5/USBUART.c **** 
 266:Generated_Source\PSoC5/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG &= (uint8) ~USBUART_USBIO_CR0_TEN;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 8


 132              		.loc 1 268 0
 133 003a 4D4A     		ldr	r2, .L6+16
 134 003c 4C4B     		ldr	r3, .L6+16
 135 003e 1B78     		ldrb	r3, [r3]
 136 0040 DBB2     		uxtb	r3, r3
 137 0042 03F07F03 		and	r3, r3, #127
 138 0046 DBB2     		uxtb	r3, r3
 139 0048 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 140              		.loc 1 269 0
 141 004a 0020     		movs	r0, #0
 142 004c FFF7FEFF 		bl	CyDelayUs
 270:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC5/USBUART.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBUART.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBUART.c ****     */
 274:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG &= (uint8) ~(USBUART_PM_USB_CR0_PD_N |
 143              		.loc 1 274 0
 144 0050 484A     		ldr	r2, .L6+20
 145 0052 484B     		ldr	r3, .L6+20
 146 0054 1B78     		ldrb	r3, [r3]
 147 0056 DBB2     		uxtb	r3, r3
 148 0058 23F00603 		bic	r3, r3, #6
 149 005c DBB2     		uxtb	r3, r3
 150 005e 1370     		strb	r3, [r2]
 275:Generated_Source\PSoC5/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBUART.c **** 
 277:Generated_Source\PSoC5/USBUART.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~USBUART_USBIO_CR1_IOMODE;
 151              		.loc 1 278 0
 152 0060 454A     		ldr	r2, .L6+24
 153 0062 454B     		ldr	r3, .L6+24
 154 0064 1B78     		ldrb	r3, [r3]
 155 0066 DBB2     		uxtb	r3, r3
 156 0068 23F02003 		bic	r3, r3, #32
 157 006c DBB2     		uxtb	r3, r3
 158 006e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USBUART.c **** 
 280:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
 159              		.loc 1 281 0
 160 0070 404A     		ldr	r2, .L6+20
 161 0072 404B     		ldr	r3, .L6+20
 162 0074 1B78     		ldrb	r3, [r3]
 163 0076 DBB2     		uxtb	r3, r3
 164 0078 43F00103 		orr	r3, r3, #1
 165 007c DBB2     		uxtb	r3, r3
 166 007e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_1US);
 167              		.loc 1 283 0
 168 0080 0120     		movs	r0, #1
 169 0082 FFF7FEFF 		bl	CyDelayUs
 284:Generated_Source\PSoC5/USBUART.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_VREF_RESTORE);
 170              		.loc 1 285 0
 171 0086 2820     		movs	r0, #40
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 9


 172 0088 FFF7FEFF 		bl	CyDelayUs
 286:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG &= (uint8) ~USBUART_DM_MASK;
 173              		.loc 1 287 0
 174 008c 3B4A     		ldr	r2, .L6+28
 175 008e 3B4B     		ldr	r3, .L6+28
 176 0090 1B78     		ldrb	r3, [r3]
 177 0092 DBB2     		uxtb	r3, r3
 178 0094 03F07F03 		and	r3, r3, #127
 179 0098 DBB2     		uxtb	r3, r3
 180 009a 1370     		strb	r3, [r2]
 288:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 181              		.loc 1 288 0
 182 009c 374A     		ldr	r2, .L6+28
 183 009e 374B     		ldr	r3, .L6+28
 184 00a0 1B78     		ldrb	r3, [r3]
 185 00a2 DBB2     		uxtb	r3, r3
 186 00a4 23F04003 		bic	r3, r3, #64
 187 00a8 DBB2     		uxtb	r3, r3
 188 00aa 1370     		strb	r3, [r2]
 289:Generated_Source\PSoC5/USBUART.c **** 
 290:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 189              		.loc 1 291 0
 190 00ac 314A     		ldr	r2, .L6+20
 191 00ae 314B     		ldr	r3, .L6+20
 192 00b0 1B78     		ldrb	r3, [r3]
 193 00b2 DBB2     		uxtb	r3, r3
 194 00b4 43F00203 		orr	r3, r3, #2
 195 00b8 DBB2     		uxtb	r3, r3
 196 00ba 1370     		strb	r3, [r2]
 292:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
 197              		.loc 1 292 0
 198 00bc 0220     		movs	r0, #2
 199 00be FFF7FEFF 		bl	CyDelayUs
 293:Generated_Source\PSoC5/USBUART.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 200              		.loc 1 294 0
 201 00c2 2C4A     		ldr	r2, .L6+20
 202 00c4 2B4B     		ldr	r3, .L6+20
 203 00c6 1B78     		ldrb	r3, [r3]
 204 00c8 DBB2     		uxtb	r3, r3
 205 00ca 43F00403 		orr	r3, r3, #4
 206 00ce DBB2     		uxtb	r3, r3
 207 00d0 1370     		strb	r3, [r2]
 295:Generated_Source\PSoC5/USBUART.c **** 
 296:Generated_Source\PSoC5/USBUART.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 208              		.loc 1 297 0
 209 00d2 2B4B     		ldr	r3, .L6+32
 210 00d4 0022     		movs	r2, #0
 211 00d6 1A70     		strb	r2, [r3]
 298:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 212              		.loc 1 298 0
 213 00d8 2A4B     		ldr	r3, .L6+36
 214 00da 0022     		movs	r2, #0
 215 00dc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 10


 299:Generated_Source\PSoC5/USBUART.c **** 
 300:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USBUART.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBUART.c ****     {
 304:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBUART.c **** 
 306:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBUART.c ****     }
 310:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBUART.c **** 
 312:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 216              		.loc 1 312 0
 217 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 218 00e0 1846     		mov	r0, r3
 219 00e2 FFF7FEFF 		bl	CyExitCriticalSection
 313:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBUART.c **** 
 315:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBUART.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_HI_VECT_NUM,  USBUART_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_HI_VECT_NUM, &USBUART_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBUART.c **** 
 321:Generated_Source\PSoC5/USBUART.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_LO_VECT_NUM,  USBUART_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_LO_VECT_NUM, &USBUART_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBUART.c **** 
 325:Generated_Source\PSoC5/USBUART.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_MED_VECT_NUM,  USBUART_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_MED_VECT_NUM, &USBUART_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBUART.c **** 
 329:Generated_Source\PSoC5/USBUART.c **** #else
 330:Generated_Source\PSoC5/USBUART.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 220              		.loc 1 331 0
 221 00e6 0721     		movs	r1, #7
 222 00e8 1720     		movs	r0, #23
 223 00ea FFF7FEFF 		bl	CyIntSetPriority
 332:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 224              		.loc 1 332 0
 225 00ee 2649     		ldr	r1, .L6+40
 226 00f0 1720     		movs	r0, #23
 227 00f2 FFF7FEFF 		bl	CyIntSetVector
 333:Generated_Source\PSoC5/USBUART.c **** 
 334:Generated_Source\PSoC5/USBUART.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 228              		.loc 1 335 0
 229 00f6 0721     		movs	r1, #7
 230 00f8 1820     		movs	r0, #24
 231 00fa FFF7FEFF 		bl	CyIntSetPriority
 336:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
 232              		.loc 1 336 0
 233 00fe 2349     		ldr	r1, .L6+44
 234 0100 1820     		movs	r0, #24
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 11


 235 0102 FFF7FEFF 		bl	CyIntSetVector
 337:Generated_Source\PSoC5/USBUART.c **** 
 338:Generated_Source\PSoC5/USBUART.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_SOF_VECT_NUM,  USBUART_SOF_PRIOR);
 236              		.loc 1 340 0
 237 0106 0721     		movs	r1, #7
 238 0108 1520     		movs	r0, #21
 239 010a FFF7FEFF 		bl	CyIntSetPriority
 341:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM, &USBUART_SOF_ISR);
 240              		.loc 1 341 0
 241 010e 2049     		ldr	r1, .L6+48
 242 0110 1520     		movs	r0, #21
 243 0112 FFF7FEFF 		bl	CyIntSetVector
 342:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBUART.c **** 
 344:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_1_VECT_NUM,  USBUART_EP_1_PRIOR);
 244              		.loc 1 346 0
 245 0116 0721     		movs	r1, #7
 246 0118 0120     		movs	r0, #1
 247 011a FFF7FEFF 		bl	CyIntSetPriority
 347:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,  &USBUART_EP_1_ISR);
 248              		.loc 1 347 0
 249 011e 1D49     		ldr	r1, .L6+52
 250 0120 0120     		movs	r0, #1
 251 0122 FFF7FEFF 		bl	CyIntSetVector
 348:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBUART.c **** 
 350:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_2_VECT_NUM,  USBUART_EP_2_PRIOR);
 252              		.loc 1 352 0
 253 0126 0721     		movs	r1, #7
 254 0128 0220     		movs	r0, #2
 255 012a FFF7FEFF 		bl	CyIntSetPriority
 353:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM, &USBUART_EP_2_ISR);
 256              		.loc 1 353 0
 257 012e 1A49     		ldr	r1, .L6+56
 258 0130 0220     		movs	r0, #2
 259 0132 FFF7FEFF 		bl	CyIntSetVector
 354:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBUART.c **** 
 356:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_3_VECT_NUM,  USBUART_EP_3_PRIOR);
 260              		.loc 1 358 0
 261 0136 0721     		movs	r1, #7
 262 0138 0320     		movs	r0, #3
 263 013a FFF7FEFF 		bl	CyIntSetPriority
 359:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM, &USBUART_EP_3_ISR);
 264              		.loc 1 359 0
 265 013e 1749     		ldr	r1, .L6+60
 266 0140 0320     		movs	r0, #3
 267 0142 FFF7FEFF 		bl	CyIntSetVector
 360:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 12


 361:Generated_Source\PSoC5/USBUART.c **** 
 362:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_4_VECT_NUM,  USBUART_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM, &USBUART_EP_4_ISR);
 366:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBUART.c **** 
 368:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_5_VECT_NUM,  USBUART_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM, &USBUART_EP_5_ISR);
 372:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBUART.c **** 
 374:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_6_VECT_NUM,  USBUART_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM, &USBUART_EP_6_ISR);
 378:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBUART.c **** 
 380:Generated_Source\PSoC5/USBUART.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_7_VECT_NUM,  USBUART_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM, &USBUART_EP_7_ISR);
 384:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USBUART.c **** 
 386:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_8_VECT_NUM,  USBUART_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM, &USBUART_EP_8_ISR);
 390:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBUART.c **** 
 392:Generated_Source\PSoC5/USBUART.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_ARB_VECT_NUM,  USBUART_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM, &USBUART_ARB_ISR);
 396:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBUART.c **** 
 399:Generated_Source\PSoC5/USBUART.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_DP_INTC_VECT_NUM,  USBUART_DP_INTC_PRIORITY);
 268              		.loc 1 401 0
 269 0146 0721     		movs	r1, #7
 270 0148 0C20     		movs	r0, #12
 271 014a FFF7FEFF 		bl	CyIntSetPriority
 402:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 272              		.loc 1 402 0
 273 014e 1449     		ldr	r1, .L6+64
 274 0150 0C20     		movs	r0, #12
 275 0152 FFF7FEFF 		bl	CyIntSetVector
 403:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBUART.c **** 
 405:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBUART.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitEpDma();
 408:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBUART.c **** }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 13


 276              		.loc 1 409 0
 277 0156 00BF     		nop
 278 0158 0837     		adds	r7, r7, #8
 279              		.cfi_def_cfa_offset 8
 280 015a BD46     		mov	sp, r7
 281              		.cfi_def_cfa_register 13
 282              		@ sp needed
 283 015c 80BD     		pop	{r7, pc}
 284              	.L7:
 285 015e 00BF     		.align	2
 286              	.L6:
 287 0160 A5430040 		.word	1073759141
 288 0164 B5430040 		.word	1073759157
 289 0168 9D600040 		.word	1073766557
 290 016c 09600040 		.word	1073766409
 291 0170 10600040 		.word	1073766416
 292 0174 94430040 		.word	1073759124
 293 0178 12600040 		.word	1073766418
 294 017c F8510040 		.word	1073762808
 295 0180 84600040 		.word	1073766532
 296 0184 85600040 		.word	1073766533
 297 0188 00000000 		.word	USBUART_BUS_RESET_ISR
 298 018c 00000000 		.word	USBUART_EP_0_ISR
 299 0190 00000000 		.word	USBUART_SOF_ISR
 300 0194 00000000 		.word	USBUART_EP_1_ISR
 301 0198 00000000 		.word	USBUART_EP_2_ISR
 302 019c 00000000 		.word	USBUART_EP_3_ISR
 303 01a0 00000000 		.word	USBUART_DP_ISR
 304              		.cfi_endproc
 305              	.LFE1:
 306              		.size	USBUART_Init, .-USBUART_Init
 307              		.section	.text.USBUART_InitComponent,"ax",%progbits
 308              		.align	2
 309              		.global	USBUART_InitComponent
 310              		.thumb
 311              		.thumb_func
 312              		.type	USBUART_InitComponent, %function
 313              	USBUART_InitComponent:
 314              	.LFB2:
 410:Generated_Source\PSoC5/USBUART.c **** 
 411:Generated_Source\PSoC5/USBUART.c **** 
 412:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_InitComponent
 414:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBUART.c **** *
 416:Generated_Source\PSoC5/USBUART.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBUART.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBUART.c **** *
 419:Generated_Source\PSoC5/USBUART.c **** * \param device:
 420:Generated_Source\PSoC5/USBUART.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBUART.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBUART.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBUART.c **** *   field.
 424:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 14


 428:Generated_Source\PSoC5/USBUART.c **** *   following list.
 429:Generated_Source\PSoC5/USBUART.c **** *
 430:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBUART.c **** *
 433:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBUART.c **** *
 436:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBUART.c **** *
 443:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 444:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_device
 445:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_transferState
 446:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 447:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 448:Generated_Source\PSoC5/USBUART.c **** *
 449:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBUART.c **** *
 454:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBUART.c **** *
 456:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 457:Generated_Source\PSoC5/USBUART.c **** *  No.
 458:Generated_Source\PSoC5/USBUART.c **** *
 459:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBUART.c **** {
 315              		.loc 1 461 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 16
 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319 0000 80B5     		push	{r7, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 7, -8
 322              		.cfi_offset 14, -4
 323 0002 84B0     		sub	sp, sp, #16
 324              		.cfi_def_cfa_offset 24
 325 0004 00AF     		add	r7, sp, #0
 326              		.cfi_def_cfa_register 7
 327 0006 0346     		mov	r3, r0
 328 0008 0A46     		mov	r2, r1
 329 000a FB71     		strb	r3, [r7, #7]
 330 000c 1346     		mov	r3, r2
 331 000e BB71     		strb	r3, [r7, #6]
 462:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBUART.c ****     */
 466:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 15


 468:Generated_Source\PSoC5/USBUART.c **** 
 469:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 332              		.loc 1 469 0
 333 0010 0023     		movs	r3, #0
 334 0012 FB73     		strb	r3, [r7, #15]
 335 0014 06E0     		b	.L9
 336              	.L10:
 470:Generated_Source\PSoC5/USBUART.c ****     {
 471:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 337              		.loc 1 471 0 discriminator 3
 338 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 339 0018 334A     		ldr	r2, .L16
 340 001a 0121     		movs	r1, #1
 341 001c D154     		strb	r1, [r2, r3]
 469:Generated_Source\PSoC5/USBUART.c ****     {
 342              		.loc 1 469 0 discriminator 3
 343 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 344 0020 0133     		adds	r3, r3, #1
 345 0022 FB73     		strb	r3, [r7, #15]
 346              	.L9:
 469:Generated_Source\PSoC5/USBUART.c ****     {
 347              		.loc 1 469 0 is_stmt 0 discriminator 1
 348 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 349 0026 012B     		cmp	r3, #1
 350 0028 F5D9     		bls	.L10
 472:Generated_Source\PSoC5/USBUART.c ****     }
 473:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBUART.c **** 
 475:Generated_Source\PSoC5/USBUART.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBUART.c ****     USBUART_device = device;
 351              		.loc 1 476 0 is_stmt 1
 352 002a 304A     		ldr	r2, .L16+4
 353 002c FB79     		ldrb	r3, [r7, #7]
 354 002e 1370     		strb	r3, [r2]
 477:Generated_Source\PSoC5/USBUART.c **** 
 478:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 355              		.loc 1 479 0
 356 0030 2F4B     		ldr	r3, .L16+8
 357 0032 0022     		movs	r2, #0
 358 0034 1A70     		strb	r2, [r3]
 480:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 359              		.loc 1 480 0
 360 0036 2F4B     		ldr	r3, .L16+12
 361 0038 0022     		movs	r2, #0
 362 003a 1A70     		strb	r2, [r3]
 481:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 363              		.loc 1 481 0
 364 003c 2E4B     		ldr	r3, .L16+16
 365 003e 0022     		movs	r2, #0
 366 0040 1A70     		strb	r2, [r3]
 482:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 367              		.loc 1 482 0
 368 0042 2E4B     		ldr	r3, .L16+20
 369 0044 0022     		movs	r2, #0
 370 0046 1A70     		strb	r2, [r3]
 483:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 16


 371              		.loc 1 483 0
 372 0048 2D4B     		ldr	r3, .L16+24
 373 004a 0022     		movs	r2, #0
 374 004c 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 375              		.loc 1 484 0
 376 004e 2D4B     		ldr	r3, .L16+28
 377 0050 0022     		movs	r2, #0
 378 0052 1A70     		strb	r2, [r3]
 485:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 379              		.loc 1 485 0
 380 0054 2C4B     		ldr	r3, .L16+32
 381 0056 0022     		movs	r2, #0
 382 0058 1A70     		strb	r2, [r3]
 486:Generated_Source\PSoC5/USBUART.c **** 
 487:Generated_Source\PSoC5/USBUART.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBUART.c **** #else
 493:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 383              		.loc 1 493 0
 384 005a 2C4B     		ldr	r3, .L16+36
 385 005c 4FF40002 		mov	r2, #8388608
 386 0060 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 387              		.loc 1 494 0
 388 0062 2A4B     		ldr	r3, .L16+36
 389 0064 4FF08072 		mov	r2, #16777216
 390 0068 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBUART.c **** 
 496:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 391              		.loc 1 497 0
 392 006a 284B     		ldr	r3, .L16+36
 393 006c 4FF40012 		mov	r2, #2097152
 394 0070 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBUART.c **** 
 500:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 395              		.loc 1 501 0
 396 0072 264B     		ldr	r3, .L16+36
 397 0074 0222     		movs	r2, #2
 398 0076 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBUART.c **** 
 504:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 399              		.loc 1 505 0
 400 0078 244B     		ldr	r3, .L16+36
 401 007a 0422     		movs	r2, #4
 402 007c 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBUART.c **** 
 508:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 17


 509:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 403              		.loc 1 509 0
 404 007e 234B     		ldr	r3, .L16+36
 405 0080 0822     		movs	r2, #8
 406 0082 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBUART.c **** 
 512:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBUART.c **** 
 516:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBUART.c **** 
 520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBUART.c **** 
 524:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBUART.c **** 
 528:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBUART.c **** 
 533:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBUART.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_INT_EN_REG = USBUART_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBUART.c **** 
 537:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBUART.c **** #endif   /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBUART.c **** 
 542:Generated_Source\PSoC5/USBUART.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBUART.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_CFG_REG = USBUART_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBUART.c **** 
 547:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBUART.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBUART.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBUART.c **** 
 551:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBUART.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBUART_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBUART.c **** 
 557:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBUART.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBUART.c ****         #else
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 18


 562:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBUART.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBUART.c **** 
 572:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBUART.c ****     switch(mode)
 407              		.loc 1 573 0
 408 0084 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 409 0086 002B     		cmp	r3, #0
 410 0088 02D0     		beq	.L12
 411 008a 012B     		cmp	r3, #1
 412 008c 09D0     		beq	.L13
 413 008e 11E0     		b	.L15
 414              	.L12:
 574:Generated_Source\PSoC5/USBUART.c ****     {
 575:Generated_Source\PSoC5/USBUART.c ****     case USBUART_3V_OPERATION:
 576:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 415              		.loc 1 577 0
 416 0090 1F4A     		ldr	r2, .L16+40
 417 0092 1F4B     		ldr	r3, .L16+40
 418 0094 1B78     		ldrb	r3, [r3]
 419 0096 DBB2     		uxtb	r3, r3
 420 0098 23F00103 		bic	r3, r3, #1
 421 009c DBB2     		uxtb	r3, r3
 422 009e 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBUART.c ****         break;
 423              		.loc 1 578 0
 424 00a0 11E0     		b	.L14
 425              	.L13:
 579:Generated_Source\PSoC5/USBUART.c **** 
 580:Generated_Source\PSoC5/USBUART.c ****     case USBUART_5V_OPERATION:
 581:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 426              		.loc 1 582 0
 427 00a2 1B4A     		ldr	r2, .L16+40
 428 00a4 1A4B     		ldr	r3, .L16+40
 429 00a6 1B78     		ldrb	r3, [r3]
 430 00a8 DBB2     		uxtb	r3, r3
 431 00aa 43F00103 		orr	r3, r3, #1
 432 00ae DBB2     		uxtb	r3, r3
 433 00b0 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USBUART.c ****         break;
 434              		.loc 1 583 0
 435 00b2 08E0     		b	.L14
 436              	.L15:
 584:Generated_Source\PSoC5/USBUART.c **** 
 585:Generated_Source\PSoC5/USBUART.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_VDDD_MV < USBUART_3500MV)
 587:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 19


 589:Generated_Source\PSoC5/USBUART.c ****     #else
 590:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 437              		.loc 1 591 0
 438 00b4 164A     		ldr	r2, .L16+40
 439 00b6 164B     		ldr	r3, .L16+40
 440 00b8 1B78     		ldrb	r3, [r3]
 441 00ba DBB2     		uxtb	r3, r3
 442 00bc 43F00103 		orr	r3, r3, #1
 443 00c0 DBB2     		uxtb	r3, r3
 444 00c2 1370     		strb	r3, [r2]
 592:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_VDDD_MV < USBUART_3500MV) */
 593:Generated_Source\PSoC5/USBUART.c ****         break;
 445              		.loc 1 593 0
 446 00c4 00BF     		nop
 447              	.L14:
 594:Generated_Source\PSoC5/USBUART.c ****     }
 595:Generated_Source\PSoC5/USBUART.c **** 
 596:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG &= (uint32) ~USBUART_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBUART.c **** 
 600:Generated_Source\PSoC5/USBUART.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CNT_REG = USBUART_CLEAR_REG;
 602:Generated_Source\PSoC5/USBUART.c **** 
 603:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBUART.c **** 
 606:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBUART.c ****         if (NULL != USBUART_GetBOSPtr())
 608:Generated_Source\PSoC5/USBUART.c ****         {
 609:Generated_Source\PSoC5/USBUART.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBUART.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBUART.c ****             */
 612:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG = (USBUART_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBUART.c ****                                              USBUART_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBUART.c ****         }
 615:Generated_Source\PSoC5/USBUART.c ****         else
 616:Generated_Source\PSoC5/USBUART.c ****         {
 617:Generated_Source\PSoC5/USBUART.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG &= (uint32) ~USBUART_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBUART.c ****         }
 620:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBUART.c **** 
 622:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBUART.c **** 
 625:Generated_Source\PSoC5/USBUART.c **** #else
 626:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 448              		.loc 1 627 0
 449 00c6 134B     		ldr	r3, .L16+44
 450 00c8 0322     		movs	r2, #3
 451 00ca 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBUART.c **** 
 629:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 20


 452              		.loc 1 630 0
 453 00cc 124B     		ldr	r3, .L16+48
 454 00ce 8022     		movs	r2, #128
 455 00d0 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 456              		.loc 1 631 0
 457 00d2 0120     		movs	r0, #1
 458 00d4 FFF7FEFF 		bl	CyDelayCycles
 632:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBUART.c **** 
 634:Generated_Source\PSoC5/USBUART.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG = USBUART_USBIO_CR1_USBPUEN;
 459              		.loc 1 635 0
 460 00d8 104B     		ldr	r3, .L16+52
 461 00da 0422     		movs	r2, #4
 462 00dc 1A70     		strb	r2, [r3]
 636:Generated_Source\PSoC5/USBUART.c **** }
 463              		.loc 1 636 0
 464 00de 00BF     		nop
 465 00e0 1037     		adds	r7, r7, #16
 466              		.cfi_def_cfa_offset 8
 467 00e2 BD46     		mov	sp, r7
 468              		.cfi_def_cfa_register 13
 469              		@ sp needed
 470 00e4 80BD     		pop	{r7, pc}
 471              	.L17:
 472 00e6 00BF     		.align	2
 473              	.L16:
 474 00e8 00000000 		.word	USBUART_hidProtocol
 475 00ec 00000000 		.word	USBUART_device
 476 00f0 00000000 		.word	USBUART_transferState
 477 00f4 00000000 		.word	USBUART_configurationChanged
 478 00f8 00000000 		.word	USBUART_configuration
 479 00fc 00000000 		.word	USBUART_interfaceNumber
 480 0100 00000000 		.word	USBUART_deviceAddress
 481 0104 00000000 		.word	USBUART_deviceStatus
 482 0108 00000000 		.word	USBUART_lastPacketSize
 483 010c 00E100E0 		.word	-536813312
 484 0110 09600040 		.word	1073766409
 485 0114 28600040 		.word	1073766440
 486 0118 08600040 		.word	1073766408
 487 011c 12600040 		.word	1073766418
 488              		.cfi_endproc
 489              	.LFE2:
 490              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 491              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 492              		.align	2
 493              		.global	USBUART_ReInitComponent
 494              		.thumb
 495              		.thumb_func
 496              		.type	USBUART_ReInitComponent, %function
 497              	USBUART_ReInitComponent:
 498              	.LFB3:
 637:Generated_Source\PSoC5/USBUART.c **** 
 638:Generated_Source\PSoC5/USBUART.c **** 
 639:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReInitComponent
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 21


 641:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBUART.c **** *
 643:Generated_Source\PSoC5/USBUART.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBUART.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBUART.c **** *
 646:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 647:Generated_Source\PSoC5/USBUART.c **** *   USBUART_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBUART.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBUART.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBUART.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBUART.c **** *   USBUART_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBUART.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBUART.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBUART.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBUART.c **** *   USBUART_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBUART.c **** *
 667:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 668:Generated_Source\PSoC5/USBUART.c **** *  No.
 669:Generated_Source\PSoC5/USBUART.c **** *
 670:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBUART.c **** void USBUART_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBUART.c **** {
 499              		.loc 1 672 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 8
 502              		@ frame_needed = 1, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 504 0000 80B4     		push	{r7}
 505              		.cfi_def_cfa_offset 4
 506              		.cfi_offset 7, -4
 507 0002 83B0     		sub	sp, sp, #12
 508              		.cfi_def_cfa_offset 16
 509 0004 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
 673:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBUART.c ****     */
 676:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBUART.c **** 
 679:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 511              		.loc 1 679 0
 512 0006 0023     		movs	r3, #0
 513 0008 FB71     		strb	r3, [r7, #7]
 514 000a 06E0     		b	.L19
 515              	.L20:
 680:Generated_Source\PSoC5/USBUART.c ****     {
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 22


 681:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 516              		.loc 1 681 0 discriminator 3
 517 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 518 000e 144A     		ldr	r2, .L21
 519 0010 0121     		movs	r1, #1
 520 0012 D154     		strb	r1, [r2, r3]
 679:Generated_Source\PSoC5/USBUART.c ****     {
 521              		.loc 1 679 0 discriminator 3
 522 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 523 0016 0133     		adds	r3, r3, #1
 524 0018 FB71     		strb	r3, [r7, #7]
 525              	.L19:
 679:Generated_Source\PSoC5/USBUART.c ****     {
 526              		.loc 1 679 0 is_stmt 0 discriminator 1
 527 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 528 001c 012B     		cmp	r3, #1
 529 001e F5D9     		bls	.L20
 682:Generated_Source\PSoC5/USBUART.c ****     }
 683:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBUART.c **** 
 685:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 530              		.loc 1 686 0 is_stmt 1
 531 0020 104B     		ldr	r3, .L21+4
 532 0022 0022     		movs	r2, #0
 533 0024 1A70     		strb	r2, [r3]
 687:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 534              		.loc 1 687 0
 535 0026 104B     		ldr	r3, .L21+8
 536 0028 0022     		movs	r2, #0
 537 002a 1A70     		strb	r2, [r3]
 688:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 538              		.loc 1 688 0
 539 002c 0F4B     		ldr	r3, .L21+12
 540 002e 0022     		movs	r2, #0
 541 0030 1A70     		strb	r2, [r3]
 689:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 542              		.loc 1 689 0
 543 0032 0F4B     		ldr	r3, .L21+16
 544 0034 0022     		movs	r2, #0
 545 0036 1A70     		strb	r2, [r3]
 690:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 546              		.loc 1 690 0
 547 0038 0E4B     		ldr	r3, .L21+20
 548 003a 0022     		movs	r2, #0
 549 003c 1A70     		strb	r2, [r3]
 691:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 550              		.loc 1 691 0
 551 003e 0E4B     		ldr	r3, .L21+24
 552 0040 0022     		movs	r2, #0
 553 0042 1A70     		strb	r2, [r3]
 692:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 554              		.loc 1 692 0
 555 0044 0D4B     		ldr	r3, .L21+28
 556 0046 0022     		movs	r2, #0
 557 0048 1A70     		strb	r2, [r3]
 693:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 23


 694:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBUART.c **** #else
 698:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 558              		.loc 1 699 0
 559 004a 0D4B     		ldr	r3, .L21+32
 560 004c 0322     		movs	r2, #3
 561 004e 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBUART.c **** 
 702:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 562              		.loc 1 703 0
 563 0050 0C4B     		ldr	r3, .L21+36
 564 0052 8022     		movs	r2, #128
 565 0054 1A70     		strb	r2, [r3]
 704:Generated_Source\PSoC5/USBUART.c **** }
 566              		.loc 1 704 0
 567 0056 00BF     		nop
 568 0058 0C37     		adds	r7, r7, #12
 569              		.cfi_def_cfa_offset 4
 570 005a BD46     		mov	sp, r7
 571              		.cfi_def_cfa_register 13
 572              		@ sp needed
 573 005c 80BC     		pop	{r7}
 574              		.cfi_restore 7
 575              		.cfi_def_cfa_offset 0
 576 005e 7047     		bx	lr
 577              	.L22:
 578              		.align	2
 579              	.L21:
 580 0060 00000000 		.word	USBUART_hidProtocol
 581 0064 00000000 		.word	USBUART_transferState
 582 0068 00000000 		.word	USBUART_configurationChanged
 583 006c 00000000 		.word	USBUART_configuration
 584 0070 00000000 		.word	USBUART_interfaceNumber
 585 0074 00000000 		.word	USBUART_deviceAddress
 586 0078 00000000 		.word	USBUART_deviceStatus
 587 007c 00000000 		.word	USBUART_lastPacketSize
 588 0080 28600040 		.word	1073766440
 589 0084 08600040 		.word	1073766408
 590              		.cfi_endproc
 591              	.LFE3:
 592              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 593              		.section	.text.USBUART_Stop,"ax",%progbits
 594              		.align	2
 595              		.global	USBUART_Stop
 596              		.thumb
 597              		.thumb_func
 598              		.type	USBUART_Stop, %function
 599              	USBUART_Stop:
 600              	.LFB4:
 705:Generated_Source\PSoC5/USBUART.c **** 
 706:Generated_Source\PSoC5/USBUART.c **** 
 707:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 24


 708:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Stop
 709:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBUART.c **** *
 711:Generated_Source\PSoC5/USBUART.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBUART.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBUART.c **** *
 714:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 715:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 716:Generated_Source\PSoC5/USBUART.c **** *
 717:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBUART.c **** *
 722:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 723:Generated_Source\PSoC5/USBUART.c **** *
 724:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configurationChanged
 725:Generated_Source\PSoC5/USBUART.c **** *
 726:Generated_Source\PSoC5/USBUART.c **** *   USBUART_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBUART.c **** *
 728:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBUART.c **** void USBUART_Stop(void) 
 730:Generated_Source\PSoC5/USBUART.c **** {
 601              		.loc 1 730 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 8
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605 0000 80B5     		push	{r7, lr}
 606              		.cfi_def_cfa_offset 8
 607              		.cfi_offset 7, -8
 608              		.cfi_offset 14, -4
 609 0002 82B0     		sub	sp, sp, #8
 610              		.cfi_def_cfa_offset 16
 611 0004 00AF     		add	r7, sp, #0
 612              		.cfi_def_cfa_register 7
 731:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBUART.c **** 
 733:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBUART.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBUART.c ****     USBUART_Stop_DMA(USBUART_MAX_EP);
 736:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBUART.c **** 
 738:Generated_Source\PSoC5/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
 613              		.loc 1 738 0
 614 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 615 000a 0346     		mov	r3, r0
 616 000c FB71     		strb	r3, [r7, #7]
 739:Generated_Source\PSoC5/USBUART.c **** 
 740:Generated_Source\PSoC5/USBUART.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG &= (uint8) ~USBUART_CR0_ENABLE;
 617              		.loc 1 741 0
 618 000e 324A     		ldr	r2, .L24
 619 0010 314B     		ldr	r3, .L24
 620 0012 1B78     		ldrb	r3, [r3]
 621 0014 DBB2     		uxtb	r3, r3
 622 0016 03F07F03 		and	r3, r3, #127
 623 001a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 25


 624 001c 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBUART.c **** 
 743:Generated_Source\PSoC5/USBUART.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~ USBUART_USBIO_CR1_USBPUEN;
 625              		.loc 1 744 0
 626 001e 2F4A     		ldr	r2, .L24+4
 627 0020 2E4B     		ldr	r3, .L24+4
 628 0022 1B78     		ldrb	r3, [r3]
 629 0024 DBB2     		uxtb	r3, r3
 630 0026 23F00403 		bic	r3, r3, #4
 631 002a DBB2     		uxtb	r3, r3
 632 002c 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USBUART.c **** 
 746:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBUART.c **** #else
 750:Generated_Source\PSoC5/USBUART.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG  &= (uint8) ~USBUART_PM_ACT_EN_FSUSB;
 633              		.loc 1 751 0
 634 002e 2C4A     		ldr	r2, .L24+8
 635 0030 2B4B     		ldr	r3, .L24+8
 636 0032 1B78     		ldrb	r3, [r3]
 637 0034 DBB2     		uxtb	r3, r3
 638 0036 23F00103 		bic	r3, r3, #1
 639 003a DBB2     		uxtb	r3, r3
 640 003c 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 641              		.loc 1 752 0
 642 003e 294A     		ldr	r2, .L24+12
 643 0040 284B     		ldr	r3, .L24+12
 644 0042 1B78     		ldrb	r3, [r3]
 645 0044 DBB2     		uxtb	r3, r3
 646 0046 23F00103 		bic	r3, r3, #1
 647 004a DBB2     		uxtb	r3, r3
 648 004c 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USBUART.c **** 
 754:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBUART.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG |= (uint8) USBUART_DM_MASK;
 649              		.loc 1 756 0
 650 004e 264A     		ldr	r2, .L24+16
 651 0050 254B     		ldr	r3, .L24+16
 652 0052 1B78     		ldrb	r3, [r3]
 653 0054 DBB2     		uxtb	r3, r3
 654 0056 63F07F03 		orn	r3, r3, #127
 655 005a DBB2     		uxtb	r3, r3
 656 005c 1370     		strb	r3, [r2]
 757:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 657              		.loc 1 757 0
 658 005e 224A     		ldr	r2, .L24+16
 659 0060 214B     		ldr	r3, .L24+16
 660 0062 1B78     		ldrb	r3, [r3]
 661 0064 DBB2     		uxtb	r3, r3
 662 0066 43F04003 		orr	r3, r3, #64
 663 006a DBB2     		uxtb	r3, r3
 664 006c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 26


 758:Generated_Source\PSoC5/USBUART.c **** 
 759:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBUART.c **** 
 761:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 665              		.loc 1 761 0
 666 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 667 0070 1846     		mov	r0, r3
 668 0072 FFF7FEFF 		bl	CyExitCriticalSection
 762:Generated_Source\PSoC5/USBUART.c **** 
 763:Generated_Source\PSoC5/USBUART.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBUART.c **** #else
 769:Generated_Source\PSoC5/USBUART.c **** 
 770:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 669              		.loc 1 770 0
 670 0076 1D4B     		ldr	r3, .L24+20
 671 0078 4FF40002 		mov	r2, #8388608
 672 007c 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 673              		.loc 1 771 0
 674 007e 1B4B     		ldr	r3, .L24+20
 675 0080 4FF08072 		mov	r2, #16777216
 676 0084 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBUART.c **** 
 773:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 677              		.loc 1 774 0
 678 0086 194B     		ldr	r3, .L24+20
 679 0088 4FF40012 		mov	r2, #2097152
 680 008c 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBUART.c **** 
 777:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 681              		.loc 1 778 0
 682 008e 174B     		ldr	r3, .L24+20
 683 0090 0222     		movs	r2, #2
 684 0092 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBUART.c **** 
 781:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 685              		.loc 1 782 0
 686 0094 154B     		ldr	r3, .L24+20
 687 0096 0422     		movs	r2, #4
 688 0098 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBUART.c **** 
 785:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
 689              		.loc 1 786 0
 690 009a 144B     		ldr	r3, .L24+20
 691 009c 0822     		movs	r2, #8
 692 009e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 27


 787:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBUART.c **** 
 789:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBUART.c **** 
 793:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBUART.c **** 
 797:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBUART.c **** 
 801:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBUART.c **** 
 805:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBUART.c **** 
 809:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBUART.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBUART.c ****         (void) USBUART_Dp_ClearInterrupt();
 693              		.loc 1 811 0
 694 00a0 FFF7FEFF 		bl	USBUART_Dp_ClearInterrupt
 812:Generated_Source\PSoC5/USBUART.c ****         CyIntClearPending(USBUART_DP_INTC_VECT_NUM);
 695              		.loc 1 812 0
 696 00a4 124B     		ldr	r3, .L24+24
 697 00a6 4FF48052 		mov	r2, #4096
 698 00aa 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBUART.c **** 
 815:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBUART.c **** 
 817:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 699              		.loc 1 818 0
 700 00ac 114B     		ldr	r3, .L24+28
 701 00ae 0022     		movs	r2, #0
 702 00b0 1A70     		strb	r2, [r3]
 819:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 703              		.loc 1 819 0
 704 00b2 114B     		ldr	r3, .L24+32
 705 00b4 0022     		movs	r2, #0
 706 00b6 1A70     		strb	r2, [r3]
 820:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 707              		.loc 1 820 0
 708 00b8 104B     		ldr	r3, .L24+36
 709 00ba 0022     		movs	r2, #0
 710 00bc 1A70     		strb	r2, [r3]
 821:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 711              		.loc 1 821 0
 712 00be 104B     		ldr	r3, .L24+40
 713 00c0 0022     		movs	r2, #0
 714 00c2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 28


 822:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 715              		.loc 1 822 0
 716 00c4 0F4B     		ldr	r3, .L24+44
 717 00c6 0022     		movs	r2, #0
 718 00c8 1A70     		strb	r2, [r3]
 823:Generated_Source\PSoC5/USBUART.c **** 
 824:Generated_Source\PSoC5/USBUART.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBUART.c ****     USBUART_initVar = 0u;
 719              		.loc 1 825 0
 720 00ca 0F4B     		ldr	r3, .L24+48
 721 00cc 0022     		movs	r2, #0
 722 00ce 1A70     		strb	r2, [r3]
 826:Generated_Source\PSoC5/USBUART.c **** }
 723              		.loc 1 826 0
 724 00d0 00BF     		nop
 725 00d2 0837     		adds	r7, r7, #8
 726              		.cfi_def_cfa_offset 8
 727 00d4 BD46     		mov	sp, r7
 728              		.cfi_def_cfa_register 13
 729              		@ sp needed
 730 00d6 80BD     		pop	{r7, pc}
 731              	.L25:
 732              		.align	2
 733              	.L24:
 734 00d8 08600040 		.word	1073766408
 735 00dc 12600040 		.word	1073766418
 736 00e0 A5430040 		.word	1073759141
 737 00e4 B5430040 		.word	1073759157
 738 00e8 F8510040 		.word	1073762808
 739 00ec 80E100E0 		.word	-536813184
 740 00f0 80E200E0 		.word	-536812928
 741 00f4 00000000 		.word	USBUART_configurationChanged
 742 00f8 00000000 		.word	USBUART_configuration
 743 00fc 00000000 		.word	USBUART_interfaceNumber
 744 0100 00000000 		.word	USBUART_deviceAddress
 745 0104 00000000 		.word	USBUART_deviceStatus
 746 0108 00000000 		.word	USBUART_initVar
 747              		.cfi_endproc
 748              	.LFE4:
 749              		.size	USBUART_Stop, .-USBUART_Stop
 750              		.section	.text.USBUART_CheckActivity,"ax",%progbits
 751              		.align	2
 752              		.global	USBUART_CheckActivity
 753              		.thumb
 754              		.thumb_func
 755              		.type	USBUART_CheckActivity, %function
 756              	USBUART_CheckActivity:
 757              	.LFB5:
 827:Generated_Source\PSoC5/USBUART.c **** 
 828:Generated_Source\PSoC5/USBUART.c **** 
 829:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_CheckActivity
 831:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBUART.c **** *
 833:Generated_Source\PSoC5/USBUART.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBUART.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBUART.c **** *  provides a way to determine whether any USB bus activity occurred. The
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 29


 836:Generated_Source\PSoC5/USBUART.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBUART.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBUART.c **** *
 839:Generated_Source\PSoC5/USBUART.c **** *
 840:Generated_Source\PSoC5/USBUART.c **** * \return
 841:Generated_Source\PSoC5/USBUART.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBUART.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBUART.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBUART.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBUART.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBUART.c **** *
 847:Generated_Source\PSoC5/USBUART.c **** *
 848:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBUART.c **** {
 758              		.loc 1 850 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 8
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 763 0000 80B4     		push	{r7}
 764              		.cfi_def_cfa_offset 4
 765              		.cfi_offset 7, -4
 766 0002 83B0     		sub	sp, sp, #12
 767              		.cfi_def_cfa_offset 16
 768 0004 00AF     		add	r7, sp, #0
 769              		.cfi_def_cfa_register 7
 851:Generated_Source\PSoC5/USBUART.c ****     uint8 cr1Reg = USBUART_CR1_REG;
 770              		.loc 1 851 0
 771 0006 0B4B     		ldr	r3, .L30
 772 0008 1B78     		ldrb	r3, [r3]
 773 000a FB71     		strb	r3, [r7, #7]
 852:Generated_Source\PSoC5/USBUART.c **** 
 853:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = (cr1Reg & (uint8) ~USBUART_CR1_BUS_ACTIVITY);
 774              		.loc 1 854 0
 775 000c 094A     		ldr	r2, .L30
 776 000e FB79     		ldrb	r3, [r7, #7]
 777 0010 23F00403 		bic	r3, r3, #4
 778 0014 DBB2     		uxtb	r3, r3
 779 0016 1370     		strb	r3, [r2]
 855:Generated_Source\PSoC5/USBUART.c **** 
 856:Generated_Source\PSoC5/USBUART.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBUART.c ****     return ((0u != (cr1Reg & USBUART_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 780              		.loc 1 857 0
 781 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 782 001a 03F00403 		and	r3, r3, #4
 783 001e 002B     		cmp	r3, #0
 784 0020 01D0     		beq	.L27
 785              		.loc 1 857 0 is_stmt 0 discriminator 1
 786 0022 0123     		movs	r3, #1
 787 0024 00E0     		b	.L28
 788              	.L27:
 789              		.loc 1 857 0 discriminator 2
 790 0026 0023     		movs	r3, #0
 791              	.L28:
 858:Generated_Source\PSoC5/USBUART.c **** }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 30


 792              		.loc 1 858 0 is_stmt 1 discriminator 4
 793 0028 1846     		mov	r0, r3
 794 002a 0C37     		adds	r7, r7, #12
 795              		.cfi_def_cfa_offset 4
 796 002c BD46     		mov	sp, r7
 797              		.cfi_def_cfa_register 13
 798              		@ sp needed
 799 002e 80BC     		pop	{r7}
 800              		.cfi_restore 7
 801              		.cfi_def_cfa_offset 0
 802 0030 7047     		bx	lr
 803              	.L31:
 804 0032 00BF     		.align	2
 805              	.L30:
 806 0034 09600040 		.word	1073766409
 807              		.cfi_endproc
 808              	.LFE5:
 809              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 810              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 811              		.align	2
 812              		.global	USBUART_GetConfiguration
 813              		.thumb
 814              		.thumb_func
 815              		.type	USBUART_GetConfiguration, %function
 816              	USBUART_GetConfiguration:
 817              	.LFB6:
 859:Generated_Source\PSoC5/USBUART.c **** 
 860:Generated_Source\PSoC5/USBUART.c **** 
 861:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetConfiguration
 863:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBUART.c **** *
 865:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBUART.c **** *
 867:Generated_Source\PSoC5/USBUART.c **** * \return
 868:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBUART.c **** *  is not configured
 870:Generated_Source\PSoC5/USBUART.c **** *
 871:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBUART.c **** {
 818              		.loc 1 873 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823 0000 80B4     		push	{r7}
 824              		.cfi_def_cfa_offset 4
 825              		.cfi_offset 7, -4
 826 0002 00AF     		add	r7, sp, #0
 827              		.cfi_def_cfa_register 7
 874:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_configuration);
 828              		.loc 1 874 0
 829 0004 034B     		ldr	r3, .L34
 830 0006 1B78     		ldrb	r3, [r3]
 831 0008 DBB2     		uxtb	r3, r3
 875:Generated_Source\PSoC5/USBUART.c **** }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 31


 832              		.loc 1 875 0
 833 000a 1846     		mov	r0, r3
 834 000c BD46     		mov	sp, r7
 835              		.cfi_def_cfa_register 13
 836              		@ sp needed
 837 000e 80BC     		pop	{r7}
 838              		.cfi_restore 7
 839              		.cfi_def_cfa_offset 0
 840 0010 7047     		bx	lr
 841              	.L35:
 842 0012 00BF     		.align	2
 843              	.L34:
 844 0014 00000000 		.word	USBUART_configuration
 845              		.cfi_endproc
 846              	.LFE6:
 847              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 848              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 849              		.align	2
 850              		.global	USBUART_IsConfigurationChanged
 851              		.thumb
 852              		.thumb_func
 853              		.type	USBUART_IsConfigurationChanged, %function
 854              	USBUART_IsConfigurationChanged:
 855              	.LFB7:
 876:Generated_Source\PSoC5/USBUART.c **** 
 877:Generated_Source\PSoC5/USBUART.c **** 
 878:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBUART.c **** *
 882:Generated_Source\PSoC5/USBUART.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBUART.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBUART.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBUART.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBUART.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBUART.c **** *
 888:Generated_Source\PSoC5/USBUART.c **** * \return
 889:Generated_Source\PSoC5/USBUART.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBUART.c **** *  returned.
 891:Generated_Source\PSoC5/USBUART.c **** *
 892:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 893:Generated_Source\PSoC5/USBUART.c **** *
 894:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBUART.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBUART.c **** *
 897:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBUART.c **** {
 856              		.loc 1 899 0
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 8
 859              		@ frame_needed = 1, uses_anonymous_args = 0
 860              		@ link register save eliminated.
 861 0000 80B4     		push	{r7}
 862              		.cfi_def_cfa_offset 4
 863              		.cfi_offset 7, -4
 864 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 32


 865              		.cfi_def_cfa_offset 16
 866 0004 00AF     		add	r7, sp, #0
 867              		.cfi_def_cfa_register 7
 900:Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 868              		.loc 1 900 0
 869 0006 0023     		movs	r3, #0
 870 0008 FB71     		strb	r3, [r7, #7]
 901:Generated_Source\PSoC5/USBUART.c **** 
 902:Generated_Source\PSoC5/USBUART.c ****     if (USBUART_configurationChanged != 0u)
 871              		.loc 1 902 0
 872 000a 084B     		ldr	r3, .L39
 873 000c 1B78     		ldrb	r3, [r3]
 874 000e DBB2     		uxtb	r3, r3
 875 0010 002B     		cmp	r3, #0
 876 0012 05D0     		beq	.L37
 903:Generated_Source\PSoC5/USBUART.c ****     {
 904:Generated_Source\PSoC5/USBUART.c ****         res = USBUART_configurationChanged;
 877              		.loc 1 904 0
 878 0014 054B     		ldr	r3, .L39
 879 0016 1B78     		ldrb	r3, [r3]
 880 0018 FB71     		strb	r3, [r7, #7]
 905:Generated_Source\PSoC5/USBUART.c ****         USBUART_configurationChanged = 0u;
 881              		.loc 1 905 0
 882 001a 044B     		ldr	r3, .L39
 883 001c 0022     		movs	r2, #0
 884 001e 1A70     		strb	r2, [r3]
 885              	.L37:
 906:Generated_Source\PSoC5/USBUART.c ****     }
 907:Generated_Source\PSoC5/USBUART.c **** 
 908:Generated_Source\PSoC5/USBUART.c ****     return (res);
 886              		.loc 1 908 0
 887 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 909:Generated_Source\PSoC5/USBUART.c **** }
 888              		.loc 1 909 0
 889 0022 1846     		mov	r0, r3
 890 0024 0C37     		adds	r7, r7, #12
 891              		.cfi_def_cfa_offset 4
 892 0026 BD46     		mov	sp, r7
 893              		.cfi_def_cfa_register 13
 894              		@ sp needed
 895 0028 80BC     		pop	{r7}
 896              		.cfi_restore 7
 897              		.cfi_def_cfa_offset 0
 898 002a 7047     		bx	lr
 899              	.L40:
 900              		.align	2
 901              	.L39:
 902 002c 00000000 		.word	USBUART_configurationChanged
 903              		.cfi_endproc
 904              	.LFE7:
 905              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 906              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 907              		.align	2
 908              		.global	USBUART_GetInterfaceSetting
 909              		.thumb
 910              		.thumb_func
 911              		.type	USBUART_GetInterfaceSetting, %function
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 33


 912              	USBUART_GetInterfaceSetting:
 913              	.LFB8:
 910:Generated_Source\PSoC5/USBUART.c **** 
 911:Generated_Source\PSoC5/USBUART.c **** 
 912:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBUART.c **** *
 916:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBUART.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBUART.c **** *  interface.
 919:Generated_Source\PSoC5/USBUART.c **** *
 920:Generated_Source\PSoC5/USBUART.c **** *  \param
 921:Generated_Source\PSoC5/USBUART.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBUART.c **** *
 923:Generated_Source\PSoC5/USBUART.c **** * \return
 924:Generated_Source\PSoC5/USBUART.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBUART.c **** *
 926:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBUART.c ****                                                     
 929:Generated_Source\PSoC5/USBUART.c **** {
 914              		.loc 1 929 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 8
 917              		@ frame_needed = 1, uses_anonymous_args = 0
 918              		@ link register save eliminated.
 919 0000 80B4     		push	{r7}
 920              		.cfi_def_cfa_offset 4
 921              		.cfi_offset 7, -4
 922 0002 83B0     		sub	sp, sp, #12
 923              		.cfi_def_cfa_offset 16
 924 0004 00AF     		add	r7, sp, #0
 925              		.cfi_def_cfa_register 7
 926 0006 0346     		mov	r3, r0
 927 0008 FB71     		strb	r3, [r7, #7]
 930:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_interfaceSetting[interfaceNumber]);
 928              		.loc 1 930 0
 929 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 930 000c 034A     		ldr	r2, .L43
 931 000e D35C     		ldrb	r3, [r2, r3]
 932 0010 DBB2     		uxtb	r3, r3
 931:Generated_Source\PSoC5/USBUART.c **** }
 933              		.loc 1 931 0
 934 0012 1846     		mov	r0, r3
 935 0014 0C37     		adds	r7, r7, #12
 936              		.cfi_def_cfa_offset 4
 937 0016 BD46     		mov	sp, r7
 938              		.cfi_def_cfa_register 13
 939              		@ sp needed
 940 0018 80BC     		pop	{r7}
 941              		.cfi_restore 7
 942              		.cfi_def_cfa_offset 0
 943 001a 7047     		bx	lr
 944              	.L44:
 945              		.align	2
 946              	.L43:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 34


 947 001c 00000000 		.word	USBUART_interfaceSetting
 948              		.cfi_endproc
 949              	.LFE8:
 950              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 951              		.section	.text.USBUART_GetEPState,"ax",%progbits
 952              		.align	2
 953              		.global	USBUART_GetEPState
 954              		.thumb
 955              		.thumb_func
 956              		.type	USBUART_GetEPState, %function
 957              	USBUART_GetEPState:
 958              	.LFB9:
 932:Generated_Source\PSoC5/USBUART.c **** 
 933:Generated_Source\PSoC5/USBUART.c **** 
 934:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPState
 936:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBUART.c **** *
 938:Generated_Source\PSoC5/USBUART.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBUART.c **** *
 940:Generated_Source\PSoC5/USBUART.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBUART.c **** *
 942:Generated_Source\PSoC5/USBUART.c **** * \return
 943:Generated_Source\PSoC5/USBUART.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBUART.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBUART.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBUART.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBUART.c **** *
 948:Generated_Source\PSoC5/USBUART.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBUART.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBUART.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBUART.c **** *
 958:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBUART.c **** {
 959              		.loc 1 960 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 8
 962              		@ frame_needed = 1, uses_anonymous_args = 0
 963              		@ link register save eliminated.
 964 0000 80B4     		push	{r7}
 965              		.cfi_def_cfa_offset 4
 966              		.cfi_offset 7, -4
 967 0002 83B0     		sub	sp, sp, #12
 968              		.cfi_def_cfa_offset 16
 969 0004 00AF     		add	r7, sp, #0
 970              		.cfi_def_cfa_register 7
 971 0006 0346     		mov	r3, r0
 972 0008 FB71     		strb	r3, [r7, #7]
 961:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_EP[epNumber].apiEpState);
 973              		.loc 1 961 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 35


 974 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 975 000c 0649     		ldr	r1, .L47
 976 000e 1346     		mov	r3, r2
 977 0010 5B00     		lsls	r3, r3, #1
 978 0012 1344     		add	r3, r3, r2
 979 0014 9B00     		lsls	r3, r3, #2
 980 0016 0B44     		add	r3, r3, r1
 981 0018 0133     		adds	r3, r3, #1
 982 001a 1B78     		ldrb	r3, [r3]
 983 001c DBB2     		uxtb	r3, r3
 962:Generated_Source\PSoC5/USBUART.c **** }
 984              		.loc 1 962 0
 985 001e 1846     		mov	r0, r3
 986 0020 0C37     		adds	r7, r7, #12
 987              		.cfi_def_cfa_offset 4
 988 0022 BD46     		mov	sp, r7
 989              		.cfi_def_cfa_register 13
 990              		@ sp needed
 991 0024 80BC     		pop	{r7}
 992              		.cfi_restore 7
 993              		.cfi_def_cfa_offset 0
 994 0026 7047     		bx	lr
 995              	.L48:
 996              		.align	2
 997              	.L47:
 998 0028 00000000 		.word	USBUART_EP
 999              		.cfi_endproc
 1000              	.LFE9:
 1001              		.size	USBUART_GetEPState, .-USBUART_GetEPState
 1002              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 1003              		.align	2
 1004              		.global	USBUART_GetEPCount
 1005              		.thumb
 1006              		.thumb_func
 1007              		.type	USBUART_GetEPCount, %function
 1008              	USBUART_GetEPCount:
 1009              	.LFB10:
 963:Generated_Source\PSoC5/USBUART.c **** 
 964:Generated_Source\PSoC5/USBUART.c **** 
 965:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPCount
 967:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBUART.c **** *
 969:Generated_Source\PSoC5/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBUART.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBUART.c **** *
 974:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBUART.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBUART.c **** *
 977:Generated_Source\PSoC5/USBUART.c **** * \return
 978:Generated_Source\PSoC5/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBUART.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBUART.c **** *
 981:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 36


 983:Generated_Source\PSoC5/USBUART.c **** {
 1010              		.loc 1 983 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 16
 1013              		@ frame_needed = 1, uses_anonymous_args = 0
 1014              		@ link register save eliminated.
 1015 0000 80B4     		push	{r7}
 1016              		.cfi_def_cfa_offset 4
 1017              		.cfi_offset 7, -4
 1018 0002 85B0     		sub	sp, sp, #20
 1019              		.cfi_def_cfa_offset 24
 1020 0004 00AF     		add	r7, sp, #0
 1021              		.cfi_def_cfa_register 7
 1022 0006 0346     		mov	r3, r0
 1023 0008 FB71     		strb	r3, [r7, #7]
 984:Generated_Source\PSoC5/USBUART.c ****     uint16 cntr = 0u;
 1024              		.loc 1 984 0
 1025 000a 0023     		movs	r3, #0
 1026 000c FB81     		strh	r3, [r7, #14]	@ movhi
 985:Generated_Source\PSoC5/USBUART.c **** 
 986:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1027              		.loc 1 986 0
 1028 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1029 0010 002B     		cmp	r3, #0
 1030 0012 1CD0     		beq	.L50
 1031              		.loc 1 986 0 is_stmt 0 discriminator 1
 1032 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1033 0016 082B     		cmp	r3, #8
 1034 0018 19D8     		bhi	.L50
 987:Generated_Source\PSoC5/USBUART.c ****     {
 988:Generated_Source\PSoC5/USBUART.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBUART_EPX_CNT0_MASK;
 1035              		.loc 1 989 0 is_stmt 1
 1036 001a 104A     		ldr	r2, .L52
 1037 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1038 001e 1B01     		lsls	r3, r3, #4
 1039 0020 1344     		add	r3, r3, r2
 1040 0022 1B78     		ldrb	r3, [r3]
 1041 0024 DBB2     		uxtb	r3, r3
 1042 0026 9BB2     		uxth	r3, r3
 1043 0028 03F00F03 		and	r3, r3, #15
 1044 002c FB81     		strh	r3, [r7, #14]	@ movhi
 990:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 1045              		.loc 1 990 0
 1046 002e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1047 0030 1B02     		lsls	r3, r3, #8
 1048 0032 9AB2     		uxth	r2, r3
 1049 0034 0949     		ldr	r1, .L52
 1050 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1051 0038 1B01     		lsls	r3, r3, #4
 1052 003a 0B44     		add	r3, r3, r1
 1053 003c 0133     		adds	r3, r3, #1
 1054 003e 1B78     		ldrb	r3, [r3]
 1055 0040 DBB2     		uxtb	r3, r3
 1056 0042 9BB2     		uxth	r3, r3
 1057 0044 1343     		orrs	r3, r3, r2
 1058 0046 FB81     		strh	r3, [r7, #14]	@ movhi
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 37


 991:Generated_Source\PSoC5/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 1059              		.loc 1 991 0
 1060 0048 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1061 004a 023B     		subs	r3, r3, #2
 1062 004c FB81     		strh	r3, [r7, #14]	@ movhi
 1063              	.L50:
 992:Generated_Source\PSoC5/USBUART.c ****     }
 993:Generated_Source\PSoC5/USBUART.c **** 
 994:Generated_Source\PSoC5/USBUART.c ****     return (cntr);
 1064              		.loc 1 994 0
 1065 004e FB89     		ldrh	r3, [r7, #14]
 995:Generated_Source\PSoC5/USBUART.c **** }
 1066              		.loc 1 995 0
 1067 0050 1846     		mov	r0, r3
 1068 0052 1437     		adds	r7, r7, #20
 1069              		.cfi_def_cfa_offset 4
 1070 0054 BD46     		mov	sp, r7
 1071              		.cfi_def_cfa_register 13
 1072              		@ sp needed
 1073 0056 80BC     		pop	{r7}
 1074              		.cfi_restore 7
 1075              		.cfi_def_cfa_offset 0
 1076 0058 7047     		bx	lr
 1077              	.L53:
 1078 005a 00BF     		.align	2
 1079              	.L52:
 1080 005c FC5F0040 		.word	1073766396
 1081              		.cfi_endproc
 1082              	.LFE10:
 1083              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 1084              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 1085              		.align	2
 1086              		.global	USBUART_LoadInEP
 1087              		.thumb
 1088              		.thumb_func
 1089              		.type	USBUART_LoadInEP, %function
 1090              	USBUART_LoadInEP:
 1091              	.LFB11:
 996:Generated_Source\PSoC5/USBUART.c **** 
 997:Generated_Source\PSoC5/USBUART.c **** 
 998:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEpDma
1002:Generated_Source\PSoC5/USBUART.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBUART.c ****     *
1004:Generated_Source\PSoC5/USBUART.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBUART.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBUART.c ****     *
1007:Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBUART.c ****     static void USBUART_InitEpDma(void)
1009:Generated_Source\PSoC5/USBUART.c ****     {
1010:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep1_dma_CHANNEL] = USBUART_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBUART.c **** 
1014:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 38


1015:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep2_dma_CHANNEL] = USBUART_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBUART.c **** 
1018:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep3_dma_CHANNEL] = USBUART_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBUART.c **** 
1022:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep4_dma_CHANNEL] = USBUART_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBUART.c **** 
1026:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep5_dma_CHANNEL] = USBUART_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBUART.c **** 
1030:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep6_dma_CHANNEL] = USBUART_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBUART.c **** 
1034:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep7_dma_CHANNEL] = USBUART_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBUART.c **** 
1038:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep8_dma_CHANNEL] = USBUART_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBUART.c **** 
1042:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBUART.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep1_dma_SetInterruptCallback(&USBUART_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBUART.c **** 
1048:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep2_dma_SetInterruptCallback(&USBUART_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBUART.c **** 
1052:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep3_dma_SetInterruptCallback(&USBUART_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBUART.c **** 
1056:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep4_dma_SetInterruptCallback(&USBUART_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBUART.c **** 
1060:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep5_dma_SetInterruptCallback(&USBUART_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBUART.c **** 
1064:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep6_dma_SetInterruptCallback(&USBUART_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBUART.c **** 
1068:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep7_dma_SetInterruptCallback(&USBUART_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 39


1072:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep8_dma_SetInterruptCallback(&USBUART_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBUART.c ****     }
1077:Generated_Source\PSoC5/USBUART.c **** #else
1078:Generated_Source\PSoC5/USBUART.c **** 
1079:Generated_Source\PSoC5/USBUART.c **** 
1080:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
1082:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBUART.c ****     *
1084:Generated_Source\PSoC5/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBUART.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBUART.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBUART.c ****     *
1089:Generated_Source\PSoC5/USBUART.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBUART.c ****     *
1091:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBUART.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBUART.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBUART.c ****     *
1095:Generated_Source\PSoC5/USBUART.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBUART.c ****     *
1097:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBUART.c ****                                                                     
1100:Generated_Source\PSoC5/USBUART.c ****     {
1101:Generated_Source\PSoC5/USBUART.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBUART.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBUART.c **** 
1104:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBUART.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBUART.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBUART.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBUART.c ****     #else
1109:Generated_Source\PSoC5/USBUART.c ****         if ((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBUART.c ****         {
1111:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBUART.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBUART.c ****         }
1115:Generated_Source\PSoC5/USBUART.c ****         else
1116:Generated_Source\PSoC5/USBUART.c ****         {
1117:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBUART.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USBUART.c ****         }
1121:Generated_Source\PSoC5/USBUART.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBUART.c **** 
1123:Generated_Source\PSoC5/USBUART.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBUART.c ****         {
1125:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP1:
1127:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 40


1129:Generated_Source\PSoC5/USBUART.c ****             break;
1130:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBUART.c **** 
1132:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP2:
1134:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1136:Generated_Source\PSoC5/USBUART.c ****             break;
1137:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBUART.c **** 
1139:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP3:
1141:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1143:Generated_Source\PSoC5/USBUART.c ****             break;
1144:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBUART.c **** 
1146:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP4:
1148:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1150:Generated_Source\PSoC5/USBUART.c ****             break;
1151:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBUART.c **** 
1153:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP5:
1155:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1157:Generated_Source\PSoC5/USBUART.c ****             break;
1158:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBUART.c **** 
1160:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP6:
1162:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1164:Generated_Source\PSoC5/USBUART.c ****             break;
1165:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBUART.c **** 
1167:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP7:
1169:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1171:Generated_Source\PSoC5/USBUART.c ****             break;
1172:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBUART.c **** 
1174:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP8:
1176:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1178:Generated_Source\PSoC5/USBUART.c ****             break;
1179:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBUART.c **** 
1181:Generated_Source\PSoC5/USBUART.c ****         default:
1182:Generated_Source\PSoC5/USBUART.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBUART.c ****             break;
1184:Generated_Source\PSoC5/USBUART.c ****         }
1185:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 41


1186:Generated_Source\PSoC5/USBUART.c ****         if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1187:Generated_Source\PSoC5/USBUART.c ****         {
1188:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBUART.c **** 
1190:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBUART.c ****         }
1194:Generated_Source\PSoC5/USBUART.c ****     }
1195:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBUART.c **** 
1197:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_Stop_DMA
1199:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBUART.c ****     *  
1201:Generated_Source\PSoC5/USBUART.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBUART.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBUART.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBUART.c ****     *  to trigger DMA re-configuration when USBUART_LoadInEP() or 
1205:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBUART.c ****     *  
1207:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBUART.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBUART.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_MAX_EP argument.
1211:Generated_Source\PSoC5/USBUART.c ****     *
1212:Generated_Source\PSoC5/USBUART.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBUART.c ****     *  No.
1214:Generated_Source\PSoC5/USBUART.c ****     *
1215:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBUART.c ****     {
1218:Generated_Source\PSoC5/USBUART.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBUART.c **** 
1220:Generated_Source\PSoC5/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
1221:Generated_Source\PSoC5/USBUART.c **** 
1222:Generated_Source\PSoC5/USBUART.c ****         do
1223:Generated_Source\PSoC5/USBUART.c ****         {
1224:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBUART.c ****             if (0u != USBUART_DmaChan[i])
1226:Generated_Source\PSoC5/USBUART.c ****             {
1227:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(USBUART_DmaChan[i]);
1228:Generated_Source\PSoC5/USBUART.c ****             }
1229:Generated_Source\PSoC5/USBUART.c ****         #else
1230:Generated_Source\PSoC5/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBUART.c ****             {
1232:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
1233:Generated_Source\PSoC5/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
1234:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBUART.c ****             }
1236:Generated_Source\PSoC5/USBUART.c **** 
1237:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBUART.c ****                 {
1240:Generated_Source\PSoC5/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBUART.c ****                 }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 42


1243:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBUART.c **** 
1245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBUART.c ****             i++;
1247:Generated_Source\PSoC5/USBUART.c ****         }
1248:Generated_Source\PSoC5/USBUART.c ****         while ((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
1249:Generated_Source\PSoC5/USBUART.c ****     }
1250:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBUART.c **** 
1252:Generated_Source\PSoC5/USBUART.c **** 
1253:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
1257:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBUART.c ****     *
1259:Generated_Source\PSoC5/USBUART.c ****     * Summary:
1260:Generated_Source\PSoC5/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBUART.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBUART.c ****     *
1263:Generated_Source\PSoC5/USBUART.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBUART.c ****     *
1268:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBUART.c ****     {
1271:Generated_Source\PSoC5/USBUART.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBUART.c **** 
1273:Generated_Source\PSoC5/USBUART.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBUART.c ****         {
1275:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBUART.c ****         }
1286:Generated_Source\PSoC5/USBUART.c ****         else
1287:Generated_Source\PSoC5/USBUART.c ****         {
1288:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBUART.c ****                                    (USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBUART.c ****         }
1298:Generated_Source\PSoC5/USBUART.c **** 
1299:Generated_Source\PSoC5/USBUART.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 43


1300:Generated_Source\PSoC5/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBUART.c ****     }
1302:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBUART.c **** 
1305:Generated_Source\PSoC5/USBUART.c **** 
1306:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP
1308:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBUART.c **** *
1310:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBUART.c **** *
1314:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBUART.c **** *
1318:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBUART.c **** *
1322:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBUART.c **** *
1328:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBUART.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBUART.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBUART.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBUART.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBUART.c **** *
1337:Generated_Source\PSoC5/USBUART.c **** *
1338:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1339:Generated_Source\PSoC5/USBUART.c **** *  No.
1340:Generated_Source\PSoC5/USBUART.c **** *
1341:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBUART.c ****                                                                         
1344:Generated_Source\PSoC5/USBUART.c **** {
 1092              		.loc 1 1344 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 16
 1095              		@ frame_needed = 1, uses_anonymous_args = 0
 1096              		@ link register save eliminated.
 1097 0000 B0B4     		push	{r4, r5, r7}
 1098              		.cfi_def_cfa_offset 12
 1099              		.cfi_offset 4, -12
 1100              		.cfi_offset 5, -8
 1101              		.cfi_offset 7, -4
 1102 0002 85B0     		sub	sp, sp, #20
 1103              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 44


 1104 0004 00AF     		add	r7, sp, #0
 1105              		.cfi_def_cfa_register 7
 1106 0006 0346     		mov	r3, r0
 1107 0008 3960     		str	r1, [r7]
 1108 000a FB71     		strb	r3, [r7, #7]
 1109 000c 1346     		mov	r3, r2	@ movhi
 1110 000e BB80     		strh	r3, [r7, #4]	@ movhi
1345:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1111              		.loc 1 1345 0
 1112 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1113 0012 002B     		cmp	r3, #0
 1114 0014 6DD0     		beq	.L60
 1115              		.loc 1 1345 0 is_stmt 0 discriminator 1
 1116 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1117 0018 082B     		cmp	r3, #8
 1118 001a 6AD8     		bhi	.L60
1346:Generated_Source\PSoC5/USBUART.c ****     {
1347:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 1119              		.loc 1 1349 0 is_stmt 1
 1120 001c B988     		ldrh	r1, [r7, #4]
 1121 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1122 0020 3648     		ldr	r0, .L61
 1123 0022 1346     		mov	r3, r2
 1124 0024 5B00     		lsls	r3, r3, #1
 1125 0026 1344     		add	r3, r3, r2
 1126 0028 9B00     		lsls	r3, r3, #2
 1127 002a 0344     		add	r3, r3, r0
 1128 002c 0633     		adds	r3, r3, #6
 1129 002e 1B88     		ldrh	r3, [r3]	@ movhi
 1130 0030 9BB2     		uxth	r3, r3
 1131 0032 C3F50073 		rsb	r3, r3, #512
 1132 0036 9942     		cmp	r1, r3
 1133 0038 0CD9     		bls	.L56
1350:Generated_Source\PSoC5/USBUART.c ****         {
1351:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 1134              		.loc 1 1351 0
 1135 003a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1136 003c 2F49     		ldr	r1, .L61
 1137 003e 1346     		mov	r3, r2
 1138 0040 5B00     		lsls	r3, r3, #1
 1139 0042 1344     		add	r3, r3, r2
 1140 0044 9B00     		lsls	r3, r3, #2
 1141 0046 0B44     		add	r3, r3, r1
 1142 0048 0633     		adds	r3, r3, #6
 1143 004a 1B88     		ldrh	r3, [r3]	@ movhi
 1144 004c 9BB2     		uxth	r3, r3
 1145 004e C3F50073 		rsb	r3, r3, #512
 1146 0052 BB80     		strh	r3, [r7, #4]	@ movhi
 1147              	.L56:
1352:Generated_Source\PSoC5/USBUART.c ****         }
1353:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBUART.c **** 
1355:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBUART_EP[epNumber].epT
 1148              		.loc 1 1356 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 45


 1149 0054 2A4C     		ldr	r4, .L61+4
 1150 0056 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1151 0058 BB88     		ldrh	r3, [r7, #4]
 1152 005a 1B0A     		lsrs	r3, r3, #8
 1153 005c 9BB2     		uxth	r3, r3
 1154 005e D8B2     		uxtb	r0, r3
 1155 0060 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1156 0062 264D     		ldr	r5, .L61
 1157 0064 1346     		mov	r3, r2
 1158 0066 5B00     		lsls	r3, r3, #1
 1159 0068 1344     		add	r3, r3, r2
 1160 006a 9B00     		lsls	r3, r3, #2
 1161 006c 2B44     		add	r3, r3, r5
 1162 006e 0333     		adds	r3, r3, #3
 1163 0070 1B78     		ldrb	r3, [r3]
 1164 0072 DBB2     		uxtb	r3, r3
 1165 0074 0343     		orrs	r3, r3, r0
 1166 0076 DAB2     		uxtb	r2, r3
 1167 0078 0B01     		lsls	r3, r1, #4
 1168 007a 2344     		add	r3, r3, r4
 1169 007c 1A70     		strb	r2, [r3]
1357:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 1170              		.loc 1 1357 0
 1171 007e 204A     		ldr	r2, .L61+4
 1172 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1173 0082 B988     		ldrh	r1, [r7, #4]	@ movhi
 1174 0084 C9B2     		uxtb	r1, r1
 1175 0086 1B01     		lsls	r3, r3, #4
 1176 0088 1344     		add	r3, r3, r2
 1177 008a 0133     		adds	r3, r3, #1
 1178 008c 0A46     		mov	r2, r1
 1179 008e 1A70     		strb	r2, [r3]
1358:Generated_Source\PSoC5/USBUART.c **** 
1359:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
 1180              		.loc 1 1360 0
 1181 0090 3B68     		ldr	r3, [r7]
 1182 0092 002B     		cmp	r3, #0
 1183 0094 13D0     		beq	.L57
 1184              	.LBB2:
1361:Generated_Source\PSoC5/USBUART.c ****         {
1362:Generated_Source\PSoC5/USBUART.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
 1185              		.loc 1 1364 0
 1186 0096 0023     		movs	r3, #0
 1187 0098 FB81     		strh	r3, [r7, #14]	@ movhi
 1188 009a 0CE0     		b	.L58
 1189              	.L59:
1365:Generated_Source\PSoC5/USBUART.c ****             {
1366:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 1190              		.loc 1 1366 0 discriminator 3
 1191 009c 1948     		ldr	r0, .L61+8
 1192 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1193 00a0 FA89     		ldrh	r2, [r7, #14]
 1194 00a2 3968     		ldr	r1, [r7]
 1195 00a4 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 46


 1196 00a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1197 00a8 1B01     		lsls	r3, r3, #4
 1198 00aa 0344     		add	r3, r3, r0
 1199 00ac 0833     		adds	r3, r3, #8
 1200 00ae 1A70     		strb	r2, [r3]
1364:Generated_Source\PSoC5/USBUART.c ****             {
 1201              		.loc 1 1364 0 discriminator 3
 1202 00b0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1203 00b2 0133     		adds	r3, r3, #1
 1204 00b4 FB81     		strh	r3, [r7, #14]	@ movhi
 1205              	.L58:
1364:Generated_Source\PSoC5/USBUART.c ****             {
 1206              		.loc 1 1364 0 is_stmt 0 discriminator 1
 1207 00b6 FA89     		ldrh	r2, [r7, #14]
 1208 00b8 BB88     		ldrh	r3, [r7, #4]
 1209 00ba 9A42     		cmp	r2, r3
 1210 00bc EED3     		bcc	.L59
 1211              	.L57:
 1212              	.LBE2:
1367:Generated_Source\PSoC5/USBUART.c ****             }
1368:Generated_Source\PSoC5/USBUART.c ****         }
1369:Generated_Source\PSoC5/USBUART.c **** 
1370:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1213              		.loc 1 1371 0 is_stmt 1
 1214 00be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1215 00c0 0E49     		ldr	r1, .L61
 1216 00c2 1346     		mov	r3, r2
 1217 00c4 5B00     		lsls	r3, r3, #1
 1218 00c6 1344     		add	r3, r3, r2
 1219 00c8 9B00     		lsls	r3, r3, #2
 1220 00ca 0B44     		add	r3, r3, r1
 1221 00cc 0133     		adds	r3, r3, #1
 1222 00ce 0022     		movs	r2, #0
 1223 00d0 1A70     		strb	r2, [r3]
1372:Generated_Source\PSoC5/USBUART.c **** 
1373:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1224              		.loc 1 1374 0
 1225 00d2 0B48     		ldr	r0, .L61+4
 1226 00d4 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1227 00d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1228 00d8 084C     		ldr	r4, .L61
 1229 00da 1346     		mov	r3, r2
 1230 00dc 5B00     		lsls	r3, r3, #1
 1231 00de 1344     		add	r3, r3, r2
 1232 00e0 9B00     		lsls	r3, r3, #2
 1233 00e2 2344     		add	r3, r3, r4
 1234 00e4 0533     		adds	r3, r3, #5
 1235 00e6 1B78     		ldrb	r3, [r3]
 1236 00e8 DAB2     		uxtb	r2, r3
 1237 00ea 0B01     		lsls	r3, r1, #4
 1238 00ec 0344     		add	r3, r3, r0
 1239 00ee 0233     		adds	r3, r3, #2
 1240 00f0 1A70     		strb	r2, [r3]
 1241              	.L60:
1375:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 47


1376:Generated_Source\PSoC5/USBUART.c ****     #else
1377:Generated_Source\PSoC5/USBUART.c **** 
1378:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBUART.c ****             {
1382:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBUART.c ****             }
1384:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBUART.c **** 
1386:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBUART.c **** 
1390:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USBUART.c ****             {
1392:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBUART.c **** 
1395:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBUART.c **** 
1398:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1401:Generated_Source\PSoC5/USBUART.c **** 
1402:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBUART.c ****                 --length;
1404:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1405:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBUART.c **** 
1407:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBUART.c **** 
1410:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBUART.c ****             #else
1413:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC5/USBUART.c **** 
1418:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBUART.c **** 
1423:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBUART.c **** 
1427:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBUART.c ****             }
1429:Generated_Source\PSoC5/USBUART.c ****             else
1430:Generated_Source\PSoC5/USBUART.c ****             {
1431:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 48


1433:Generated_Source\PSoC5/USBUART.c ****             }
1434:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBUART.c **** 
1436:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBUART.c ****             {
1439:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBUART.c **** 
1442:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBUART.c **** 
1445:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBUART.c **** 
1448:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1450:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_
1451:Generated_Source\PSoC5/USBUART.c **** 
1452:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1454:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBUART.c **** 
1456:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1458:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBUART.c **** 
1460:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBUART.c **** 
1463:Generated_Source\PSoC5/USBUART.c **** 
1464:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBUART.c **** 
1467:Generated_Source\PSoC5/USBUART.c ****             #else
1468:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBUART.c **** 
1470:Generated_Source\PSoC5/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBUART.c **** 
1474:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBUART.c ****                         (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1480:Generated_Source\PSoC5/USBUART.c **** 
1481:Generated_Source\PSoC5/USBUART.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBUART.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBUART.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBUART.c ****                     */
1485:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBUART.c **** 
1489:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 49


1490:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC5/USBUART.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBUART.c ****                 #else
1493:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1498:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBUART.c **** 
1500:Generated_Source\PSoC5/USBUART.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBUART.c ****             }
1507:Generated_Source\PSoC5/USBUART.c ****             else
1508:Generated_Source\PSoC5/USBUART.c ****             {
1509:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBUART.c **** 
1512:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBUART.c ****                 {
1514:Generated_Source\PSoC5/USBUART.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBUART.c **** 
1518:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC5/USBUART.c **** 
1521:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC5/USBUART.c **** 
1524:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC5/USBUART.c **** 
1527:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DmaEpLastBurstEl
1530:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC5/USBUART.c **** 
1532:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1534:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1535:Generated_Source\PSoC5/USBUART.c **** 
1536:Generated_Source\PSoC5/USBUART.c **** 
1537:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
1540:Generated_Source\PSoC5/USBUART.c **** 
1541:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBUART.c **** 
1544:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 50


1547:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBUART.c **** 
1549:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBUART.c **** 
1553:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBUART.c **** 
1557:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBUART.c ****                     {
1560:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBUART.c ****                     }                   
1562:Generated_Source\PSoC5/USBUART.c **** 
1563:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
1565:Generated_Source\PSoC5/USBUART.c **** 
1566:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBUART.c **** 
1569:Generated_Source\PSoC5/USBUART.c ****                 #elif (USBUART_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBUART.c **** 
1573:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32)  USBUART_inData
1580:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1581:Generated_Source\PSoC5/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBUART.c **** 
1588:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBUART.c **** 
1593:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBUART.c ****                 }
1595:Generated_Source\PSoC5/USBUART.c ****                 else
1596:Generated_Source\PSoC5/USBUART.c ****                 {
1597:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBUART.c ****                 }
1600:Generated_Source\PSoC5/USBUART.c ****             }
1601:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBUART.c ****     }
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 51


1604:Generated_Source\PSoC5/USBUART.c **** }
 1242              		.loc 1 1604 0
 1243 00f2 00BF     		nop
 1244 00f4 1437     		adds	r7, r7, #20
 1245              		.cfi_def_cfa_offset 12
 1246 00f6 BD46     		mov	sp, r7
 1247              		.cfi_def_cfa_register 13
 1248              		@ sp needed
 1249 00f8 B0BC     		pop	{r4, r5, r7}
 1250              		.cfi_restore 7
 1251              		.cfi_restore 5
 1252              		.cfi_restore 4
 1253              		.cfi_def_cfa_offset 0
 1254 00fa 7047     		bx	lr
 1255              	.L62:
 1256              		.align	2
 1257              	.L61:
 1258 00fc 00000000 		.word	USBUART_EP
 1259 0100 FC5F0040 		.word	1073766396
 1260 0104 70600040 		.word	1073766512
 1261              		.cfi_endproc
 1262              	.LFE11:
 1263              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 1264              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 1265              		.align	2
 1266              		.global	USBUART_ReadOutEP
 1267              		.thumb
 1268              		.thumb_func
 1269              		.type	USBUART_ReadOutEP, %function
 1270              	USBUART_ReadOutEP:
 1271              	.LFB12:
1605:Generated_Source\PSoC5/USBUART.c **** 
1606:Generated_Source\PSoC5/USBUART.c **** 
1607:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP
1609:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBUART.c **** *
1611:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBUART.c **** *
1615:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBUART.c **** *
1621:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBUART.c **** *
1627:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBUART.c **** *
1629:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 52


1631:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBUART.c **** *
1633:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBUART.c **** *
1637:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBUART.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBUART.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBUART.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBUART.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBUART.c **** *
1646:Generated_Source\PSoC5/USBUART.c **** * \return
1647:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBUART.c **** *
1649:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1650:Generated_Source\PSoC5/USBUART.c **** *  No.
1651:Generated_Source\PSoC5/USBUART.c **** *
1652:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBUART.c ****                                                                         
1655:Generated_Source\PSoC5/USBUART.c **** {
 1272              		.loc 1 1655 0
 1273              		.cfi_startproc
 1274              		@ args = 0, pretend = 0, frame = 16
 1275              		@ frame_needed = 1, uses_anonymous_args = 0
 1276 0000 80B5     		push	{r7, lr}
 1277              		.cfi_def_cfa_offset 8
 1278              		.cfi_offset 7, -8
 1279              		.cfi_offset 14, -4
 1280 0002 84B0     		sub	sp, sp, #16
 1281              		.cfi_def_cfa_offset 24
 1282 0004 00AF     		add	r7, sp, #0
 1283              		.cfi_def_cfa_register 7
 1284 0006 0346     		mov	r3, r0
 1285 0008 3960     		str	r1, [r7]
 1286 000a FB71     		strb	r3, [r7, #7]
 1287 000c 1346     		mov	r3, r2	@ movhi
 1288 000e BB80     		strh	r3, [r7, #4]	@ movhi
1656:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1289              		.loc 1 1656 0
 1290 0010 3B68     		ldr	r3, [r7]
 1291 0012 002B     		cmp	r3, #0
 1292 0014 30D0     		beq	.L64
 1293              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1294 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1295 0018 002B     		cmp	r3, #0
 1296 001a 2DD0     		beq	.L64
 1297              		.loc 1 1656 0 discriminator 2
 1298 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1299 001e 082B     		cmp	r3, #8
 1300 0020 2AD8     		bhi	.L64
1657:Generated_Source\PSoC5/USBUART.c ****     {
1658:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 53


1659:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
 1301              		.loc 1 1660 0 is_stmt 1
 1302 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1303 0024 1846     		mov	r0, r3
 1304 0026 FFF7FEFF 		bl	USBUART_GetEPCount
 1305 002a 0346     		mov	r3, r0
 1306 002c 1A46     		mov	r2, r3
 1307 002e BB88     		ldrh	r3, [r7, #4]
 1308 0030 9342     		cmp	r3, r2
 1309 0032 05D9     		bls	.L65
 1310              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1311 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1312 0036 1846     		mov	r0, r3
 1313 0038 FFF7FEFF 		bl	USBUART_GetEPCount
 1314 003c 0346     		mov	r3, r0
 1315 003e 00E0     		b	.L66
 1316              	.L65:
 1317              		.loc 1 1660 0 discriminator 2
 1318 0040 BB88     		ldrh	r3, [r7, #4]
 1319              	.L66:
 1320              		.loc 1 1660 0 discriminator 4
 1321 0042 BB80     		strh	r3, [r7, #4]	@ movhi
 1322              	.LBB3:
1661:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBUART.c **** 
1663:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBUART.c ****         {
1665:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
 1323              		.loc 1 1667 0 is_stmt 1 discriminator 4
 1324 0044 0023     		movs	r3, #0
 1325 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 1326 0048 0DE0     		b	.L67
 1327              	.L68:
1668:Generated_Source\PSoC5/USBUART.c ****             {
1669:Generated_Source\PSoC5/USBUART.c ****                 pData[i] = (uint8) USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr;
 1328              		.loc 1 1669 0 discriminator 3
 1329 004a FB89     		ldrh	r3, [r7, #14]
 1330 004c 3A68     		ldr	r2, [r7]
 1331 004e 1344     		add	r3, r3, r2
 1332 0050 0D49     		ldr	r1, .L71
 1333 0052 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1334 0054 1201     		lsls	r2, r2, #4
 1335 0056 0A44     		add	r2, r2, r1
 1336 0058 0832     		adds	r2, r2, #8
 1337 005a 1278     		ldrb	r2, [r2]
 1338 005c D2B2     		uxtb	r2, r2
 1339 005e 1A70     		strb	r2, [r3]
1667:Generated_Source\PSoC5/USBUART.c ****             {
 1340              		.loc 1 1667 0 discriminator 3
 1341 0060 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1342 0062 0133     		adds	r3, r3, #1
 1343 0064 FB81     		strh	r3, [r7, #14]	@ movhi
 1344              	.L67:
1667:Generated_Source\PSoC5/USBUART.c ****             {
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 54


 1345              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1346 0066 FA89     		ldrh	r2, [r7, #14]
 1347 0068 BB88     		ldrh	r3, [r7, #4]
 1348 006a 9A42     		cmp	r2, r3
 1349 006c EDD3     		bcc	.L68
 1350              	.LBE3:
1670:Generated_Source\PSoC5/USBUART.c ****             }
1671:Generated_Source\PSoC5/USBUART.c ****         }
1672:Generated_Source\PSoC5/USBUART.c **** 
1673:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
 1351              		.loc 1 1674 0 is_stmt 1
 1352 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1353 0070 1846     		mov	r0, r3
 1354 0072 FFF7FEFF 		bl	USBUART_EnableOutEP
 1355 0076 01E0     		b	.L69
 1356              	.L64:
1675:Generated_Source\PSoC5/USBUART.c ****     #else
1676:Generated_Source\PSoC5/USBUART.c **** 
1677:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBUART.c ****             {
1681:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBUART.c ****             }
1683:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBUART.c **** 
1685:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBUART.c ****         {
1688:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBUART.c **** 
1690:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBUART.c **** 
1693:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1695:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBUART.c **** 
1697:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBUART.c **** 
1701:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBUART.c **** 
1704:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBUART.c ****         }
1707:Generated_Source\PSoC5/USBUART.c ****         #else
1708:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1712:Generated_Source\PSoC5/USBUART.c **** 
1713:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 55


1715:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBUART.c **** 
1718:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBUART.c **** 
1722:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBUART.c ****             */
1725:Generated_Source\PSoC5/USBUART.c **** 
1726:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBUART.c **** 
1728:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBUART.c ****         {
1731:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBUART.c **** 
1734:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBUART.c **** 
1737:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBUART.c **** 
1740:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC5/USBUART.c **** 
1743:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC5/USBUART.c **** 
1748:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC5/USBUART.c **** 
1752:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
1754:Generated_Source\PSoC5/USBUART.c **** 
1755:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
1758:Generated_Source\PSoC5/USBUART.c **** 
1759:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBUART.c **** 
1763:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC5/USBUART.c **** 
1766:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBUART.c **** 
1769:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1771:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_BASE
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 56


1772:Generated_Source\PSoC5/USBUART.c **** 
1773:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC5/USBUART.c **** 
1776:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBUART.c **** 
1780:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBUART.c **** 
1784:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBUART.c **** 
1787:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBUART.c **** 
1790:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBUART.c ****             {
1792:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBUART.c ****             }
1794:Generated_Source\PSoC5/USBUART.c **** 
1795:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBUART.c ****         }
1798:Generated_Source\PSoC5/USBUART.c ****         #else
1799:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,  USBUART_DmaTd[epNumber
1801:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1802:Generated_Source\PSoC5/USBUART.c **** 
1803:Generated_Source\PSoC5/USBUART.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBUART.c **** 
1806:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBUART.c **** 
1811:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBUART.c ****             */
1814:Generated_Source\PSoC5/USBUART.c **** 
1815:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBUART.c ****     }
1818:Generated_Source\PSoC5/USBUART.c ****     else
1819:Generated_Source\PSoC5/USBUART.c ****     {
1820:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
 1357              		.loc 1 1820 0
 1358 0078 0023     		movs	r3, #0
 1359 007a BB80     		strh	r3, [r7, #4]	@ movhi
 1360              	.L69:
1821:Generated_Source\PSoC5/USBUART.c ****     }
1822:Generated_Source\PSoC5/USBUART.c **** 
1823:Generated_Source\PSoC5/USBUART.c ****     return (length);
 1361              		.loc 1 1823 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 57


 1362 007c BB88     		ldrh	r3, [r7, #4]
1824:Generated_Source\PSoC5/USBUART.c **** }
 1363              		.loc 1 1824 0
 1364 007e 1846     		mov	r0, r3
 1365 0080 1037     		adds	r7, r7, #16
 1366              		.cfi_def_cfa_offset 8
 1367 0082 BD46     		mov	sp, r7
 1368              		.cfi_def_cfa_register 13
 1369              		@ sp needed
 1370 0084 80BD     		pop	{r7, pc}
 1371              	.L72:
 1372 0086 00BF     		.align	2
 1373              	.L71:
 1374 0088 70600040 		.word	1073766512
 1375              		.cfi_endproc
 1376              	.LFE12:
 1377              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
 1378              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 1379              		.align	2
 1380              		.global	USBUART_EnableOutEP
 1381              		.thumb
 1382              		.thumb_func
 1383              		.type	USBUART_EnableOutEP, %function
 1384              	USBUART_EnableOutEP:
 1385              	.LFB13:
1825:Generated_Source\PSoC5/USBUART.c **** 
1826:Generated_Source\PSoC5/USBUART.c **** 
1827:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP16
1830:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBUART.c **** *
1832:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBUART.c **** *
1836:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBUART.c **** *
1840:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBUART.c **** *
1844:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBUART.c **** *
1850:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBUART.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBUART.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBUART.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBUART.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 58


1857:Generated_Source\PSoC5/USBUART.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBUART.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBUART.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBUART.c **** *
1861:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1862:Generated_Source\PSoC5/USBUART.c **** *  No.
1863:Generated_Source\PSoC5/USBUART.c **** *
1864:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBUART.c **** {
1867:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBUART.c **** 
1870:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1871:Generated_Source\PSoC5/USBUART.c ****     {
1872:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBUART.c ****         {
1876:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBUART.c ****         }
1878:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBUART.c **** 
1880:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
1882:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBUART.c **** 
1884:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBUART.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBUART.c **** 
1887:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBUART.c ****         {
1890:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBUART.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBUART.c **** 
1893:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBUART.c ****             {
1897:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBUART.c ****             }
1899:Generated_Source\PSoC5/USBUART.c ****         }
1900:Generated_Source\PSoC5/USBUART.c **** 
1901:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBUART.c **** 
1904:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBUART.c **** 
1907:Generated_Source\PSoC5/USBUART.c ****     #else
1908:Generated_Source\PSoC5/USBUART.c **** 
1909:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBUART.c **** 
1913:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 59


1914:Generated_Source\PSoC5/USBUART.c ****             {
1915:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBUART.c **** 
1917:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBUART.c **** 
1920:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1923:Generated_Source\PSoC5/USBUART.c **** 
1924:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBUART.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1927:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBUART.c **** 
1929:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBUART.c **** 
1932:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBUART.c **** 
1935:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC5/USBUART.c **** 
1939:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBUART.c ****             }
1941:Generated_Source\PSoC5/USBUART.c ****             else
1942:Generated_Source\PSoC5/USBUART.c ****             {
1943:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBUART.c ****             }
1946:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBUART.c **** 
1948:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBUART.c ****             {
1951:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBUART.c **** 
1953:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBUART.c **** 
1956:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBUART.c **** 
1959:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1961:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP1
1962:Generated_Source\PSoC5/USBUART.c **** 
1963:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1965:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBUART.c **** 
1967:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1969:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 60


1971:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBUART.c **** 
1974:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBUART.c ****             }
1977:Generated_Source\PSoC5/USBUART.c ****             else
1978:Generated_Source\PSoC5/USBUART.c ****             {
1979:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBUART.c **** 
1982:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBUART.c ****                 {
1984:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBUART.c **** 
1987:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC5/USBUART.c **** 
1990:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC5/USBUART.c **** 
1993:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC5/USBUART.c **** 
1996:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC5/USBUART.c ****                                                                           ((USBUART_DmaEpLastBurstE
1999:Generated_Source\PSoC5/USBUART.c ****                                                                            (USBUART_DMA_HALFWORDS_P
2000:Generated_Source\PSoC5/USBUART.c **** 
2001:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2003:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2004:Generated_Source\PSoC5/USBUART.c **** 
2005:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
2008:Generated_Source\PSoC5/USBUART.c **** 
2009:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBUART.c **** 
2012:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBUART.c **** 
2017:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBUART.c **** 
2021:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBUART.c **** 
2025:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBUART.c ****                     {
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 61


2028:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBUART.c ****                     }
2030:Generated_Source\PSoC5/USBUART.c **** 
2031:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
2033:Generated_Source\PSoC5/USBUART.c **** 
2034:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBUART.c **** 
2037:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBUART.c **** 
2042:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBUART.c ****                 }
2044:Generated_Source\PSoC5/USBUART.c ****                 else
2045:Generated_Source\PSoC5/USBUART.c ****                 {
2046:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBUART.c ****                 }
2049:Generated_Source\PSoC5/USBUART.c ****             }
2050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBUART.c ****     }
2053:Generated_Source\PSoC5/USBUART.c **** }
2054:Generated_Source\PSoC5/USBUART.c **** 
2055:Generated_Source\PSoC5/USBUART.c **** 
2056:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP16
2058:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBUART.c **** *
2060:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBUART.c **** *
2064:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBUART.c **** *
2070:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBUART.c **** *
2076:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBUART.c **** *
2078:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBUART.c **** *
2082:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 62


2085:Generated_Source\PSoC5/USBUART.c **** *
2086:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBUART.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBUART.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBUART.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBUART.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBUART.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBUART.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBUART.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBUART.c **** *
2097:Generated_Source\PSoC5/USBUART.c **** * \return
2098:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBUART.c **** *
2100:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2101:Generated_Source\PSoC5/USBUART.c **** *  No.
2102:Generated_Source\PSoC5/USBUART.c **** *
2103:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBUART.c **** {
2106:Generated_Source\PSoC5/USBUART.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBUART.c **** 
2108:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBUART.c **** 
2111:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
2112:Generated_Source\PSoC5/USBUART.c ****     {
2113:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBUART.c **** 
2118:Generated_Source\PSoC5/USBUART.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBUART.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBUART.c **** 
2121:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBUART.c ****         {
2123:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBUART.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBUART.c **** 
2126:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBUART.c ****             {
2130:Generated_Source\PSoC5/USBUART.c ****                 dataBuf[i] = (uint16) USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBUART.c ****             }
2132:Generated_Source\PSoC5/USBUART.c ****         }
2133:Generated_Source\PSoC5/USBUART.c **** 
2134:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBUART.c ****     #else
2137:Generated_Source\PSoC5/USBUART.c **** 
2138:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBUART.c ****         {
2140:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 63


2142:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBUART.c **** 
2145:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2147:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBUART.c **** 
2149:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBUART.c **** 
2153:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBUART.c **** 
2156:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBUART.c **** 
2159:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBUART.c **** 
2163:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBUART.c ****             */
2166:Generated_Source\PSoC5/USBUART.c ****         }
2167:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBUART.c **** 
2169:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBUART.c ****         {
2171:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBUART.c **** 
2174:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBUART_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBUART.c **** 
2177:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBUART_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBUART.c **** 
2180:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC5/USBUART.c **** 
2183:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBUART.c ****                                                                   ((USBUART_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC5/USBUART.c ****                                                                    (USBUART_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC5/USBUART.c **** 
2188:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC5/USBUART.c **** 
2192:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
2195:Generated_Source\PSoC5/USBUART.c **** 
2196:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
2198:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 64


2199:Generated_Source\PSoC5/USBUART.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= USBUART_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBUART.c **** 
2202:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBUART.c **** 
2206:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC5/USBUART.c **** 
2209:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBUART.c **** 
2212:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2214:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP16_BA
2215:Generated_Source\PSoC5/USBUART.c **** 
2216:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC5/USBUART.c **** 
2219:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBUART.c **** 
2223:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBUART.c **** 
2227:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBUART.c **** 
2230:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBUART.c ****             
2233:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBUART.c ****             {
2235:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBUART.c ****             }
2237:Generated_Source\PSoC5/USBUART.c **** 
2238:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBUART.c **** 
2241:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBUART.c ****             */
2244:Generated_Source\PSoC5/USBUART.c ****         }
2245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBUART.c ****     }
2248:Generated_Source\PSoC5/USBUART.c ****     else
2249:Generated_Source\PSoC5/USBUART.c ****     {
2250:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBUART.c ****     }
2252:Generated_Source\PSoC5/USBUART.c **** 
2253:Generated_Source\PSoC5/USBUART.c ****     return (length);
2254:Generated_Source\PSoC5/USBUART.c **** }
2255:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_16BITS_EP_ACCESS_ENABLE) */
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 65


2256:Generated_Source\PSoC5/USBUART.c **** 
2257:Generated_Source\PSoC5/USBUART.c **** 
2258:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableOutEP
2260:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBUART.c **** *
2262:Generated_Source\PSoC5/USBUART.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBUART.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBUART.c **** *
2265:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBUART.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBUART.c **** *
2268:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2269:Generated_Source\PSoC5/USBUART.c **** *
2270:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBUART.c **** *
2272:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2273:Generated_Source\PSoC5/USBUART.c **** *  No.
2274:Generated_Source\PSoC5/USBUART.c **** *
2275:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBUART.c **** {
 1386              		.loc 1 2277 0
 1387              		.cfi_startproc
 1388              		@ args = 0, pretend = 0, frame = 8
 1389              		@ frame_needed = 1, uses_anonymous_args = 0
 1390              		@ link register save eliminated.
 1391 0000 90B4     		push	{r4, r7}
 1392              		.cfi_def_cfa_offset 8
 1393              		.cfi_offset 4, -8
 1394              		.cfi_offset 7, -4
 1395 0002 82B0     		sub	sp, sp, #8
 1396              		.cfi_def_cfa_offset 16
 1397 0004 00AF     		add	r7, sp, #0
 1398              		.cfi_def_cfa_register 7
 1399 0006 0346     		mov	r3, r0
 1400 0008 FB71     		strb	r3, [r7, #7]
2278:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1401              		.loc 1 2278 0
 1402 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1403 000c 002B     		cmp	r3, #0
 1404 000e 1CD0     		beq	.L75
 1405              		.loc 1 2278 0 is_stmt 0 discriminator 1
 1406 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1407 0012 082B     		cmp	r3, #8
 1408 0014 19D8     		bhi	.L75
2279:Generated_Source\PSoC5/USBUART.c ****     {
2280:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1409              		.loc 1 2280 0 is_stmt 1
 1410 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1411 0018 0E49     		ldr	r1, .L76
 1412 001a 1346     		mov	r3, r2
 1413 001c 5B00     		lsls	r3, r3, #1
 1414 001e 1344     		add	r3, r3, r2
 1415 0020 9B00     		lsls	r3, r3, #2
 1416 0022 0B44     		add	r3, r3, r1
 1417 0024 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 66


 1418 0026 0022     		movs	r2, #0
 1419 0028 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC5/USBUART.c **** 
2282:Generated_Source\PSoC5/USBUART.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1420              		.loc 1 2283 0
 1421 002a 0B48     		ldr	r0, .L76+4
 1422 002c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1423 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1424 0030 084C     		ldr	r4, .L76
 1425 0032 1346     		mov	r3, r2
 1426 0034 5B00     		lsls	r3, r3, #1
 1427 0036 1344     		add	r3, r3, r2
 1428 0038 9B00     		lsls	r3, r3, #2
 1429 003a 2344     		add	r3, r3, r4
 1430 003c 0533     		adds	r3, r3, #5
 1431 003e 1B78     		ldrb	r3, [r3]
 1432 0040 DAB2     		uxtb	r2, r3
 1433 0042 0B01     		lsls	r3, r1, #4
 1434 0044 0344     		add	r3, r3, r0
 1435 0046 0233     		adds	r3, r3, #2
 1436 0048 1A70     		strb	r2, [r3]
 1437              	.L75:
2284:Generated_Source\PSoC5/USBUART.c ****         
2285:Generated_Source\PSoC5/USBUART.c ****     }
2286:Generated_Source\PSoC5/USBUART.c **** }
 1438              		.loc 1 2286 0
 1439 004a 00BF     		nop
 1440 004c 0837     		adds	r7, r7, #8
 1441              		.cfi_def_cfa_offset 8
 1442 004e BD46     		mov	sp, r7
 1443              		.cfi_def_cfa_register 13
 1444              		@ sp needed
 1445 0050 90BC     		pop	{r4, r7}
 1446              		.cfi_restore 7
 1447              		.cfi_restore 4
 1448              		.cfi_def_cfa_offset 0
 1449 0052 7047     		bx	lr
 1450              	.L77:
 1451              		.align	2
 1452              	.L76:
 1453 0054 00000000 		.word	USBUART_EP
 1454 0058 FC5F0040 		.word	1073766396
 1455              		.cfi_endproc
 1456              	.LFE13:
 1457              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 1458              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
 1459              		.align	2
 1460              		.global	USBUART_DisableOutEP
 1461              		.thumb
 1462              		.thumb_func
 1463              		.type	USBUART_DisableOutEP, %function
 1464              	USBUART_DisableOutEP:
 1465              	.LFB14:
2287:Generated_Source\PSoC5/USBUART.c **** 
2288:Generated_Source\PSoC5/USBUART.c **** 
2289:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 67


2290:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableOutEP
2291:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBUART.c **** *
2293:Generated_Source\PSoC5/USBUART.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBUART.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBUART.c **** *
2296:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBUART.c **** *
2299:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBUART.c **** {
 1466              		.loc 1 2301 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 8
 1469              		@ frame_needed = 1, uses_anonymous_args = 0
 1470              		@ link register save eliminated.
 1471 0000 80B4     		push	{r7}
 1472              		.cfi_def_cfa_offset 4
 1473              		.cfi_offset 7, -4
 1474 0002 83B0     		sub	sp, sp, #12
 1475              		.cfi_def_cfa_offset 16
 1476 0004 00AF     		add	r7, sp, #0
 1477              		.cfi_def_cfa_register 7
 1478 0006 0346     		mov	r3, r0
 1479 0008 FB71     		strb	r3, [r7, #7]
2302:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1480              		.loc 1 2302 0
 1481 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1482 000c 002B     		cmp	r3, #0
 1483 000e 09D0     		beq	.L80
 1484              		.loc 1 2302 0 is_stmt 0 discriminator 1
 1485 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1486 0012 082B     		cmp	r3, #8
 1487 0014 06D8     		bhi	.L80
2303:Generated_Source\PSoC5/USBUART.c ****     {
2304:Generated_Source\PSoC5/USBUART.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_MODE_NAK_OUT;
 1488              		.loc 1 2305 0 is_stmt 1
 1489 0016 064A     		ldr	r2, .L81
 1490 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1491 001a 1B01     		lsls	r3, r3, #4
 1492 001c 1344     		add	r3, r3, r2
 1493 001e 0233     		adds	r3, r3, #2
 1494 0020 0822     		movs	r2, #8
 1495 0022 1A70     		strb	r2, [r3]
 1496              	.L80:
2306:Generated_Source\PSoC5/USBUART.c ****     }
2307:Generated_Source\PSoC5/USBUART.c **** }
 1497              		.loc 1 2307 0
 1498 0024 00BF     		nop
 1499 0026 0C37     		adds	r7, r7, #12
 1500              		.cfi_def_cfa_offset 4
 1501 0028 BD46     		mov	sp, r7
 1502              		.cfi_def_cfa_register 13
 1503              		@ sp needed
 1504 002a 80BC     		pop	{r7}
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 68


 1505              		.cfi_restore 7
 1506              		.cfi_def_cfa_offset 0
 1507 002c 7047     		bx	lr
 1508              	.L82:
 1509 002e 00BF     		.align	2
 1510              	.L81:
 1511 0030 FC5F0040 		.word	1073766396
 1512              		.cfi_endproc
 1513              	.LFE14:
 1514              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1515              		.section	.text.USBUART_Force,"ax",%progbits
 1516              		.align	2
 1517              		.global	USBUART_Force
 1518              		.thumb
 1519              		.thumb_func
 1520              		.type	USBUART_Force, %function
 1521              	USBUART_Force:
 1522              	.LFB15:
2308:Generated_Source\PSoC5/USBUART.c **** 
2309:Generated_Source\PSoC5/USBUART.c **** 
2310:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Force
2312:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBUART.c **** *
2314:Generated_Source\PSoC5/USBUART.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBUART.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBUART.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBUART.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBUART.c **** *
2319:Generated_Source\PSoC5/USBUART.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBUART.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBUART.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBUART.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBUART.c **** *
2328:Generated_Source\PSoC5/USBUART.c **** *
2329:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBUART.c **** void USBUART_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBUART.c **** {
 1523              		.loc 1 2331 0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 8
 1526              		@ frame_needed = 1, uses_anonymous_args = 0
 1527              		@ link register save eliminated.
 1528 0000 80B4     		push	{r7}
 1529              		.cfi_def_cfa_offset 4
 1530              		.cfi_offset 7, -4
 1531 0002 83B0     		sub	sp, sp, #12
 1532              		.cfi_def_cfa_offset 16
 1533 0004 00AF     		add	r7, sp, #0
 1534              		.cfi_def_cfa_register 7
 1535 0006 0346     		mov	r3, r0
 1536 0008 FB71     		strb	r3, [r7, #7]
2332:Generated_Source\PSoC5/USBUART.c ****     /* This registers is used only for manual control of SIE (no masking is
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 69


2333:Generated_Source\PSoC5/USBUART.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBUART.c ****     */
2335:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG = bState;
 1537              		.loc 1 2335 0
 1538 000a 044A     		ldr	r2, .L84
 1539 000c FB79     		ldrb	r3, [r7, #7]
 1540 000e 1370     		strb	r3, [r2]
2336:Generated_Source\PSoC5/USBUART.c **** }
 1541              		.loc 1 2336 0
 1542 0010 00BF     		nop
 1543 0012 0C37     		adds	r7, r7, #12
 1544              		.cfi_def_cfa_offset 4
 1545 0014 BD46     		mov	sp, r7
 1546              		.cfi_def_cfa_register 13
 1547              		@ sp needed
 1548 0016 80BC     		pop	{r7}
 1549              		.cfi_restore 7
 1550              		.cfi_def_cfa_offset 0
 1551 0018 7047     		bx	lr
 1552              	.L85:
 1553 001a 00BF     		.align	2
 1554              	.L84:
 1555 001c 10600040 		.word	1073766416
 1556              		.cfi_endproc
 1557              	.LFE15:
 1558              		.size	USBUART_Force, .-USBUART_Force
 1559              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1560              		.align	2
 1561              		.global	USBUART_GetEPAckState
 1562              		.thumb
 1563              		.thumb_func
 1564              		.type	USBUART_GetEPAckState, %function
 1565              	USBUART_GetEPAckState:
 1566              	.LFB16:
2337:Generated_Source\PSoC5/USBUART.c **** 
2338:Generated_Source\PSoC5/USBUART.c **** 
2339:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPAckState
2341:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBUART.c **** *
2343:Generated_Source\PSoC5/USBUART.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBUART.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBUART.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBUART.c **** *
2347:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBUART.c **** *
2350:Generated_Source\PSoC5/USBUART.c **** *  \return
2351:Generated_Source\PSoC5/USBUART.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBUART.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBUART.c **** *
2354:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBUART.c **** {
 1567              		.loc 1 2356 0
 1568              		.cfi_startproc
 1569              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 70


 1570              		@ frame_needed = 1, uses_anonymous_args = 0
 1571              		@ link register save eliminated.
 1572 0000 80B4     		push	{r7}
 1573              		.cfi_def_cfa_offset 4
 1574              		.cfi_offset 7, -4
 1575 0002 85B0     		sub	sp, sp, #20
 1576              		.cfi_def_cfa_offset 24
 1577 0004 00AF     		add	r7, sp, #0
 1578              		.cfi_def_cfa_register 7
 1579 0006 0346     		mov	r3, r0
 1580 0008 FB71     		strb	r3, [r7, #7]
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
 1581              		.loc 1 2357 0
 1582 000a 0023     		movs	r3, #0
 1583 000c FB73     		strb	r3, [r7, #15]
2358:Generated_Source\PSoC5/USBUART.c **** 
2359:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1584              		.loc 1 2359 0
 1585 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1586 0010 002B     		cmp	r3, #0
 1587 0012 0CD0     		beq	.L87
 1588              		.loc 1 2359 0 is_stmt 0 discriminator 1
 1589 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1590 0016 082B     		cmp	r3, #8
 1591 0018 09D8     		bhi	.L87
2360:Generated_Source\PSoC5/USBUART.c ****     {
2361:Generated_Source\PSoC5/USBUART.c ****         cr = USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBUART_MODE_ACKD;
 1592              		.loc 1 2361 0 is_stmt 1
 1593 001a 084A     		ldr	r2, .L89
 1594 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1595 001e 1B01     		lsls	r3, r3, #4
 1596 0020 1344     		add	r3, r3, r2
 1597 0022 0233     		adds	r3, r3, #2
 1598 0024 1B78     		ldrb	r3, [r3]
 1599 0026 DBB2     		uxtb	r3, r3
 1600 0028 03F01003 		and	r3, r3, #16
 1601 002c FB73     		strb	r3, [r7, #15]
 1602              	.L87:
2362:Generated_Source\PSoC5/USBUART.c ****     }
2363:Generated_Source\PSoC5/USBUART.c **** 
2364:Generated_Source\PSoC5/USBUART.c ****     return ((uint8) cr);
 1603              		.loc 1 2364 0
 1604 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2365:Generated_Source\PSoC5/USBUART.c **** }
 1605              		.loc 1 2365 0
 1606 0030 1846     		mov	r0, r3
 1607 0032 1437     		adds	r7, r7, #20
 1608              		.cfi_def_cfa_offset 4
 1609 0034 BD46     		mov	sp, r7
 1610              		.cfi_def_cfa_register 13
 1611              		@ sp needed
 1612 0036 80BC     		pop	{r7}
 1613              		.cfi_restore 7
 1614              		.cfi_def_cfa_offset 0
 1615 0038 7047     		bx	lr
 1616              	.L90:
 1617 003a 00BF     		.align	2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 71


 1618              	.L89:
 1619 003c FC5F0040 		.word	1073766396
 1620              		.cfi_endproc
 1621              	.LFE16:
 1622              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1623              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1624              		.align	2
 1625              		.global	USBUART_SetPowerStatus
 1626              		.thumb
 1627              		.thumb_func
 1628              		.type	USBUART_SetPowerStatus, %function
 1629              	USBUART_SetPowerStatus:
 1630              	.LFB17:
2366:Generated_Source\PSoC5/USBUART.c **** 
2367:Generated_Source\PSoC5/USBUART.c **** 
2368:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_SetPowerStatus
2370:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBUART.c **** *
2372:Generated_Source\PSoC5/USBUART.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBUART.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBUART.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBUART.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBUART.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBUART.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBUART.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBUART.c **** *
2380:Generated_Source\PSoC5/USBUART.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBUART.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBUART.c **** *        given here:
2383:Generated_Source\PSoC5/USBUART.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBUART.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBUART.c **** *
2388:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2389:Generated_Source\PSoC5/USBUART.c **** *
2390:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBUART.c **** *
2392:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2393:Generated_Source\PSoC5/USBUART.c **** *  No.
2394:Generated_Source\PSoC5/USBUART.c **** *
2395:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBUART.c **** {
 1631              		.loc 1 2397 0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 8
 1634              		@ frame_needed = 1, uses_anonymous_args = 0
 1635              		@ link register save eliminated.
 1636 0000 80B4     		push	{r7}
 1637              		.cfi_def_cfa_offset 4
 1638              		.cfi_offset 7, -4
 1639 0002 83B0     		sub	sp, sp, #12
 1640              		.cfi_def_cfa_offset 16
 1641 0004 00AF     		add	r7, sp, #0
 1642              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 72


 1643 0006 0346     		mov	r3, r0
 1644 0008 FB71     		strb	r3, [r7, #7]
2398:Generated_Source\PSoC5/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1645              		.loc 1 2398 0
 1646 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1647 000c 002B     		cmp	r3, #0
 1648 000e 08D0     		beq	.L92
2399:Generated_Source\PSoC5/USBUART.c ****     {
2400:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus |= (uint8)  USBUART_DEVICE_STATUS_SELF_POWERED;
 1649              		.loc 1 2400 0
 1650 0010 0A4B     		ldr	r3, .L95
 1651 0012 1B78     		ldrb	r3, [r3]
 1652 0014 DBB2     		uxtb	r3, r3
 1653 0016 43F00103 		orr	r3, r3, #1
 1654 001a DAB2     		uxtb	r2, r3
 1655 001c 074B     		ldr	r3, .L95
 1656 001e 1A70     		strb	r2, [r3]
2401:Generated_Source\PSoC5/USBUART.c ****     }
2402:Generated_Source\PSoC5/USBUART.c ****     else
2403:Generated_Source\PSoC5/USBUART.c ****     {
2404:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus &= (uint8) ~USBUART_DEVICE_STATUS_SELF_POWERED;
2405:Generated_Source\PSoC5/USBUART.c ****     }
2406:Generated_Source\PSoC5/USBUART.c **** }
 1657              		.loc 1 2406 0
 1658 0020 07E0     		b	.L94
 1659              	.L92:
2404:Generated_Source\PSoC5/USBUART.c ****     }
 1660              		.loc 1 2404 0
 1661 0022 064B     		ldr	r3, .L95
 1662 0024 1B78     		ldrb	r3, [r3]
 1663 0026 DBB2     		uxtb	r3, r3
 1664 0028 23F00103 		bic	r3, r3, #1
 1665 002c DAB2     		uxtb	r2, r3
 1666 002e 034B     		ldr	r3, .L95
 1667 0030 1A70     		strb	r2, [r3]
 1668              	.L94:
 1669              		.loc 1 2406 0
 1670 0032 00BF     		nop
 1671 0034 0C37     		adds	r7, r7, #12
 1672              		.cfi_def_cfa_offset 4
 1673 0036 BD46     		mov	sp, r7
 1674              		.cfi_def_cfa_register 13
 1675              		@ sp needed
 1676 0038 80BC     		pop	{r7}
 1677              		.cfi_restore 7
 1678              		.cfi_def_cfa_offset 0
 1679 003a 7047     		bx	lr
 1680              	.L96:
 1681              		.align	2
 1682              	.L95:
 1683 003c 00000000 		.word	USBUART_deviceStatus
 1684              		.cfi_endproc
 1685              	.LFE17:
 1686              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 1687              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 1688              		.align	2
 1689              		.global	USBUART_RWUEnabled
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 73


 1690              		.thumb
 1691              		.thumb_func
 1692              		.type	USBUART_RWUEnabled, %function
 1693              	USBUART_RWUEnabled:
 1694              	.LFB18:
2407:Generated_Source\PSoC5/USBUART.c **** 
2408:Generated_Source\PSoC5/USBUART.c **** 
2409:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_VBusPresent
2412:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBUART.c ****     *
2414:Generated_Source\PSoC5/USBUART.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBUART.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBUART.c ****     *
2417:Generated_Source\PSoC5/USBUART.c ****     * \return
2418:Generated_Source\PSoC5/USBUART.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBUART.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBUART.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBUART.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBUART.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBUART.c ****     *
2424:Generated_Source\PSoC5/USBUART.c ****     *
2425:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBUART.c ****     {
2428:Generated_Source\PSoC5/USBUART.c ****         return ((0u != (USBUART_VBUS_STATUS_REG & USBUART_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBUART.c ****     }
2430:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBUART.c **** 
2432:Generated_Source\PSoC5/USBUART.c **** 
2433:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_RWUEnabled
2435:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBUART.c **** *
2437:Generated_Source\PSoC5/USBUART.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBUART.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBUART.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBUART.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBUART.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBUART.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBUART.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBUART.c **** *
2445:Generated_Source\PSoC5/USBUART.c **** *
2446:Generated_Source\PSoC5/USBUART.c **** * \return
2447:Generated_Source\PSoC5/USBUART.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBUART.c **** *
2449:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2450:Generated_Source\PSoC5/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBUART.c **** *
2452:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBUART.c **** {
 1695              		.loc 1 2454 0
 1696              		.cfi_startproc
 1697              		@ args = 0, pretend = 0, frame = 8
 1698              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 74


 1699              		@ link register save eliminated.
 1700 0000 80B4     		push	{r7}
 1701              		.cfi_def_cfa_offset 4
 1702              		.cfi_offset 7, -4
 1703 0002 83B0     		sub	sp, sp, #12
 1704              		.cfi_def_cfa_offset 16
 1705 0004 00AF     		add	r7, sp, #0
 1706              		.cfi_def_cfa_register 7
2455:Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
 1707              		.loc 1 2455 0
 1708 0006 0023     		movs	r3, #0
 1709 0008 FB71     		strb	r3, [r7, #7]
2456:Generated_Source\PSoC5/USBUART.c **** 
2457:Generated_Source\PSoC5/USBUART.c ****     if (0u != (USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP))
 1710              		.loc 1 2457 0
 1711 000a 074B     		ldr	r3, .L100
 1712 000c 1B78     		ldrb	r3, [r3]
 1713 000e DBB2     		uxtb	r3, r3
 1714 0010 03F00203 		and	r3, r3, #2
 1715 0014 002B     		cmp	r3, #0
 1716 0016 01D0     		beq	.L98
2458:Generated_Source\PSoC5/USBUART.c ****     {
2459:Generated_Source\PSoC5/USBUART.c ****         result = USBUART_TRUE;
 1717              		.loc 1 2459 0
 1718 0018 0123     		movs	r3, #1
 1719 001a FB71     		strb	r3, [r7, #7]
 1720              	.L98:
2460:Generated_Source\PSoC5/USBUART.c ****     }
2461:Generated_Source\PSoC5/USBUART.c **** 
2462:Generated_Source\PSoC5/USBUART.c ****     return (result);
 1721              		.loc 1 2462 0
 1722 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
2463:Generated_Source\PSoC5/USBUART.c **** }
 1723              		.loc 1 2463 0
 1724 001e 1846     		mov	r0, r3
 1725 0020 0C37     		adds	r7, r7, #12
 1726              		.cfi_def_cfa_offset 4
 1727 0022 BD46     		mov	sp, r7
 1728              		.cfi_def_cfa_register 13
 1729              		@ sp needed
 1730 0024 80BC     		pop	{r7}
 1731              		.cfi_restore 7
 1732              		.cfi_def_cfa_offset 0
 1733 0026 7047     		bx	lr
 1734              	.L101:
 1735              		.align	2
 1736              	.L100:
 1737 0028 00000000 		.word	USBUART_deviceStatus
 1738              		.cfi_endproc
 1739              	.LFE18:
 1740              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 1741              		.section	.text.USBUART_GetDeviceAddress,"ax",%progbits
 1742              		.align	2
 1743              		.global	USBUART_GetDeviceAddress
 1744              		.thumb
 1745              		.thumb_func
 1746              		.type	USBUART_GetDeviceAddress, %function
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 75


 1747              	USBUART_GetDeviceAddress:
 1748              	.LFB19:
2464:Generated_Source\PSoC5/USBUART.c **** 
2465:Generated_Source\PSoC5/USBUART.c **** 
2466:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetDeviceAddress
2468:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBUART.c **** *
2470:Generated_Source\PSoC5/USBUART.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBUART.c **** *
2472:Generated_Source\PSoC5/USBUART.c **** * \return
2473:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBUART.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBUART.c **** *
2476:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBUART.c **** {
 1749              		.loc 1 2478 0
 1750              		.cfi_startproc
 1751              		@ args = 0, pretend = 0, frame = 0
 1752              		@ frame_needed = 1, uses_anonymous_args = 0
 1753              		@ link register save eliminated.
 1754 0000 80B4     		push	{r7}
 1755              		.cfi_def_cfa_offset 4
 1756              		.cfi_offset 7, -4
 1757 0002 00AF     		add	r7, sp, #0
 1758              		.cfi_def_cfa_register 7
2479:Generated_Source\PSoC5/USBUART.c ****     return (uint8)(USBUART_CR0_REG & USBUART_CR0_DEVICE_ADDRESS_MASK);
 1759              		.loc 1 2479 0
 1760 0004 044B     		ldr	r3, .L104
 1761 0006 1B78     		ldrb	r3, [r3]
 1762 0008 DBB2     		uxtb	r3, r3
 1763 000a 03F07F03 		and	r3, r3, #127
 1764 000e DBB2     		uxtb	r3, r3
2480:Generated_Source\PSoC5/USBUART.c **** }
 1765              		.loc 1 2480 0
 1766 0010 1846     		mov	r0, r3
 1767 0012 BD46     		mov	sp, r7
 1768              		.cfi_def_cfa_register 13
 1769              		@ sp needed
 1770 0014 80BC     		pop	{r7}
 1771              		.cfi_restore 7
 1772              		.cfi_def_cfa_offset 0
 1773 0016 7047     		bx	lr
 1774              	.L105:
 1775              		.align	2
 1776              	.L104:
 1777 0018 08600040 		.word	1073766408
 1778              		.cfi_endproc
 1779              	.LFE19:
 1780              		.size	USBUART_GetDeviceAddress, .-USBUART_GetDeviceAddress
 1781              		.section	.text.USBUART_EnableSofInt,"ax",%progbits
 1782              		.align	2
 1783              		.global	USBUART_EnableSofInt
 1784              		.thumb
 1785              		.thumb_func
 1786              		.type	USBUART_EnableSofInt, %function
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 76


 1787              	USBUART_EnableSofInt:
 1788              	.LFB20:
2481:Generated_Source\PSoC5/USBUART.c **** 
2482:Generated_Source\PSoC5/USBUART.c **** 
2483:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableSofInt
2485:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBUART.c **** *
2487:Generated_Source\PSoC5/USBUART.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBUART.c **** *
2490:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBUART.c **** {
 1789              		.loc 1 2492 0
 1790              		.cfi_startproc
 1791              		@ args = 0, pretend = 0, frame = 0
 1792              		@ frame_needed = 1, uses_anonymous_args = 0
 1793              		@ link register save eliminated.
 1794 0000 80B4     		push	{r7}
 1795              		.cfi_def_cfa_offset 4
 1796              		.cfi_offset 7, -4
 1797 0002 00AF     		add	r7, sp, #0
 1798              		.cfi_def_cfa_register 7
2493:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG |= (uint32) USBUART_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBUART.c **** #else
2497:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 1799              		.loc 1 2499 0
 1800 0004 034B     		ldr	r3, .L107
 1801 0006 4FF40012 		mov	r2, #2097152
 1802 000a 1A60     		str	r2, [r3]
2500:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBUART.c **** }
 1803              		.loc 1 2502 0
 1804 000c 00BF     		nop
 1805 000e BD46     		mov	sp, r7
 1806              		.cfi_def_cfa_register 13
 1807              		@ sp needed
 1808 0010 80BC     		pop	{r7}
 1809              		.cfi_restore 7
 1810              		.cfi_def_cfa_offset 0
 1811 0012 7047     		bx	lr
 1812              	.L108:
 1813              		.align	2
 1814              	.L107:
 1815 0014 00E100E0 		.word	-536813312
 1816              		.cfi_endproc
 1817              	.LFE20:
 1818              		.size	USBUART_EnableSofInt, .-USBUART_EnableSofInt
 1819              		.section	.text.USBUART_DisableSofInt,"ax",%progbits
 1820              		.align	2
 1821              		.global	USBUART_DisableSofInt
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 77


 1822              		.thumb
 1823              		.thumb_func
 1824              		.type	USBUART_DisableSofInt, %function
 1825              	USBUART_DisableSofInt:
 1826              	.LFB21:
2503:Generated_Source\PSoC5/USBUART.c **** 
2504:Generated_Source\PSoC5/USBUART.c **** 
2505:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableSofInt
2507:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBUART.c **** *
2509:Generated_Source\PSoC5/USBUART.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBUART.c **** *
2512:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBUART.c **** {
 1827              		.loc 1 2514 0
 1828              		.cfi_startproc
 1829              		@ args = 0, pretend = 0, frame = 0
 1830              		@ frame_needed = 1, uses_anonymous_args = 0
 1831              		@ link register save eliminated.
 1832 0000 80B4     		push	{r7}
 1833              		.cfi_def_cfa_offset 4
 1834              		.cfi_offset 7, -4
 1835 0002 00AF     		add	r7, sp, #0
 1836              		.cfi_def_cfa_register 7
2515:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG &= (uint32) ~USBUART_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBUART.c **** #else
2519:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 1837              		.loc 1 2521 0
 1838 0004 034B     		ldr	r3, .L110
 1839 0006 4FF40012 		mov	r2, #2097152
 1840 000a 1A60     		str	r2, [r3]
2522:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2523:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
2524:Generated_Source\PSoC5/USBUART.c **** }
 1841              		.loc 1 2524 0
 1842 000c 00BF     		nop
 1843 000e BD46     		mov	sp, r7
 1844              		.cfi_def_cfa_register 13
 1845              		@ sp needed
 1846 0010 80BC     		pop	{r7}
 1847              		.cfi_restore 7
 1848              		.cfi_def_cfa_offset 0
 1849 0012 7047     		bx	lr
 1850              	.L111:
 1851              		.align	2
 1852              	.L110:
 1853 0014 80E100E0 		.word	-536813184
 1854              		.cfi_endproc
 1855              	.LFE21:
 1856              		.size	USBUART_DisableSofInt, .-USBUART_DisableSofInt
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 78


 1857              		.text
 1858              	.Letext0:
 1859              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1860              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 1861              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 1862              		.section	.debug_info,"",%progbits
 1863              	.Ldebug_info0:
 1864 0000 43070000 		.4byte	0x743
 1865 0004 0400     		.2byte	0x4
 1866 0006 00000000 		.4byte	.Ldebug_abbrev0
 1867 000a 04       		.byte	0x4
 1868 000b 01       		.uleb128 0x1
 1869 000c 66000000 		.4byte	.LASF93
 1870 0010 0C       		.byte	0xc
 1871 0011 A2030000 		.4byte	.LASF94
 1872 0015 9F010000 		.4byte	.LASF95
 1873 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1874 001d 00000000 		.4byte	0
 1875 0021 00000000 		.4byte	.Ldebug_line0
 1876 0025 02       		.uleb128 0x2
 1877 0026 01       		.byte	0x1
 1878 0027 06       		.byte	0x6
 1879 0028 69010000 		.4byte	.LASF0
 1880 002c 02       		.uleb128 0x2
 1881 002d 01       		.byte	0x1
 1882 002e 08       		.byte	0x8
 1883 002f 81040000 		.4byte	.LASF1
 1884 0033 02       		.uleb128 0x2
 1885 0034 02       		.byte	0x2
 1886 0035 05       		.byte	0x5
 1887 0036 8F040000 		.4byte	.LASF2
 1888 003a 02       		.uleb128 0x2
 1889 003b 02       		.byte	0x2
 1890 003c 07       		.byte	0x7
 1891 003d 25030000 		.4byte	.LASF3
 1892 0041 02       		.uleb128 0x2
 1893 0042 04       		.byte	0x4
 1894 0043 05       		.byte	0x5
 1895 0044 30020000 		.4byte	.LASF4
 1896 0048 02       		.uleb128 0x2
 1897 0049 04       		.byte	0x4
 1898 004a 07       		.byte	0x7
 1899 004b 13030000 		.4byte	.LASF5
 1900 004f 02       		.uleb128 0x2
 1901 0050 08       		.byte	0x8
 1902 0051 05       		.byte	0x5
 1903 0052 5B010000 		.4byte	.LASF6
 1904 0056 02       		.uleb128 0x2
 1905 0057 08       		.byte	0x8
 1906 0058 07       		.byte	0x7
 1907 0059 05010000 		.4byte	.LASF7
 1908 005d 03       		.uleb128 0x3
 1909 005e 04       		.byte	0x4
 1910 005f 05       		.byte	0x5
 1911 0060 696E7400 		.ascii	"int\000"
 1912 0064 02       		.uleb128 0x2
 1913 0065 04       		.byte	0x4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 79


 1914 0066 07       		.byte	0x7
 1915 0067 06030000 		.4byte	.LASF8
 1916 006b 04       		.uleb128 0x4
 1917 006c 39020000 		.4byte	.LASF9
 1918 0070 02       		.byte	0x2
 1919 0071 E401     		.2byte	0x1e4
 1920 0073 2C000000 		.4byte	0x2c
 1921 0077 04       		.uleb128 0x4
 1922 0078 00000000 		.4byte	.LASF10
 1923 007c 02       		.byte	0x2
 1924 007d E501     		.2byte	0x1e5
 1925 007f 3A000000 		.4byte	0x3a
 1926 0083 04       		.uleb128 0x4
 1927 0084 CE020000 		.4byte	.LASF11
 1928 0088 02       		.byte	0x2
 1929 0089 E601     		.2byte	0x1e6
 1930 008b 48000000 		.4byte	0x48
 1931 008f 02       		.uleb128 0x2
 1932 0090 04       		.byte	0x4
 1933 0091 04       		.byte	0x4
 1934 0092 40040000 		.4byte	.LASF12
 1935 0096 02       		.uleb128 0x2
 1936 0097 08       		.byte	0x8
 1937 0098 04       		.byte	0x4
 1938 0099 61020000 		.4byte	.LASF13
 1939 009d 02       		.uleb128 0x2
 1940 009e 01       		.byte	0x1
 1941 009f 08       		.byte	0x8
 1942 00a0 F2040000 		.4byte	.LASF14
 1943 00a4 04       		.uleb128 0x4
 1944 00a5 63040000 		.4byte	.LASF15
 1945 00a9 02       		.byte	0x2
 1946 00aa 8E02     		.2byte	0x28e
 1947 00ac B0000000 		.4byte	0xb0
 1948 00b0 05       		.uleb128 0x5
 1949 00b1 6B000000 		.4byte	0x6b
 1950 00b5 04       		.uleb128 0x4
 1951 00b6 86030000 		.4byte	.LASF16
 1952 00ba 02       		.byte	0x2
 1953 00bb 9002     		.2byte	0x290
 1954 00bd C1000000 		.4byte	0xc1
 1955 00c1 05       		.uleb128 0x5
 1956 00c2 83000000 		.4byte	0x83
 1957 00c6 02       		.uleb128 0x2
 1958 00c7 08       		.byte	0x8
 1959 00c8 04       		.byte	0x4
 1960 00c9 03040000 		.4byte	.LASF17
 1961 00cd 02       		.uleb128 0x2
 1962 00ce 04       		.byte	0x4
 1963 00cf 07       		.byte	0x7
 1964 00d0 FA030000 		.4byte	.LASF18
 1965 00d4 06       		.uleb128 0x6
 1966 00d5 0C       		.byte	0xc
 1967 00d6 03       		.byte	0x3
 1968 00d7 91       		.byte	0x91
 1969 00d8 49010000 		.4byte	0x149
 1970 00dc 07       		.uleb128 0x7
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 80


 1971 00dd 1D040000 		.4byte	.LASF19
 1972 00e1 03       		.byte	0x3
 1973 00e2 93       		.byte	0x93
 1974 00e3 6B000000 		.4byte	0x6b
 1975 00e7 00       		.byte	0
 1976 00e8 07       		.uleb128 0x7
 1977 00e9 58040000 		.4byte	.LASF20
 1978 00ed 03       		.byte	0x3
 1979 00ee 94       		.byte	0x94
 1980 00ef 6B000000 		.4byte	0x6b
 1981 00f3 01       		.byte	0x1
 1982 00f4 07       		.uleb128 0x7
 1983 00f5 D9030000 		.4byte	.LASF21
 1984 00f9 03       		.byte	0x3
 1985 00fa 95       		.byte	0x95
 1986 00fb 6B000000 		.4byte	0x6b
 1987 00ff 02       		.byte	0x2
 1988 0100 07       		.uleb128 0x7
 1989 0101 3F020000 		.4byte	.LASF22
 1990 0105 03       		.byte	0x3
 1991 0106 96       		.byte	0x96
 1992 0107 6B000000 		.4byte	0x6b
 1993 010b 03       		.byte	0x3
 1994 010c 07       		.uleb128 0x7
 1995 010d 1C010000 		.4byte	.LASF23
 1996 0111 03       		.byte	0x3
 1997 0112 97       		.byte	0x97
 1998 0113 6B000000 		.4byte	0x6b
 1999 0117 04       		.byte	0x4
 2000 0118 07       		.uleb128 0x7
 2001 0119 E1020000 		.4byte	.LASF24
 2002 011d 03       		.byte	0x3
 2003 011e 98       		.byte	0x98
 2004 011f 6B000000 		.4byte	0x6b
 2005 0123 05       		.byte	0x5
 2006 0124 07       		.uleb128 0x7
 2007 0125 1E050000 		.4byte	.LASF25
 2008 0129 03       		.byte	0x3
 2009 012a 99       		.byte	0x99
 2010 012b 77000000 		.4byte	0x77
 2011 012f 06       		.byte	0x6
 2012 0130 07       		.uleb128 0x7
 2013 0131 FC040000 		.4byte	.LASF26
 2014 0135 03       		.byte	0x3
 2015 0136 9A       		.byte	0x9a
 2016 0137 77000000 		.4byte	0x77
 2017 013b 08       		.byte	0x8
 2018 013c 07       		.uleb128 0x7
 2019 013d 75030000 		.4byte	.LASF27
 2020 0141 03       		.byte	0x3
 2021 0142 9B       		.byte	0x9b
 2022 0143 6B000000 		.4byte	0x6b
 2023 0147 0A       		.byte	0xa
 2024 0148 00       		.byte	0
 2025 0149 08       		.uleb128 0x8
 2026 014a 07050000 		.4byte	.LASF28
 2027 014e 03       		.byte	0x3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 81


 2028 014f 9C       		.byte	0x9c
 2029 0150 D4000000 		.4byte	0xd4
 2030 0154 06       		.uleb128 0x6
 2031 0155 10       		.byte	0x10
 2032 0156 03       		.byte	0x3
 2033 0157 D8       		.byte	0xd8
 2034 0158 8D010000 		.4byte	0x18d
 2035 015c 07       		.uleb128 0x7
 2036 015d 2C040000 		.4byte	.LASF29
 2037 0161 03       		.byte	0x3
 2038 0162 DA       		.byte	0xda
 2039 0163 6B000000 		.4byte	0x6b
 2040 0167 00       		.byte	0
 2041 0168 07       		.uleb128 0x7
 2042 0169 33040000 		.4byte	.LASF30
 2043 016d 03       		.byte	0x3
 2044 016e DB       		.byte	0xdb
 2045 016f 6B000000 		.4byte	0x6b
 2046 0173 01       		.byte	0x1
 2047 0174 07       		.uleb128 0x7
 2048 0175 3A040000 		.4byte	.LASF31
 2049 0179 03       		.byte	0x3
 2050 017a DC       		.byte	0xdc
 2051 017b 6B000000 		.4byte	0x6b
 2052 017f 02       		.byte	0x2
 2053 0180 09       		.uleb128 0x9
 2054 0181 67617000 		.ascii	"gap\000"
 2055 0185 03       		.byte	0x3
 2056 0186 DD       		.byte	0xdd
 2057 0187 8D010000 		.4byte	0x18d
 2058 018b 03       		.byte	0x3
 2059 018c 00       		.byte	0
 2060 018d 0A       		.uleb128 0xa
 2061 018e 6B000000 		.4byte	0x6b
 2062 0192 9D010000 		.4byte	0x19d
 2063 0196 0B       		.uleb128 0xb
 2064 0197 CD000000 		.4byte	0xcd
 2065 019b 0C       		.byte	0xc
 2066 019c 00       		.byte	0
 2067 019d 08       		.uleb128 0x8
 2068 019e CE040000 		.4byte	.LASF32
 2069 01a2 03       		.byte	0x3
 2070 01a3 DE       		.byte	0xde
 2071 01a4 54010000 		.4byte	0x154
 2072 01a8 06       		.uleb128 0x6
 2073 01a9 10       		.byte	0x10
 2074 01aa 03       		.byte	0x3
 2075 01ab EA       		.byte	0xea
 2076 01ac 29020000 		.4byte	0x229
 2077 01b0 07       		.uleb128 0x7
 2078 01b1 21010000 		.4byte	.LASF33
 2079 01b5 03       		.byte	0x3
 2080 01b6 EC       		.byte	0xec
 2081 01b7 6B000000 		.4byte	0x6b
 2082 01bb 00       		.byte	0
 2083 01bc 07       		.uleb128 0x7
 2084 01bd AD050000 		.4byte	.LASF34
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 82


 2085 01c1 03       		.byte	0x3
 2086 01c2 ED       		.byte	0xed
 2087 01c3 6B000000 		.4byte	0x6b
 2088 01c7 01       		.byte	0x1
 2089 01c8 07       		.uleb128 0x7
 2090 01c9 A1020000 		.4byte	.LASF35
 2091 01cd 03       		.byte	0x3
 2092 01ce EE       		.byte	0xee
 2093 01cf 6B000000 		.4byte	0x6b
 2094 01d3 02       		.byte	0x2
 2095 01d4 07       		.uleb128 0x7
 2096 01d5 E8020000 		.4byte	.LASF36
 2097 01d9 03       		.byte	0x3
 2098 01da EF       		.byte	0xef
 2099 01db 6B000000 		.4byte	0x6b
 2100 01df 03       		.byte	0x3
 2101 01e0 07       		.uleb128 0x7
 2102 01e1 5C020000 		.4byte	.LASF37
 2103 01e5 03       		.byte	0x3
 2104 01e6 F0       		.byte	0xf0
 2105 01e7 6B000000 		.4byte	0x6b
 2106 01eb 04       		.byte	0x4
 2107 01ec 07       		.uleb128 0x7
 2108 01ed C6040000 		.4byte	.LASF38
 2109 01f1 03       		.byte	0x3
 2110 01f2 F1       		.byte	0xf1
 2111 01f3 6B000000 		.4byte	0x6b
 2112 01f7 05       		.byte	0x5
 2113 01f8 07       		.uleb128 0x7
 2114 01f9 AC040000 		.4byte	.LASF39
 2115 01fd 03       		.byte	0x3
 2116 01fe F2       		.byte	0xf2
 2117 01ff 6B000000 		.4byte	0x6b
 2118 0203 06       		.byte	0x6
 2119 0204 07       		.uleb128 0x7
 2120 0205 24040000 		.4byte	.LASF40
 2121 0209 03       		.byte	0x3
 2122 020a F3       		.byte	0xf3
 2123 020b 6B000000 		.4byte	0x6b
 2124 020f 07       		.byte	0x7
 2125 0210 07       		.uleb128 0x7
 2126 0211 5D050000 		.4byte	.LASF41
 2127 0215 03       		.byte	0x3
 2128 0216 F4       		.byte	0xf4
 2129 0217 6B000000 		.4byte	0x6b
 2130 021b 08       		.byte	0x8
 2131 021c 09       		.uleb128 0x9
 2132 021d 67617000 		.ascii	"gap\000"
 2133 0221 03       		.byte	0x3
 2134 0222 F5       		.byte	0xf5
 2135 0223 29020000 		.4byte	0x229
 2136 0227 09       		.byte	0x9
 2137 0228 00       		.byte	0
 2138 0229 0A       		.uleb128 0xa
 2139 022a 6B000000 		.4byte	0x6b
 2140 022e 39020000 		.4byte	0x239
 2141 0232 0B       		.uleb128 0xb
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 83


 2142 0233 CD000000 		.4byte	0xcd
 2143 0237 06       		.byte	0x6
 2144 0238 00       		.byte	0
 2145 0239 08       		.uleb128 0x8
 2146 023a C3030000 		.4byte	.LASF42
 2147 023e 03       		.byte	0x3
 2148 023f F6       		.byte	0xf6
 2149 0240 A8010000 		.4byte	0x1a8
 2150 0244 0C       		.uleb128 0xc
 2151 0245 90       		.byte	0x90
 2152 0246 03       		.byte	0x3
 2153 0247 1201     		.2byte	0x112
 2154 0249 5B020000 		.4byte	0x25b
 2155 024d 0D       		.uleb128 0xd
 2156 024e DB020000 		.4byte	.LASF43
 2157 0252 03       		.byte	0x3
 2158 0253 1401     		.2byte	0x114
 2159 0255 5B020000 		.4byte	0x25b
 2160 0259 00       		.byte	0
 2161 025a 00       		.byte	0
 2162 025b 0A       		.uleb128 0xa
 2163 025c 9D010000 		.4byte	0x19d
 2164 0260 6B020000 		.4byte	0x26b
 2165 0264 0B       		.uleb128 0xb
 2166 0265 CD000000 		.4byte	0xcd
 2167 0269 08       		.byte	0x8
 2168 026a 00       		.byte	0
 2169 026b 04       		.uleb128 0x4
 2170 026c 03020000 		.4byte	.LASF44
 2171 0270 03       		.byte	0x3
 2172 0271 1501     		.2byte	0x115
 2173 0273 44020000 		.4byte	0x244
 2174 0277 0C       		.uleb128 0xc
 2175 0278 90       		.byte	0x90
 2176 0279 03       		.byte	0x3
 2177 027a 1801     		.2byte	0x118
 2178 027c 8E020000 		.4byte	0x28e
 2179 0280 0D       		.uleb128 0xd
 2180 0281 6F030000 		.4byte	.LASF45
 2181 0285 03       		.byte	0x3
 2182 0286 1A01     		.2byte	0x11a
 2183 0288 8E020000 		.4byte	0x28e
 2184 028c 00       		.byte	0
 2185 028d 00       		.byte	0
 2186 028e 0A       		.uleb128 0xa
 2187 028f 39020000 		.4byte	0x239
 2188 0293 9E020000 		.4byte	0x29e
 2189 0297 0B       		.uleb128 0xb
 2190 0298 CD000000 		.4byte	0xcd
 2191 029c 08       		.byte	0x8
 2192 029d 00       		.byte	0
 2193 029e 04       		.uleb128 0x4
 2194 029f E3030000 		.4byte	.LASF46
 2195 02a3 03       		.byte	0x3
 2196 02a4 1B01     		.2byte	0x11b
 2197 02a6 77020000 		.4byte	0x277
 2198 02aa 0E       		.uleb128 0xe
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 84


 2199 02ab 38030000 		.4byte	.LASF49
 2200 02af 01       		.byte	0x1
 2201 02b0 BA       		.byte	0xba
 2202 02b1 00000000 		.4byte	.LFB0
 2203 02b5 3C000000 		.4byte	.LFE0-.LFB0
 2204 02b9 01       		.uleb128 0x1
 2205 02ba 9C       		.byte	0x9c
 2206 02bb DC020000 		.4byte	0x2dc
 2207 02bf 0F       		.uleb128 0xf
 2208 02c0 3B010000 		.4byte	.LASF47
 2209 02c4 01       		.byte	0x1
 2210 02c5 BA       		.byte	0xba
 2211 02c6 6B000000 		.4byte	0x6b
 2212 02ca 02       		.uleb128 0x2
 2213 02cb 91       		.byte	0x91
 2214 02cc 77       		.sleb128 -9
 2215 02cd 0F       		.uleb128 0xf
 2216 02ce F7040000 		.4byte	.LASF48
 2217 02d2 01       		.byte	0x1
 2218 02d3 BA       		.byte	0xba
 2219 02d4 6B000000 		.4byte	0x6b
 2220 02d8 02       		.uleb128 0x2
 2221 02d9 91       		.byte	0x91
 2222 02da 76       		.sleb128 -10
 2223 02db 00       		.byte	0
 2224 02dc 0E       		.uleb128 0xe
 2225 02dd 62030000 		.4byte	.LASF50
 2226 02e1 01       		.byte	0x1
 2227 02e2 D3       		.byte	0xd3
 2228 02e3 00000000 		.4byte	.LFB1
 2229 02e7 A4010000 		.4byte	.LFE1-.LFB1
 2230 02eb 01       		.uleb128 0x1
 2231 02ec 9C       		.byte	0x9c
 2232 02ed 00030000 		.4byte	0x300
 2233 02f1 10       		.uleb128 0x10
 2234 02f2 4C050000 		.4byte	.LASF52
 2235 02f6 01       		.byte	0x1
 2236 02f7 FA       		.byte	0xfa
 2237 02f8 6B000000 		.4byte	0x6b
 2238 02fc 02       		.uleb128 0x2
 2239 02fd 91       		.byte	0x91
 2240 02fe 77       		.sleb128 -9
 2241 02ff 00       		.byte	0
 2242 0300 11       		.uleb128 0x11
 2243 0301 62050000 		.4byte	.LASF51
 2244 0305 01       		.byte	0x1
 2245 0306 CC01     		.2byte	0x1cc
 2246 0308 00000000 		.4byte	.LFB2
 2247 030c 20010000 		.4byte	.LFE2-.LFB2
 2248 0310 01       		.uleb128 0x1
 2249 0311 9C       		.byte	0x9c
 2250 0312 42030000 		.4byte	0x342
 2251 0316 12       		.uleb128 0x12
 2252 0317 3B010000 		.4byte	.LASF47
 2253 031b 01       		.byte	0x1
 2254 031c CC01     		.2byte	0x1cc
 2255 031e 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 85


 2256 0322 02       		.uleb128 0x2
 2257 0323 91       		.byte	0x91
 2258 0324 6F       		.sleb128 -17
 2259 0325 12       		.uleb128 0x12
 2260 0326 F7040000 		.4byte	.LASF48
 2261 032a 01       		.byte	0x1
 2262 032b CC01     		.2byte	0x1cc
 2263 032d 6B000000 		.4byte	0x6b
 2264 0331 02       		.uleb128 0x2
 2265 0332 91       		.byte	0x91
 2266 0333 6E       		.sleb128 -18
 2267 0334 13       		.uleb128 0x13
 2268 0335 6900     		.ascii	"i\000"
 2269 0337 01       		.byte	0x1
 2270 0338 D301     		.2byte	0x1d3
 2271 033a 6B000000 		.4byte	0x6b
 2272 033e 02       		.uleb128 0x2
 2273 033f 91       		.byte	0x91
 2274 0340 77       		.sleb128 -9
 2275 0341 00       		.byte	0
 2276 0342 14       		.uleb128 0x14
 2277 0343 B5050000 		.4byte	.LASF53
 2278 0347 01       		.byte	0x1
 2279 0348 9F02     		.2byte	0x29f
 2280 034a 00000000 		.4byte	.LFB3
 2281 034e 88000000 		.4byte	.LFE3-.LFB3
 2282 0352 01       		.uleb128 0x1
 2283 0353 9C       		.byte	0x9c
 2284 0354 66030000 		.4byte	0x366
 2285 0358 13       		.uleb128 0x13
 2286 0359 6900     		.ascii	"i\000"
 2287 035b 01       		.byte	0x1
 2288 035c A502     		.2byte	0x2a5
 2289 035e 6B000000 		.4byte	0x6b
 2290 0362 02       		.uleb128 0x2
 2291 0363 91       		.byte	0x91
 2292 0364 77       		.sleb128 -9
 2293 0365 00       		.byte	0
 2294 0366 11       		.uleb128 0x11
 2295 0367 2F000000 		.4byte	.LASF54
 2296 036b 01       		.byte	0x1
 2297 036c D902     		.2byte	0x2d9
 2298 036e 00000000 		.4byte	.LFB4
 2299 0372 0C010000 		.4byte	.LFE4-.LFB4
 2300 0376 01       		.uleb128 0x1
 2301 0377 9C       		.byte	0x9c
 2302 0378 8C030000 		.4byte	0x38c
 2303 037c 15       		.uleb128 0x15
 2304 037d 4C050000 		.4byte	.LASF52
 2305 0381 01       		.byte	0x1
 2306 0382 DB02     		.2byte	0x2db
 2307 0384 6B000000 		.4byte	0x6b
 2308 0388 02       		.uleb128 0x2
 2309 0389 91       		.byte	0x91
 2310 038a 77       		.sleb128 -9
 2311 038b 00       		.byte	0
 2312 038c 16       		.uleb128 0x16
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 86


 2313 038d 1A020000 		.4byte	.LASF56
 2314 0391 01       		.byte	0x1
 2315 0392 5103     		.2byte	0x351
 2316 0394 6B000000 		.4byte	0x6b
 2317 0398 00000000 		.4byte	.LFB5
 2318 039c 38000000 		.4byte	.LFE5-.LFB5
 2319 03a0 01       		.uleb128 0x1
 2320 03a1 9C       		.byte	0x9c
 2321 03a2 B6030000 		.4byte	0x3b6
 2322 03a6 15       		.uleb128 0x15
 2323 03a7 7F030000 		.4byte	.LASF55
 2324 03ab 01       		.byte	0x1
 2325 03ac 5303     		.2byte	0x353
 2326 03ae 6B000000 		.4byte	0x6b
 2327 03b2 02       		.uleb128 0x2
 2328 03b3 91       		.byte	0x91
 2329 03b4 77       		.sleb128 -9
 2330 03b5 00       		.byte	0
 2331 03b6 17       		.uleb128 0x17
 2332 03b7 42010000 		.4byte	.LASF77
 2333 03bb 01       		.byte	0x1
 2334 03bc 6803     		.2byte	0x368
 2335 03be 6B000000 		.4byte	0x6b
 2336 03c2 00000000 		.4byte	.LFB6
 2337 03c6 18000000 		.4byte	.LFE6-.LFB6
 2338 03ca 01       		.uleb128 0x1
 2339 03cb 9C       		.byte	0x9c
 2340 03cc 16       		.uleb128 0x16
 2341 03cd 8E050000 		.4byte	.LASF57
 2342 03d1 01       		.byte	0x1
 2343 03d2 8203     		.2byte	0x382
 2344 03d4 6B000000 		.4byte	0x6b
 2345 03d8 00000000 		.4byte	.LFB7
 2346 03dc 30000000 		.4byte	.LFE7-.LFB7
 2347 03e0 01       		.uleb128 0x1
 2348 03e1 9C       		.byte	0x9c
 2349 03e2 F6030000 		.4byte	0x3f6
 2350 03e6 13       		.uleb128 0x13
 2351 03e7 72657300 		.ascii	"res\000"
 2352 03eb 01       		.byte	0x1
 2353 03ec 8403     		.2byte	0x384
 2354 03ee 6B000000 		.4byte	0x6b
 2355 03f2 02       		.uleb128 0x2
 2356 03f3 91       		.byte	0x91
 2357 03f4 77       		.sleb128 -9
 2358 03f5 00       		.byte	0
 2359 03f6 16       		.uleb128 0x16
 2360 03f7 46030000 		.4byte	.LASF58
 2361 03fb 01       		.byte	0x1
 2362 03fc 9F03     		.2byte	0x39f
 2363 03fe 6B000000 		.4byte	0x6b
 2364 0402 00000000 		.4byte	.LFB8
 2365 0406 20000000 		.4byte	.LFE8-.LFB8
 2366 040a 01       		.uleb128 0x1
 2367 040b 9C       		.byte	0x9c
 2368 040c 20040000 		.4byte	0x420
 2369 0410 12       		.uleb128 0x12
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 87


 2370 0411 29050000 		.4byte	.LASF59
 2371 0415 01       		.byte	0x1
 2372 0416 9F03     		.2byte	0x39f
 2373 0418 6B000000 		.4byte	0x6b
 2374 041c 02       		.uleb128 0x2
 2375 041d 91       		.byte	0x91
 2376 041e 77       		.sleb128 -9
 2377 041f 00       		.byte	0
 2378 0420 16       		.uleb128 0x16
 2379 0421 99040000 		.4byte	.LASF60
 2380 0425 01       		.byte	0x1
 2381 0426 BF03     		.2byte	0x3bf
 2382 0428 6B000000 		.4byte	0x6b
 2383 042c 00000000 		.4byte	.LFB9
 2384 0430 2C000000 		.4byte	.LFE9-.LFB9
 2385 0434 01       		.uleb128 0x1
 2386 0435 9C       		.byte	0x9c
 2387 0436 4A040000 		.4byte	0x44a
 2388 043a 12       		.uleb128 0x12
 2389 043b 32010000 		.4byte	.LASF61
 2390 043f 01       		.byte	0x1
 2391 0440 BF03     		.2byte	0x3bf
 2392 0442 6B000000 		.4byte	0x6b
 2393 0446 02       		.uleb128 0x2
 2394 0447 91       		.byte	0x91
 2395 0448 77       		.sleb128 -9
 2396 0449 00       		.byte	0
 2397 044a 16       		.uleb128 0x16
 2398 044b 39050000 		.4byte	.LASF62
 2399 044f 01       		.byte	0x1
 2400 0450 D603     		.2byte	0x3d6
 2401 0452 77000000 		.4byte	0x77
 2402 0456 00000000 		.4byte	.LFB10
 2403 045a 60000000 		.4byte	.LFE10-.LFB10
 2404 045e 01       		.uleb128 0x1
 2405 045f 9C       		.byte	0x9c
 2406 0460 83040000 		.4byte	0x483
 2407 0464 12       		.uleb128 0x12
 2408 0465 32010000 		.4byte	.LASF61
 2409 0469 01       		.byte	0x1
 2410 046a D603     		.2byte	0x3d6
 2411 046c 6B000000 		.4byte	0x6b
 2412 0470 02       		.uleb128 0x2
 2413 0471 91       		.byte	0x91
 2414 0472 6F       		.sleb128 -17
 2415 0473 15       		.uleb128 0x15
 2416 0474 FE010000 		.4byte	.LASF63
 2417 0478 01       		.byte	0x1
 2418 0479 D803     		.2byte	0x3d8
 2419 047b 77000000 		.4byte	0x77
 2420 047f 02       		.uleb128 0x2
 2421 0480 91       		.byte	0x91
 2422 0481 76       		.sleb128 -10
 2423 0482 00       		.byte	0
 2424 0483 14       		.uleb128 0x14
 2425 0484 F4000000 		.4byte	.LASF64
 2426 0488 01       		.byte	0x1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 88


 2427 0489 3E05     		.2byte	0x53e
 2428 048b 00000000 		.4byte	.LFB11
 2429 048f 08010000 		.4byte	.LFE11-.LFB11
 2430 0493 01       		.uleb128 0x1
 2431 0494 9C       		.byte	0x9c
 2432 0495 DE040000 		.4byte	0x4de
 2433 0499 12       		.uleb128 0x12
 2434 049a 32010000 		.4byte	.LASF61
 2435 049e 01       		.byte	0x1
 2436 049f 3E05     		.2byte	0x53e
 2437 04a1 6B000000 		.4byte	0x6b
 2438 04a5 02       		.uleb128 0x2
 2439 04a6 91       		.byte	0x91
 2440 04a7 67       		.sleb128 -25
 2441 04a8 12       		.uleb128 0x12
 2442 04a9 D5020000 		.4byte	.LASF65
 2443 04ad 01       		.byte	0x1
 2444 04ae 3E05     		.2byte	0x53e
 2445 04b0 DE040000 		.4byte	0x4de
 2446 04b4 02       		.uleb128 0x2
 2447 04b5 91       		.byte	0x91
 2448 04b6 60       		.sleb128 -32
 2449 04b7 12       		.uleb128 0x12
 2450 04b8 EB040000 		.4byte	.LASF66
 2451 04bc 01       		.byte	0x1
 2452 04bd 3E05     		.2byte	0x53e
 2453 04bf 77000000 		.4byte	0x77
 2454 04c3 02       		.uleb128 0x2
 2455 04c4 91       		.byte	0x91
 2456 04c5 64       		.sleb128 -28
 2457 04c6 18       		.uleb128 0x18
 2458 04c7 96000000 		.4byte	.LBB2
 2459 04cb 28000000 		.4byte	.LBE2-.LBB2
 2460 04cf 13       		.uleb128 0x13
 2461 04d0 6900     		.ascii	"i\000"
 2462 04d2 01       		.byte	0x1
 2463 04d3 5305     		.2byte	0x553
 2464 04d5 77000000 		.4byte	0x77
 2465 04d9 02       		.uleb128 0x2
 2466 04da 91       		.byte	0x91
 2467 04db 6E       		.sleb128 -18
 2468 04dc 00       		.byte	0
 2469 04dd 00       		.byte	0
 2470 04de 19       		.uleb128 0x19
 2471 04df 04       		.byte	0x4
 2472 04e0 E4040000 		.4byte	0x4e4
 2473 04e4 1A       		.uleb128 0x1a
 2474 04e5 6B000000 		.4byte	0x6b
 2475 04e9 1B       		.uleb128 0x1b
 2476 04ea 46040000 		.4byte	.LASF67
 2477 04ee 01       		.byte	0x1
 2478 04ef 7506     		.2byte	0x675
 2479 04f1 77000000 		.4byte	0x77
 2480 04f5 00000000 		.4byte	.LFB12
 2481 04f9 8C000000 		.4byte	.LFE12-.LFB12
 2482 04fd 01       		.uleb128 0x1
 2483 04fe 9C       		.byte	0x9c
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 89


 2484 04ff 48050000 		.4byte	0x548
 2485 0503 12       		.uleb128 0x12
 2486 0504 32010000 		.4byte	.LASF61
 2487 0508 01       		.byte	0x1
 2488 0509 7506     		.2byte	0x675
 2489 050b 6B000000 		.4byte	0x6b
 2490 050f 02       		.uleb128 0x2
 2491 0510 91       		.byte	0x91
 2492 0511 6F       		.sleb128 -17
 2493 0512 12       		.uleb128 0x12
 2494 0513 D5020000 		.4byte	.LASF65
 2495 0517 01       		.byte	0x1
 2496 0518 7506     		.2byte	0x675
 2497 051a 48050000 		.4byte	0x548
 2498 051e 02       		.uleb128 0x2
 2499 051f 91       		.byte	0x91
 2500 0520 68       		.sleb128 -24
 2501 0521 12       		.uleb128 0x12
 2502 0522 EB040000 		.4byte	.LASF66
 2503 0526 01       		.byte	0x1
 2504 0527 7506     		.2byte	0x675
 2505 0529 77000000 		.4byte	0x77
 2506 052d 02       		.uleb128 0x2
 2507 052e 91       		.byte	0x91
 2508 052f 6C       		.sleb128 -20
 2509 0530 18       		.uleb128 0x18
 2510 0531 44000000 		.4byte	.LBB3
 2511 0535 2A000000 		.4byte	.LBE3-.LBB3
 2512 0539 13       		.uleb128 0x13
 2513 053a 6900     		.ascii	"i\000"
 2514 053c 01       		.byte	0x1
 2515 053d 8206     		.2byte	0x682
 2516 053f 77000000 		.4byte	0x77
 2517 0543 02       		.uleb128 0x2
 2518 0544 91       		.byte	0x91
 2519 0545 76       		.sleb128 -10
 2520 0546 00       		.byte	0
 2521 0547 00       		.byte	0
 2522 0548 19       		.uleb128 0x19
 2523 0549 04       		.byte	0x4
 2524 054a 6B000000 		.4byte	0x6b
 2525 054e 14       		.uleb128 0x14
 2526 054f 75010000 		.4byte	.LASF68
 2527 0553 01       		.byte	0x1
 2528 0554 E408     		.2byte	0x8e4
 2529 0556 00000000 		.4byte	.LFB13
 2530 055a 5C000000 		.4byte	.LFE13-.LFB13
 2531 055e 01       		.uleb128 0x1
 2532 055f 9C       		.byte	0x9c
 2533 0560 74050000 		.4byte	0x574
 2534 0564 12       		.uleb128 0x12
 2535 0565 32010000 		.4byte	.LASF61
 2536 0569 01       		.byte	0x1
 2537 056a E408     		.2byte	0x8e4
 2538 056c 6B000000 		.4byte	0x6b
 2539 0570 02       		.uleb128 0x2
 2540 0571 91       		.byte	0x91
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 90


 2541 0572 77       		.sleb128 -9
 2542 0573 00       		.byte	0
 2543 0574 14       		.uleb128 0x14
 2544 0575 B1040000 		.4byte	.LASF69
 2545 0579 01       		.byte	0x1
 2546 057a FC08     		.2byte	0x8fc
 2547 057c 00000000 		.4byte	.LFB14
 2548 0580 34000000 		.4byte	.LFE14-.LFB14
 2549 0584 01       		.uleb128 0x1
 2550 0585 9C       		.byte	0x9c
 2551 0586 9A050000 		.4byte	0x59a
 2552 058a 12       		.uleb128 0x12
 2553 058b 32010000 		.4byte	.LASF61
 2554 058f 01       		.byte	0x1
 2555 0590 FC08     		.2byte	0x8fc
 2556 0592 6B000000 		.4byte	0x6b
 2557 0596 02       		.uleb128 0x2
 2558 0597 91       		.byte	0x91
 2559 0598 77       		.sleb128 -9
 2560 0599 00       		.byte	0
 2561 059a 14       		.uleb128 0x14
 2562 059b 0F040000 		.4byte	.LASF70
 2563 059f 01       		.byte	0x1
 2564 05a0 1A09     		.2byte	0x91a
 2565 05a2 00000000 		.4byte	.LFB15
 2566 05a6 20000000 		.4byte	.LFE15-.LFB15
 2567 05aa 01       		.uleb128 0x1
 2568 05ab 9C       		.byte	0x9c
 2569 05ac C0050000 		.4byte	0x5c0
 2570 05b0 12       		.uleb128 0x12
 2571 05b1 E4040000 		.4byte	.LASF71
 2572 05b5 01       		.byte	0x1
 2573 05b6 1A09     		.2byte	0x91a
 2574 05b8 6B000000 		.4byte	0x6b
 2575 05bc 02       		.uleb128 0x2
 2576 05bd 91       		.byte	0x91
 2577 05be 77       		.sleb128 -9
 2578 05bf 00       		.byte	0
 2579 05c0 16       		.uleb128 0x16
 2580 05c1 89010000 		.4byte	.LASF72
 2581 05c5 01       		.byte	0x1
 2582 05c6 3309     		.2byte	0x933
 2583 05c8 6B000000 		.4byte	0x6b
 2584 05cc 00000000 		.4byte	.LFB16
 2585 05d0 40000000 		.4byte	.LFE16-.LFB16
 2586 05d4 01       		.uleb128 0x1
 2587 05d5 9C       		.byte	0x9c
 2588 05d6 F8050000 		.4byte	0x5f8
 2589 05da 12       		.uleb128 0x12
 2590 05db 32010000 		.4byte	.LASF61
 2591 05df 01       		.byte	0x1
 2592 05e0 3309     		.2byte	0x933
 2593 05e2 6B000000 		.4byte	0x6b
 2594 05e6 02       		.uleb128 0x2
 2595 05e7 91       		.byte	0x91
 2596 05e8 6F       		.sleb128 -17
 2597 05e9 13       		.uleb128 0x13
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 91


 2598 05ea 637200   		.ascii	"cr\000"
 2599 05ed 01       		.byte	0x1
 2600 05ee 3509     		.2byte	0x935
 2601 05f0 6B000000 		.4byte	0x6b
 2602 05f4 02       		.uleb128 0x2
 2603 05f5 91       		.byte	0x91
 2604 05f6 77       		.sleb128 -9
 2605 05f7 00       		.byte	0
 2606 05f8 14       		.uleb128 0x14
 2607 05f9 8A020000 		.4byte	.LASF73
 2608 05fd 01       		.byte	0x1
 2609 05fe 5C09     		.2byte	0x95c
 2610 0600 00000000 		.4byte	.LFB17
 2611 0604 40000000 		.4byte	.LFE17-.LFB17
 2612 0608 01       		.uleb128 0x1
 2613 0609 9C       		.byte	0x9c
 2614 060a 1E060000 		.4byte	0x61e
 2615 060e 12       		.uleb128 0x12
 2616 060f 68020000 		.4byte	.LASF74
 2617 0613 01       		.byte	0x1
 2618 0614 5C09     		.2byte	0x95c
 2619 0616 6B000000 		.4byte	0x6b
 2620 061a 02       		.uleb128 0x2
 2621 061b 91       		.byte	0x91
 2622 061c 77       		.sleb128 -9
 2623 061d 00       		.byte	0
 2624 061e 16       		.uleb128 0x16
 2625 061f 3C000000 		.4byte	.LASF75
 2626 0623 01       		.byte	0x1
 2627 0624 9509     		.2byte	0x995
 2628 0626 6B000000 		.4byte	0x6b
 2629 062a 00000000 		.4byte	.LFB18
 2630 062e 2C000000 		.4byte	.LFE18-.LFB18
 2631 0632 01       		.uleb128 0x1
 2632 0633 9C       		.byte	0x9c
 2633 0634 48060000 		.4byte	0x648
 2634 0638 15       		.uleb128 0x15
 2635 0639 15060000 		.4byte	.LASF76
 2636 063d 01       		.byte	0x1
 2637 063e 9709     		.2byte	0x997
 2638 0640 6B000000 		.4byte	0x6b
 2639 0644 02       		.uleb128 0x2
 2640 0645 91       		.byte	0x91
 2641 0646 77       		.sleb128 -9
 2642 0647 00       		.byte	0
 2643 0648 17       		.uleb128 0x17
 2644 0649 16000000 		.4byte	.LASF78
 2645 064d 01       		.byte	0x1
 2646 064e AD09     		.2byte	0x9ad
 2647 0650 6B000000 		.4byte	0x6b
 2648 0654 00000000 		.4byte	.LFB19
 2649 0658 1C000000 		.4byte	.LFE19-.LFB19
 2650 065c 01       		.uleb128 0x1
 2651 065d 9C       		.byte	0x9c
 2652 065e 1C       		.uleb128 0x1c
 2653 065f E3050000 		.4byte	.LASF79
 2654 0663 01       		.byte	0x1
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 92


 2655 0664 BB09     		.2byte	0x9bb
 2656 0666 00000000 		.4byte	.LFB20
 2657 066a 18000000 		.4byte	.LFE20-.LFB20
 2658 066e 01       		.uleb128 0x1
 2659 066f 9C       		.byte	0x9c
 2660 0670 1C       		.uleb128 0x1c
 2661 0671 74020000 		.4byte	.LASF80
 2662 0675 01       		.byte	0x1
 2663 0676 D109     		.2byte	0x9d1
 2664 0678 00000000 		.4byte	.LFB21
 2665 067c 18000000 		.4byte	.LFE21-.LFB21
 2666 0680 01       		.uleb128 0x1
 2667 0681 9C       		.byte	0x9c
 2668 0682 1D       		.uleb128 0x1d
 2669 0683 A6020000 		.4byte	.LASF81
 2670 0687 01       		.byte	0x1
 2671 0688 28       		.byte	0x28
 2672 0689 6B000000 		.4byte	0x6b
 2673 068d 05       		.uleb128 0x5
 2674 068e 03       		.byte	0x3
 2675 068f 00000000 		.4byte	USBUART_initVar
 2676 0693 1E       		.uleb128 0x1e
 2677 0694 07000000 		.4byte	.LASF82
 2678 0698 03       		.byte	0x3
 2679 0699 D602     		.2byte	0x2d6
 2680 069b B0000000 		.4byte	0xb0
 2681 069f 1E       		.uleb128 0x1e
 2682 06a0 CD050000 		.4byte	.LASF83
 2683 06a4 03       		.byte	0x3
 2684 06a5 D702     		.2byte	0x2d7
 2685 06a7 B0000000 		.4byte	0xb0
 2686 06ab 1E       		.uleb128 0x1e
 2687 06ac 78050000 		.4byte	.LASF84
 2688 06b0 03       		.byte	0x3
 2689 06b1 D802     		.2byte	0x2d8
 2690 06b3 B0000000 		.4byte	0xb0
 2691 06b7 1E       		.uleb128 0x1e
 2692 06b8 F8050000 		.4byte	.LASF85
 2693 06bc 03       		.byte	0x3
 2694 06bd D902     		.2byte	0x2d9
 2695 06bf B0000000 		.4byte	0xb0
 2696 06c3 1E       		.uleb128 0x1e
 2697 06c4 F1020000 		.4byte	.LASF86
 2698 06c8 03       		.byte	0x3
 2699 06c9 DA02     		.2byte	0x2da
 2700 06cb B0000000 		.4byte	0xb0
 2701 06cf 0A       		.uleb128 0xa
 2702 06d0 B0000000 		.4byte	0xb0
 2703 06d4 DF060000 		.4byte	0x6df
 2704 06d8 0B       		.uleb128 0xb
 2705 06d9 CD000000 		.4byte	0xcd
 2706 06dd 01       		.byte	0x1
 2707 06de 00       		.byte	0
 2708 06df 1E       		.uleb128 0x1e
 2709 06e0 48020000 		.4byte	.LASF87
 2710 06e4 03       		.byte	0x3
 2711 06e5 E302     		.2byte	0x2e3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 93


 2712 06e7 EB060000 		.4byte	0x6eb
 2713 06eb 05       		.uleb128 0x5
 2714 06ec CF060000 		.4byte	0x6cf
 2715 06f0 1F       		.uleb128 0x1f
 2716 06f1 B6020000 		.4byte	.LASF88
 2717 06f5 04       		.byte	0x4
 2718 06f6 73       		.byte	0x73
 2719 06f7 B0000000 		.4byte	0xb0
 2720 06fb 1F       		.uleb128 0x1f
 2721 06fc 68040000 		.4byte	.LASF89
 2722 0700 04       		.byte	0x4
 2723 0701 74       		.byte	0x74
 2724 0702 06070000 		.4byte	0x706
 2725 0706 05       		.uleb128 0x5
 2726 0707 CF060000 		.4byte	0x6cf
 2727 070b 1F       		.uleb128 0x1f
 2728 070c 8C030000 		.4byte	.LASF90
 2729 0710 04       		.byte	0x4
 2730 0711 76       		.byte	0x76
 2731 0712 B0000000 		.4byte	0xb0
 2732 0716 0A       		.uleb128 0xa
 2733 0717 26070000 		.4byte	0x726
 2734 071b 26070000 		.4byte	0x726
 2735 071f 0B       		.uleb128 0xb
 2736 0720 CD000000 		.4byte	0xcd
 2737 0724 08       		.byte	0x8
 2738 0725 00       		.byte	0
 2739 0726 05       		.uleb128 0x5
 2740 0727 49010000 		.4byte	0x149
 2741 072b 1F       		.uleb128 0x1f
 2742 072c 27010000 		.4byte	.LASF91
 2743 0730 04       		.byte	0x4
 2744 0731 7A       		.byte	0x7a
 2745 0732 36070000 		.4byte	0x736
 2746 0736 05       		.uleb128 0x5
 2747 0737 16070000 		.4byte	0x716
 2748 073b 1F       		.uleb128 0x1f
 2749 073c 4F000000 		.4byte	.LASF92
 2750 0740 04       		.byte	0x4
 2751 0741 9C       		.byte	0x9c
 2752 0742 B0000000 		.4byte	0xb0
 2753 0746 00       		.byte	0
 2754              		.section	.debug_abbrev,"",%progbits
 2755              	.Ldebug_abbrev0:
 2756 0000 01       		.uleb128 0x1
 2757 0001 11       		.uleb128 0x11
 2758 0002 01       		.byte	0x1
 2759 0003 25       		.uleb128 0x25
 2760 0004 0E       		.uleb128 0xe
 2761 0005 13       		.uleb128 0x13
 2762 0006 0B       		.uleb128 0xb
 2763 0007 03       		.uleb128 0x3
 2764 0008 0E       		.uleb128 0xe
 2765 0009 1B       		.uleb128 0x1b
 2766 000a 0E       		.uleb128 0xe
 2767 000b 55       		.uleb128 0x55
 2768 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 94


 2769 000d 11       		.uleb128 0x11
 2770 000e 01       		.uleb128 0x1
 2771 000f 10       		.uleb128 0x10
 2772 0010 17       		.uleb128 0x17
 2773 0011 00       		.byte	0
 2774 0012 00       		.byte	0
 2775 0013 02       		.uleb128 0x2
 2776 0014 24       		.uleb128 0x24
 2777 0015 00       		.byte	0
 2778 0016 0B       		.uleb128 0xb
 2779 0017 0B       		.uleb128 0xb
 2780 0018 3E       		.uleb128 0x3e
 2781 0019 0B       		.uleb128 0xb
 2782 001a 03       		.uleb128 0x3
 2783 001b 0E       		.uleb128 0xe
 2784 001c 00       		.byte	0
 2785 001d 00       		.byte	0
 2786 001e 03       		.uleb128 0x3
 2787 001f 24       		.uleb128 0x24
 2788 0020 00       		.byte	0
 2789 0021 0B       		.uleb128 0xb
 2790 0022 0B       		.uleb128 0xb
 2791 0023 3E       		.uleb128 0x3e
 2792 0024 0B       		.uleb128 0xb
 2793 0025 03       		.uleb128 0x3
 2794 0026 08       		.uleb128 0x8
 2795 0027 00       		.byte	0
 2796 0028 00       		.byte	0
 2797 0029 04       		.uleb128 0x4
 2798 002a 16       		.uleb128 0x16
 2799 002b 00       		.byte	0
 2800 002c 03       		.uleb128 0x3
 2801 002d 0E       		.uleb128 0xe
 2802 002e 3A       		.uleb128 0x3a
 2803 002f 0B       		.uleb128 0xb
 2804 0030 3B       		.uleb128 0x3b
 2805 0031 05       		.uleb128 0x5
 2806 0032 49       		.uleb128 0x49
 2807 0033 13       		.uleb128 0x13
 2808 0034 00       		.byte	0
 2809 0035 00       		.byte	0
 2810 0036 05       		.uleb128 0x5
 2811 0037 35       		.uleb128 0x35
 2812 0038 00       		.byte	0
 2813 0039 49       		.uleb128 0x49
 2814 003a 13       		.uleb128 0x13
 2815 003b 00       		.byte	0
 2816 003c 00       		.byte	0
 2817 003d 06       		.uleb128 0x6
 2818 003e 13       		.uleb128 0x13
 2819 003f 01       		.byte	0x1
 2820 0040 0B       		.uleb128 0xb
 2821 0041 0B       		.uleb128 0xb
 2822 0042 3A       		.uleb128 0x3a
 2823 0043 0B       		.uleb128 0xb
 2824 0044 3B       		.uleb128 0x3b
 2825 0045 0B       		.uleb128 0xb
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 95


 2826 0046 01       		.uleb128 0x1
 2827 0047 13       		.uleb128 0x13
 2828 0048 00       		.byte	0
 2829 0049 00       		.byte	0
 2830 004a 07       		.uleb128 0x7
 2831 004b 0D       		.uleb128 0xd
 2832 004c 00       		.byte	0
 2833 004d 03       		.uleb128 0x3
 2834 004e 0E       		.uleb128 0xe
 2835 004f 3A       		.uleb128 0x3a
 2836 0050 0B       		.uleb128 0xb
 2837 0051 3B       		.uleb128 0x3b
 2838 0052 0B       		.uleb128 0xb
 2839 0053 49       		.uleb128 0x49
 2840 0054 13       		.uleb128 0x13
 2841 0055 38       		.uleb128 0x38
 2842 0056 0B       		.uleb128 0xb
 2843 0057 00       		.byte	0
 2844 0058 00       		.byte	0
 2845 0059 08       		.uleb128 0x8
 2846 005a 16       		.uleb128 0x16
 2847 005b 00       		.byte	0
 2848 005c 03       		.uleb128 0x3
 2849 005d 0E       		.uleb128 0xe
 2850 005e 3A       		.uleb128 0x3a
 2851 005f 0B       		.uleb128 0xb
 2852 0060 3B       		.uleb128 0x3b
 2853 0061 0B       		.uleb128 0xb
 2854 0062 49       		.uleb128 0x49
 2855 0063 13       		.uleb128 0x13
 2856 0064 00       		.byte	0
 2857 0065 00       		.byte	0
 2858 0066 09       		.uleb128 0x9
 2859 0067 0D       		.uleb128 0xd
 2860 0068 00       		.byte	0
 2861 0069 03       		.uleb128 0x3
 2862 006a 08       		.uleb128 0x8
 2863 006b 3A       		.uleb128 0x3a
 2864 006c 0B       		.uleb128 0xb
 2865 006d 3B       		.uleb128 0x3b
 2866 006e 0B       		.uleb128 0xb
 2867 006f 49       		.uleb128 0x49
 2868 0070 13       		.uleb128 0x13
 2869 0071 38       		.uleb128 0x38
 2870 0072 0B       		.uleb128 0xb
 2871 0073 00       		.byte	0
 2872 0074 00       		.byte	0
 2873 0075 0A       		.uleb128 0xa
 2874 0076 01       		.uleb128 0x1
 2875 0077 01       		.byte	0x1
 2876 0078 49       		.uleb128 0x49
 2877 0079 13       		.uleb128 0x13
 2878 007a 01       		.uleb128 0x1
 2879 007b 13       		.uleb128 0x13
 2880 007c 00       		.byte	0
 2881 007d 00       		.byte	0
 2882 007e 0B       		.uleb128 0xb
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 96


 2883 007f 21       		.uleb128 0x21
 2884 0080 00       		.byte	0
 2885 0081 49       		.uleb128 0x49
 2886 0082 13       		.uleb128 0x13
 2887 0083 2F       		.uleb128 0x2f
 2888 0084 0B       		.uleb128 0xb
 2889 0085 00       		.byte	0
 2890 0086 00       		.byte	0
 2891 0087 0C       		.uleb128 0xc
 2892 0088 13       		.uleb128 0x13
 2893 0089 01       		.byte	0x1
 2894 008a 0B       		.uleb128 0xb
 2895 008b 0B       		.uleb128 0xb
 2896 008c 3A       		.uleb128 0x3a
 2897 008d 0B       		.uleb128 0xb
 2898 008e 3B       		.uleb128 0x3b
 2899 008f 05       		.uleb128 0x5
 2900 0090 01       		.uleb128 0x1
 2901 0091 13       		.uleb128 0x13
 2902 0092 00       		.byte	0
 2903 0093 00       		.byte	0
 2904 0094 0D       		.uleb128 0xd
 2905 0095 0D       		.uleb128 0xd
 2906 0096 00       		.byte	0
 2907 0097 03       		.uleb128 0x3
 2908 0098 0E       		.uleb128 0xe
 2909 0099 3A       		.uleb128 0x3a
 2910 009a 0B       		.uleb128 0xb
 2911 009b 3B       		.uleb128 0x3b
 2912 009c 05       		.uleb128 0x5
 2913 009d 49       		.uleb128 0x49
 2914 009e 13       		.uleb128 0x13
 2915 009f 38       		.uleb128 0x38
 2916 00a0 0B       		.uleb128 0xb
 2917 00a1 00       		.byte	0
 2918 00a2 00       		.byte	0
 2919 00a3 0E       		.uleb128 0xe
 2920 00a4 2E       		.uleb128 0x2e
 2921 00a5 01       		.byte	0x1
 2922 00a6 3F       		.uleb128 0x3f
 2923 00a7 19       		.uleb128 0x19
 2924 00a8 03       		.uleb128 0x3
 2925 00a9 0E       		.uleb128 0xe
 2926 00aa 3A       		.uleb128 0x3a
 2927 00ab 0B       		.uleb128 0xb
 2928 00ac 3B       		.uleb128 0x3b
 2929 00ad 0B       		.uleb128 0xb
 2930 00ae 27       		.uleb128 0x27
 2931 00af 19       		.uleb128 0x19
 2932 00b0 11       		.uleb128 0x11
 2933 00b1 01       		.uleb128 0x1
 2934 00b2 12       		.uleb128 0x12
 2935 00b3 06       		.uleb128 0x6
 2936 00b4 40       		.uleb128 0x40
 2937 00b5 18       		.uleb128 0x18
 2938 00b6 9642     		.uleb128 0x2116
 2939 00b8 19       		.uleb128 0x19
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 97


 2940 00b9 01       		.uleb128 0x1
 2941 00ba 13       		.uleb128 0x13
 2942 00bb 00       		.byte	0
 2943 00bc 00       		.byte	0
 2944 00bd 0F       		.uleb128 0xf
 2945 00be 05       		.uleb128 0x5
 2946 00bf 00       		.byte	0
 2947 00c0 03       		.uleb128 0x3
 2948 00c1 0E       		.uleb128 0xe
 2949 00c2 3A       		.uleb128 0x3a
 2950 00c3 0B       		.uleb128 0xb
 2951 00c4 3B       		.uleb128 0x3b
 2952 00c5 0B       		.uleb128 0xb
 2953 00c6 49       		.uleb128 0x49
 2954 00c7 13       		.uleb128 0x13
 2955 00c8 02       		.uleb128 0x2
 2956 00c9 18       		.uleb128 0x18
 2957 00ca 00       		.byte	0
 2958 00cb 00       		.byte	0
 2959 00cc 10       		.uleb128 0x10
 2960 00cd 34       		.uleb128 0x34
 2961 00ce 00       		.byte	0
 2962 00cf 03       		.uleb128 0x3
 2963 00d0 0E       		.uleb128 0xe
 2964 00d1 3A       		.uleb128 0x3a
 2965 00d2 0B       		.uleb128 0xb
 2966 00d3 3B       		.uleb128 0x3b
 2967 00d4 0B       		.uleb128 0xb
 2968 00d5 49       		.uleb128 0x49
 2969 00d6 13       		.uleb128 0x13
 2970 00d7 02       		.uleb128 0x2
 2971 00d8 18       		.uleb128 0x18
 2972 00d9 00       		.byte	0
 2973 00da 00       		.byte	0
 2974 00db 11       		.uleb128 0x11
 2975 00dc 2E       		.uleb128 0x2e
 2976 00dd 01       		.byte	0x1
 2977 00de 3F       		.uleb128 0x3f
 2978 00df 19       		.uleb128 0x19
 2979 00e0 03       		.uleb128 0x3
 2980 00e1 0E       		.uleb128 0xe
 2981 00e2 3A       		.uleb128 0x3a
 2982 00e3 0B       		.uleb128 0xb
 2983 00e4 3B       		.uleb128 0x3b
 2984 00e5 05       		.uleb128 0x5
 2985 00e6 27       		.uleb128 0x27
 2986 00e7 19       		.uleb128 0x19
 2987 00e8 11       		.uleb128 0x11
 2988 00e9 01       		.uleb128 0x1
 2989 00ea 12       		.uleb128 0x12
 2990 00eb 06       		.uleb128 0x6
 2991 00ec 40       		.uleb128 0x40
 2992 00ed 18       		.uleb128 0x18
 2993 00ee 9642     		.uleb128 0x2116
 2994 00f0 19       		.uleb128 0x19
 2995 00f1 01       		.uleb128 0x1
 2996 00f2 13       		.uleb128 0x13
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 98


 2997 00f3 00       		.byte	0
 2998 00f4 00       		.byte	0
 2999 00f5 12       		.uleb128 0x12
 3000 00f6 05       		.uleb128 0x5
 3001 00f7 00       		.byte	0
 3002 00f8 03       		.uleb128 0x3
 3003 00f9 0E       		.uleb128 0xe
 3004 00fa 3A       		.uleb128 0x3a
 3005 00fb 0B       		.uleb128 0xb
 3006 00fc 3B       		.uleb128 0x3b
 3007 00fd 05       		.uleb128 0x5
 3008 00fe 49       		.uleb128 0x49
 3009 00ff 13       		.uleb128 0x13
 3010 0100 02       		.uleb128 0x2
 3011 0101 18       		.uleb128 0x18
 3012 0102 00       		.byte	0
 3013 0103 00       		.byte	0
 3014 0104 13       		.uleb128 0x13
 3015 0105 34       		.uleb128 0x34
 3016 0106 00       		.byte	0
 3017 0107 03       		.uleb128 0x3
 3018 0108 08       		.uleb128 0x8
 3019 0109 3A       		.uleb128 0x3a
 3020 010a 0B       		.uleb128 0xb
 3021 010b 3B       		.uleb128 0x3b
 3022 010c 05       		.uleb128 0x5
 3023 010d 49       		.uleb128 0x49
 3024 010e 13       		.uleb128 0x13
 3025 010f 02       		.uleb128 0x2
 3026 0110 18       		.uleb128 0x18
 3027 0111 00       		.byte	0
 3028 0112 00       		.byte	0
 3029 0113 14       		.uleb128 0x14
 3030 0114 2E       		.uleb128 0x2e
 3031 0115 01       		.byte	0x1
 3032 0116 3F       		.uleb128 0x3f
 3033 0117 19       		.uleb128 0x19
 3034 0118 03       		.uleb128 0x3
 3035 0119 0E       		.uleb128 0xe
 3036 011a 3A       		.uleb128 0x3a
 3037 011b 0B       		.uleb128 0xb
 3038 011c 3B       		.uleb128 0x3b
 3039 011d 05       		.uleb128 0x5
 3040 011e 27       		.uleb128 0x27
 3041 011f 19       		.uleb128 0x19
 3042 0120 11       		.uleb128 0x11
 3043 0121 01       		.uleb128 0x1
 3044 0122 12       		.uleb128 0x12
 3045 0123 06       		.uleb128 0x6
 3046 0124 40       		.uleb128 0x40
 3047 0125 18       		.uleb128 0x18
 3048 0126 9742     		.uleb128 0x2117
 3049 0128 19       		.uleb128 0x19
 3050 0129 01       		.uleb128 0x1
 3051 012a 13       		.uleb128 0x13
 3052 012b 00       		.byte	0
 3053 012c 00       		.byte	0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 99


 3054 012d 15       		.uleb128 0x15
 3055 012e 34       		.uleb128 0x34
 3056 012f 00       		.byte	0
 3057 0130 03       		.uleb128 0x3
 3058 0131 0E       		.uleb128 0xe
 3059 0132 3A       		.uleb128 0x3a
 3060 0133 0B       		.uleb128 0xb
 3061 0134 3B       		.uleb128 0x3b
 3062 0135 05       		.uleb128 0x5
 3063 0136 49       		.uleb128 0x49
 3064 0137 13       		.uleb128 0x13
 3065 0138 02       		.uleb128 0x2
 3066 0139 18       		.uleb128 0x18
 3067 013a 00       		.byte	0
 3068 013b 00       		.byte	0
 3069 013c 16       		.uleb128 0x16
 3070 013d 2E       		.uleb128 0x2e
 3071 013e 01       		.byte	0x1
 3072 013f 3F       		.uleb128 0x3f
 3073 0140 19       		.uleb128 0x19
 3074 0141 03       		.uleb128 0x3
 3075 0142 0E       		.uleb128 0xe
 3076 0143 3A       		.uleb128 0x3a
 3077 0144 0B       		.uleb128 0xb
 3078 0145 3B       		.uleb128 0x3b
 3079 0146 05       		.uleb128 0x5
 3080 0147 27       		.uleb128 0x27
 3081 0148 19       		.uleb128 0x19
 3082 0149 49       		.uleb128 0x49
 3083 014a 13       		.uleb128 0x13
 3084 014b 11       		.uleb128 0x11
 3085 014c 01       		.uleb128 0x1
 3086 014d 12       		.uleb128 0x12
 3087 014e 06       		.uleb128 0x6
 3088 014f 40       		.uleb128 0x40
 3089 0150 18       		.uleb128 0x18
 3090 0151 9742     		.uleb128 0x2117
 3091 0153 19       		.uleb128 0x19
 3092 0154 01       		.uleb128 0x1
 3093 0155 13       		.uleb128 0x13
 3094 0156 00       		.byte	0
 3095 0157 00       		.byte	0
 3096 0158 17       		.uleb128 0x17
 3097 0159 2E       		.uleb128 0x2e
 3098 015a 00       		.byte	0
 3099 015b 3F       		.uleb128 0x3f
 3100 015c 19       		.uleb128 0x19
 3101 015d 03       		.uleb128 0x3
 3102 015e 0E       		.uleb128 0xe
 3103 015f 3A       		.uleb128 0x3a
 3104 0160 0B       		.uleb128 0xb
 3105 0161 3B       		.uleb128 0x3b
 3106 0162 05       		.uleb128 0x5
 3107 0163 27       		.uleb128 0x27
 3108 0164 19       		.uleb128 0x19
 3109 0165 49       		.uleb128 0x49
 3110 0166 13       		.uleb128 0x13
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 100


 3111 0167 11       		.uleb128 0x11
 3112 0168 01       		.uleb128 0x1
 3113 0169 12       		.uleb128 0x12
 3114 016a 06       		.uleb128 0x6
 3115 016b 40       		.uleb128 0x40
 3116 016c 18       		.uleb128 0x18
 3117 016d 9742     		.uleb128 0x2117
 3118 016f 19       		.uleb128 0x19
 3119 0170 00       		.byte	0
 3120 0171 00       		.byte	0
 3121 0172 18       		.uleb128 0x18
 3122 0173 0B       		.uleb128 0xb
 3123 0174 01       		.byte	0x1
 3124 0175 11       		.uleb128 0x11
 3125 0176 01       		.uleb128 0x1
 3126 0177 12       		.uleb128 0x12
 3127 0178 06       		.uleb128 0x6
 3128 0179 00       		.byte	0
 3129 017a 00       		.byte	0
 3130 017b 19       		.uleb128 0x19
 3131 017c 0F       		.uleb128 0xf
 3132 017d 00       		.byte	0
 3133 017e 0B       		.uleb128 0xb
 3134 017f 0B       		.uleb128 0xb
 3135 0180 49       		.uleb128 0x49
 3136 0181 13       		.uleb128 0x13
 3137 0182 00       		.byte	0
 3138 0183 00       		.byte	0
 3139 0184 1A       		.uleb128 0x1a
 3140 0185 26       		.uleb128 0x26
 3141 0186 00       		.byte	0
 3142 0187 49       		.uleb128 0x49
 3143 0188 13       		.uleb128 0x13
 3144 0189 00       		.byte	0
 3145 018a 00       		.byte	0
 3146 018b 1B       		.uleb128 0x1b
 3147 018c 2E       		.uleb128 0x2e
 3148 018d 01       		.byte	0x1
 3149 018e 3F       		.uleb128 0x3f
 3150 018f 19       		.uleb128 0x19
 3151 0190 03       		.uleb128 0x3
 3152 0191 0E       		.uleb128 0xe
 3153 0192 3A       		.uleb128 0x3a
 3154 0193 0B       		.uleb128 0xb
 3155 0194 3B       		.uleb128 0x3b
 3156 0195 05       		.uleb128 0x5
 3157 0196 27       		.uleb128 0x27
 3158 0197 19       		.uleb128 0x19
 3159 0198 49       		.uleb128 0x49
 3160 0199 13       		.uleb128 0x13
 3161 019a 11       		.uleb128 0x11
 3162 019b 01       		.uleb128 0x1
 3163 019c 12       		.uleb128 0x12
 3164 019d 06       		.uleb128 0x6
 3165 019e 40       		.uleb128 0x40
 3166 019f 18       		.uleb128 0x18
 3167 01a0 9642     		.uleb128 0x2116
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 101


 3168 01a2 19       		.uleb128 0x19
 3169 01a3 01       		.uleb128 0x1
 3170 01a4 13       		.uleb128 0x13
 3171 01a5 00       		.byte	0
 3172 01a6 00       		.byte	0
 3173 01a7 1C       		.uleb128 0x1c
 3174 01a8 2E       		.uleb128 0x2e
 3175 01a9 00       		.byte	0
 3176 01aa 3F       		.uleb128 0x3f
 3177 01ab 19       		.uleb128 0x19
 3178 01ac 03       		.uleb128 0x3
 3179 01ad 0E       		.uleb128 0xe
 3180 01ae 3A       		.uleb128 0x3a
 3181 01af 0B       		.uleb128 0xb
 3182 01b0 3B       		.uleb128 0x3b
 3183 01b1 05       		.uleb128 0x5
 3184 01b2 27       		.uleb128 0x27
 3185 01b3 19       		.uleb128 0x19
 3186 01b4 11       		.uleb128 0x11
 3187 01b5 01       		.uleb128 0x1
 3188 01b6 12       		.uleb128 0x12
 3189 01b7 06       		.uleb128 0x6
 3190 01b8 40       		.uleb128 0x40
 3191 01b9 18       		.uleb128 0x18
 3192 01ba 9742     		.uleb128 0x2117
 3193 01bc 19       		.uleb128 0x19
 3194 01bd 00       		.byte	0
 3195 01be 00       		.byte	0
 3196 01bf 1D       		.uleb128 0x1d
 3197 01c0 34       		.uleb128 0x34
 3198 01c1 00       		.byte	0
 3199 01c2 03       		.uleb128 0x3
 3200 01c3 0E       		.uleb128 0xe
 3201 01c4 3A       		.uleb128 0x3a
 3202 01c5 0B       		.uleb128 0xb
 3203 01c6 3B       		.uleb128 0x3b
 3204 01c7 0B       		.uleb128 0xb
 3205 01c8 49       		.uleb128 0x49
 3206 01c9 13       		.uleb128 0x13
 3207 01ca 3F       		.uleb128 0x3f
 3208 01cb 19       		.uleb128 0x19
 3209 01cc 02       		.uleb128 0x2
 3210 01cd 18       		.uleb128 0x18
 3211 01ce 00       		.byte	0
 3212 01cf 00       		.byte	0
 3213 01d0 1E       		.uleb128 0x1e
 3214 01d1 34       		.uleb128 0x34
 3215 01d2 00       		.byte	0
 3216 01d3 03       		.uleb128 0x3
 3217 01d4 0E       		.uleb128 0xe
 3218 01d5 3A       		.uleb128 0x3a
 3219 01d6 0B       		.uleb128 0xb
 3220 01d7 3B       		.uleb128 0x3b
 3221 01d8 05       		.uleb128 0x5
 3222 01d9 49       		.uleb128 0x49
 3223 01da 13       		.uleb128 0x13
 3224 01db 3F       		.uleb128 0x3f
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 102


 3225 01dc 19       		.uleb128 0x19
 3226 01dd 3C       		.uleb128 0x3c
 3227 01de 19       		.uleb128 0x19
 3228 01df 00       		.byte	0
 3229 01e0 00       		.byte	0
 3230 01e1 1F       		.uleb128 0x1f
 3231 01e2 34       		.uleb128 0x34
 3232 01e3 00       		.byte	0
 3233 01e4 03       		.uleb128 0x3
 3234 01e5 0E       		.uleb128 0xe
 3235 01e6 3A       		.uleb128 0x3a
 3236 01e7 0B       		.uleb128 0xb
 3237 01e8 3B       		.uleb128 0x3b
 3238 01e9 0B       		.uleb128 0xb
 3239 01ea 49       		.uleb128 0x49
 3240 01eb 13       		.uleb128 0x13
 3241 01ec 3F       		.uleb128 0x3f
 3242 01ed 19       		.uleb128 0x19
 3243 01ee 3C       		.uleb128 0x3c
 3244 01ef 19       		.uleb128 0x19
 3245 01f0 00       		.byte	0
 3246 01f1 00       		.byte	0
 3247 01f2 00       		.byte	0
 3248              		.section	.debug_aranges,"",%progbits
 3249 0000 C4000000 		.4byte	0xc4
 3250 0004 0200     		.2byte	0x2
 3251 0006 00000000 		.4byte	.Ldebug_info0
 3252 000a 04       		.byte	0x4
 3253 000b 00       		.byte	0
 3254 000c 0000     		.2byte	0
 3255 000e 0000     		.2byte	0
 3256 0010 00000000 		.4byte	.LFB0
 3257 0014 3C000000 		.4byte	.LFE0-.LFB0
 3258 0018 00000000 		.4byte	.LFB1
 3259 001c A4010000 		.4byte	.LFE1-.LFB1
 3260 0020 00000000 		.4byte	.LFB2
 3261 0024 20010000 		.4byte	.LFE2-.LFB2
 3262 0028 00000000 		.4byte	.LFB3
 3263 002c 88000000 		.4byte	.LFE3-.LFB3
 3264 0030 00000000 		.4byte	.LFB4
 3265 0034 0C010000 		.4byte	.LFE4-.LFB4
 3266 0038 00000000 		.4byte	.LFB5
 3267 003c 38000000 		.4byte	.LFE5-.LFB5
 3268 0040 00000000 		.4byte	.LFB6
 3269 0044 18000000 		.4byte	.LFE6-.LFB6
 3270 0048 00000000 		.4byte	.LFB7
 3271 004c 30000000 		.4byte	.LFE7-.LFB7
 3272 0050 00000000 		.4byte	.LFB8
 3273 0054 20000000 		.4byte	.LFE8-.LFB8
 3274 0058 00000000 		.4byte	.LFB9
 3275 005c 2C000000 		.4byte	.LFE9-.LFB9
 3276 0060 00000000 		.4byte	.LFB10
 3277 0064 60000000 		.4byte	.LFE10-.LFB10
 3278 0068 00000000 		.4byte	.LFB11
 3279 006c 08010000 		.4byte	.LFE11-.LFB11
 3280 0070 00000000 		.4byte	.LFB12
 3281 0074 8C000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 103


 3282 0078 00000000 		.4byte	.LFB13
 3283 007c 5C000000 		.4byte	.LFE13-.LFB13
 3284 0080 00000000 		.4byte	.LFB14
 3285 0084 34000000 		.4byte	.LFE14-.LFB14
 3286 0088 00000000 		.4byte	.LFB15
 3287 008c 20000000 		.4byte	.LFE15-.LFB15
 3288 0090 00000000 		.4byte	.LFB16
 3289 0094 40000000 		.4byte	.LFE16-.LFB16
 3290 0098 00000000 		.4byte	.LFB17
 3291 009c 40000000 		.4byte	.LFE17-.LFB17
 3292 00a0 00000000 		.4byte	.LFB18
 3293 00a4 2C000000 		.4byte	.LFE18-.LFB18
 3294 00a8 00000000 		.4byte	.LFB19
 3295 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3296 00b0 00000000 		.4byte	.LFB20
 3297 00b4 18000000 		.4byte	.LFE20-.LFB20
 3298 00b8 00000000 		.4byte	.LFB21
 3299 00bc 18000000 		.4byte	.LFE21-.LFB21
 3300 00c0 00000000 		.4byte	0
 3301 00c4 00000000 		.4byte	0
 3302              		.section	.debug_ranges,"",%progbits
 3303              	.Ldebug_ranges0:
 3304 0000 00000000 		.4byte	.LFB0
 3305 0004 3C000000 		.4byte	.LFE0
 3306 0008 00000000 		.4byte	.LFB1
 3307 000c A4010000 		.4byte	.LFE1
 3308 0010 00000000 		.4byte	.LFB2
 3309 0014 20010000 		.4byte	.LFE2
 3310 0018 00000000 		.4byte	.LFB3
 3311 001c 88000000 		.4byte	.LFE3
 3312 0020 00000000 		.4byte	.LFB4
 3313 0024 0C010000 		.4byte	.LFE4
 3314 0028 00000000 		.4byte	.LFB5
 3315 002c 38000000 		.4byte	.LFE5
 3316 0030 00000000 		.4byte	.LFB6
 3317 0034 18000000 		.4byte	.LFE6
 3318 0038 00000000 		.4byte	.LFB7
 3319 003c 30000000 		.4byte	.LFE7
 3320 0040 00000000 		.4byte	.LFB8
 3321 0044 20000000 		.4byte	.LFE8
 3322 0048 00000000 		.4byte	.LFB9
 3323 004c 2C000000 		.4byte	.LFE9
 3324 0050 00000000 		.4byte	.LFB10
 3325 0054 60000000 		.4byte	.LFE10
 3326 0058 00000000 		.4byte	.LFB11
 3327 005c 08010000 		.4byte	.LFE11
 3328 0060 00000000 		.4byte	.LFB12
 3329 0064 8C000000 		.4byte	.LFE12
 3330 0068 00000000 		.4byte	.LFB13
 3331 006c 5C000000 		.4byte	.LFE13
 3332 0070 00000000 		.4byte	.LFB14
 3333 0074 34000000 		.4byte	.LFE14
 3334 0078 00000000 		.4byte	.LFB15
 3335 007c 20000000 		.4byte	.LFE15
 3336 0080 00000000 		.4byte	.LFB16
 3337 0084 40000000 		.4byte	.LFE16
 3338 0088 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 104


 3339 008c 40000000 		.4byte	.LFE17
 3340 0090 00000000 		.4byte	.LFB18
 3341 0094 2C000000 		.4byte	.LFE18
 3342 0098 00000000 		.4byte	.LFB19
 3343 009c 1C000000 		.4byte	.LFE19
 3344 00a0 00000000 		.4byte	.LFB20
 3345 00a4 18000000 		.4byte	.LFE20
 3346 00a8 00000000 		.4byte	.LFB21
 3347 00ac 18000000 		.4byte	.LFE21
 3348 00b0 00000000 		.4byte	0
 3349 00b4 00000000 		.4byte	0
 3350              		.section	.debug_line,"",%progbits
 3351              	.Ldebug_line0:
 3352 0000 23030000 		.section	.debug_str,"MS",%progbits,1
 3352      02006200 
 3352      00000201 
 3352      FB0E0D00 
 3352      01010101 
 3353              	.LASF10:
 3354 0000 75696E74 		.ascii	"uint16\000"
 3354      313600
 3355              	.LASF82:
 3356 0007 55534255 		.ascii	"USBUART_device\000"
 3356      4152545F 
 3356      64657669 
 3356      636500
 3357              	.LASF78:
 3358 0016 55534255 		.ascii	"USBUART_GetDeviceAddress\000"
 3358      4152545F 
 3358      47657444 
 3358      65766963 
 3358      65416464 
 3359              	.LASF54:
 3360 002f 55534255 		.ascii	"USBUART_Stop\000"
 3360      4152545F 
 3360      53746F70 
 3360      00
 3361              	.LASF75:
 3362 003c 55534255 		.ascii	"USBUART_RWUEnabled\000"
 3362      4152545F 
 3362      52575545 
 3362      6E61626C 
 3362      656400
 3363              	.LASF92:
 3364 004f 55534255 		.ascii	"USBUART_lastPacketSize\000"
 3364      4152545F 
 3364      6C617374 
 3364      5061636B 
 3364      65745369 
 3365              	.LASF93:
 3366 0066 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3366      43313120 
 3366      352E342E 
 3366      31203230 
 3366      31363036 
 3367 0099 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3367      20726576 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 105


 3367      6973696F 
 3367      6E203233 
 3367      37373135 
 3368 00cc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3368      66756E63 
 3368      74696F6E 
 3368      2D736563 
 3368      74696F6E 
 3369              	.LASF64:
 3370 00f4 55534255 		.ascii	"USBUART_LoadInEP\000"
 3370      4152545F 
 3370      4C6F6164 
 3370      496E4550 
 3370      00
 3371              	.LASF7:
 3372 0105 6C6F6E67 		.ascii	"long long unsigned int\000"
 3372      206C6F6E 
 3372      6720756E 
 3372      7369676E 
 3372      65642069 
 3373              	.LASF23:
 3374 011c 61646472 		.ascii	"addr\000"
 3374      00
 3375              	.LASF33:
 3376 0121 65704366 		.ascii	"epCfg\000"
 3376      6700
 3377              	.LASF91:
 3378 0127 55534255 		.ascii	"USBUART_EP\000"
 3378      4152545F 
 3378      455000
 3379              	.LASF61:
 3380 0132 65704E75 		.ascii	"epNumber\000"
 3380      6D626572 
 3380      00
 3381              	.LASF47:
 3382 013b 64657669 		.ascii	"device\000"
 3382      636500
 3383              	.LASF77:
 3384 0142 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3384      4152545F 
 3384      47657443 
 3384      6F6E6669 
 3384      67757261 
 3385              	.LASF6:
 3386 015b 6C6F6E67 		.ascii	"long long int\000"
 3386      206C6F6E 
 3386      6720696E 
 3386      7400
 3387              	.LASF0:
 3388 0169 7369676E 		.ascii	"signed char\000"
 3388      65642063 
 3388      68617200 
 3389              	.LASF68:
 3390 0175 55534255 		.ascii	"USBUART_EnableOutEP\000"
 3390      4152545F 
 3390      456E6162 
 3390      6C654F75 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 106


 3390      74455000 
 3391              	.LASF72:
 3392 0189 55534255 		.ascii	"USBUART_GetEPAckState\000"
 3392      4152545F 
 3392      47657445 
 3392      5041636B 
 3392      53746174 
 3393              	.LASF95:
 3394 019f 433A5C55 		.ascii	"C:\\Users\\HPz420\\Documents\\GitHub\\land-boards\\"
 3394      73657273 
 3394      5C48507A 
 3394      3432305C 
 3394      446F6375 
 3395 01cc 52617350 		.ascii	"RasPi\\RPI_PSOC5\\RPI_PSOC5_CARD_TEST_STATION.cydsn"
 3395      695C5250 
 3395      495F5053 
 3395      4F43355C 
 3395      5250495F 
 3396 01fd 00       		.ascii	"\000"
 3397              	.LASF63:
 3398 01fe 636E7472 		.ascii	"cntr\000"
 3398      00
 3399              	.LASF44:
 3400 0203 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 3400      4152545F 
 3400      7369655F 
 3400      6570735F 
 3400      73747275 
 3401              	.LASF56:
 3402 021a 55534255 		.ascii	"USBUART_CheckActivity\000"
 3402      4152545F 
 3402      43686563 
 3402      6B416374 
 3402      69766974 
 3403              	.LASF4:
 3404 0230 6C6F6E67 		.ascii	"long int\000"
 3404      20696E74 
 3404      00
 3405              	.LASF9:
 3406 0239 75696E74 		.ascii	"uint8\000"
 3406      3800
 3407              	.LASF22:
 3408 023f 6570546F 		.ascii	"epToggle\000"
 3408      67676C65 
 3408      00
 3409              	.LASF87:
 3410 0248 55534255 		.ascii	"USBUART_hidProtocol\000"
 3410      4152545F 
 3410      68696450 
 3410      726F746F 
 3410      636F6C00 
 3411              	.LASF37:
 3412 025c 72775761 		.ascii	"rwWa\000"
 3412      00
 3413              	.LASF13:
 3414 0261 646F7562 		.ascii	"double\000"
 3414      6C6500
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 107


 3415              	.LASF74:
 3416 0268 706F7765 		.ascii	"powerStatus\000"
 3416      72537461 
 3416      74757300 
 3417              	.LASF80:
 3418 0274 55534255 		.ascii	"USBUART_DisableSofInt\000"
 3418      4152545F 
 3418      44697361 
 3418      626C6553 
 3418      6F66496E 
 3419              	.LASF73:
 3420 028a 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 3420      4152545F 
 3420      53657450 
 3420      6F776572 
 3420      53746174 
 3421              	.LASF35:
 3422 02a1 65705372 		.ascii	"epSr\000"
 3422      00
 3423              	.LASF81:
 3424 02a6 55534255 		.ascii	"USBUART_initVar\000"
 3424      4152545F 
 3424      696E6974 
 3424      56617200 
 3425              	.LASF88:
 3426 02b6 55534255 		.ascii	"USBUART_interfaceNumber\000"
 3426      4152545F 
 3426      696E7465 
 3426      72666163 
 3426      654E756D 
 3427              	.LASF11:
 3428 02ce 75696E74 		.ascii	"uint32\000"
 3428      333200
 3429              	.LASF65:
 3430 02d5 70446174 		.ascii	"pData\000"
 3430      6100
 3431              	.LASF43:
 3432 02db 73696545 		.ascii	"sieEp\000"
 3432      7000
 3433              	.LASF24:
 3434 02e1 65704D6F 		.ascii	"epMode\000"
 3434      646500
 3435              	.LASF36:
 3436 02e8 72657365 		.ascii	"reserved\000"
 3436      72766564 
 3436      00
 3437              	.LASF86:
 3438 02f1 55534255 		.ascii	"USBUART_deviceStatus\000"
 3438      4152545F 
 3438      64657669 
 3438      63655374 
 3438      61747573 
 3439              	.LASF8:
 3440 0306 756E7369 		.ascii	"unsigned int\000"
 3440      676E6564 
 3440      20696E74 
 3440      00
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 108


 3441              	.LASF5:
 3442 0313 6C6F6E67 		.ascii	"long unsigned int\000"
 3442      20756E73 
 3442      69676E65 
 3442      6420696E 
 3442      7400
 3443              	.LASF3:
 3444 0325 73686F72 		.ascii	"short unsigned int\000"
 3444      7420756E 
 3444      7369676E 
 3444      65642069 
 3444      6E7400
 3445              	.LASF49:
 3446 0338 55534255 		.ascii	"USBUART_Start\000"
 3446      4152545F 
 3446      53746172 
 3446      7400
 3447              	.LASF58:
 3448 0346 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 3448      4152545F 
 3448      47657449 
 3448      6E746572 
 3448      66616365 
 3449              	.LASF50:
 3450 0362 55534255 		.ascii	"USBUART_Init\000"
 3450      4152545F 
 3450      496E6974 
 3450      00
 3451              	.LASF45:
 3452 036f 61726245 		.ascii	"arbEp\000"
 3452      7000
 3453              	.LASF27:
 3454 0375 696E7465 		.ascii	"interface\000"
 3454      72666163 
 3454      6500
 3455              	.LASF55:
 3456 037f 63723152 		.ascii	"cr1Reg\000"
 3456      656700
 3457              	.LASF16:
 3458 0386 72656733 		.ascii	"reg32\000"
 3458      3200
 3459              	.LASF90:
 3460 038c 55534255 		.ascii	"USBUART_deviceAddress\000"
 3460      4152545F 
 3460      64657669 
 3460      63654164 
 3460      64726573 
 3461              	.LASF94:
 3462 03a2 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART.c\000"
 3462      72617465 
 3462      645F536F 
 3462      75726365 
 3462      5C50536F 
 3463              	.LASF42:
 3464 03c3 55534255 		.ascii	"USBUART_arb_ep_struct\000"
 3464      4152545F 
 3464      6172625F 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 109


 3464      65705F73 
 3464      74727563 
 3465              	.LASF21:
 3466 03d9 68774570 		.ascii	"hwEpState\000"
 3466      53746174 
 3466      6500
 3467              	.LASF46:
 3468 03e3 55534255 		.ascii	"USBUART_arb_eps_struct\000"
 3468      4152545F 
 3468      6172625F 
 3468      6570735F 
 3468      73747275 
 3469              	.LASF18:
 3470 03fa 73697A65 		.ascii	"sizetype\000"
 3470      74797065 
 3470      00
 3471              	.LASF17:
 3472 0403 6C6F6E67 		.ascii	"long double\000"
 3472      20646F75 
 3472      626C6500 
 3473              	.LASF70:
 3474 040f 55534255 		.ascii	"USBUART_Force\000"
 3474      4152545F 
 3474      466F7263 
 3474      6500
 3475              	.LASF19:
 3476 041d 61747472 		.ascii	"attrib\000"
 3476      696200
 3477              	.LASF40:
 3478 0424 72775261 		.ascii	"rwRaMsb\000"
 3478      4D736200 
 3479              	.LASF29:
 3480 042c 6570436E 		.ascii	"epCnt0\000"
 3480      743000
 3481              	.LASF30:
 3482 0433 6570436E 		.ascii	"epCnt1\000"
 3482      743100
 3483              	.LASF31:
 3484 043a 65704372 		.ascii	"epCr0\000"
 3484      3000
 3485              	.LASF12:
 3486 0440 666C6F61 		.ascii	"float\000"
 3486      7400
 3487              	.LASF67:
 3488 0446 55534255 		.ascii	"USBUART_ReadOutEP\000"
 3488      4152545F 
 3488      52656164 
 3488      4F757445 
 3488      5000
 3489              	.LASF20:
 3490 0458 61706945 		.ascii	"apiEpState\000"
 3490      70537461 
 3490      746500
 3491              	.LASF15:
 3492 0463 72656738 		.ascii	"reg8\000"
 3492      00
 3493              	.LASF89:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 110


 3494 0468 55534255 		.ascii	"USBUART_interfaceSetting\000"
 3494      4152545F 
 3494      696E7465 
 3494      72666163 
 3494      65536574 
 3495              	.LASF1:
 3496 0481 756E7369 		.ascii	"unsigned char\000"
 3496      676E6564 
 3496      20636861 
 3496      7200
 3497              	.LASF2:
 3498 048f 73686F72 		.ascii	"short int\000"
 3498      7420696E 
 3498      7400
 3499              	.LASF60:
 3500 0499 55534255 		.ascii	"USBUART_GetEPState\000"
 3500      4152545F 
 3500      47657445 
 3500      50537461 
 3500      746500
 3501              	.LASF39:
 3502 04ac 72775261 		.ascii	"rwRa\000"
 3502      00
 3503              	.LASF69:
 3504 04b1 55534255 		.ascii	"USBUART_DisableOutEP\000"
 3504      4152545F 
 3504      44697361 
 3504      626C654F 
 3504      75744550 
 3505              	.LASF38:
 3506 04c6 72775761 		.ascii	"rwWaMsb\000"
 3506      4D736200 
 3507              	.LASF32:
 3508 04ce 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 3508      4152545F 
 3508      7369655F 
 3508      65705F73 
 3508      74727563 
 3509              	.LASF71:
 3510 04e4 62537461 		.ascii	"bState\000"
 3510      746500
 3511              	.LASF66:
 3512 04eb 6C656E67 		.ascii	"length\000"
 3512      746800
 3513              	.LASF14:
 3514 04f2 63686172 		.ascii	"char\000"
 3514      00
 3515              	.LASF48:
 3516 04f7 6D6F6465 		.ascii	"mode\000"
 3516      00
 3517              	.LASF26:
 3518 04fc 62756666 		.ascii	"bufferSize\000"
 3518      65725369 
 3518      7A6500
 3519              	.LASF28:
 3520 0507 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 3520      42554152 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 111


 3520      545F4550 
 3520      5F43544C 
 3520      5F424C4F 
 3521              	.LASF25:
 3522 051e 62756666 		.ascii	"buffOffset\000"
 3522      4F666673 
 3522      657400
 3523              	.LASF59:
 3524 0529 696E7465 		.ascii	"interfaceNumber\000"
 3524      72666163 
 3524      654E756D 
 3524      62657200 
 3525              	.LASF62:
 3526 0539 55534255 		.ascii	"USBUART_GetEPCount\000"
 3526      4152545F 
 3526      47657445 
 3526      50436F75 
 3526      6E7400
 3527              	.LASF52:
 3528 054c 656E6162 		.ascii	"enableInterrupts\000"
 3528      6C65496E 
 3528      74657272 
 3528      75707473 
 3528      00
 3529              	.LASF41:
 3530 055d 72774472 		.ascii	"rwDr\000"
 3530      00
 3531              	.LASF51:
 3532 0562 55534255 		.ascii	"USBUART_InitComponent\000"
 3532      4152545F 
 3532      496E6974 
 3532      436F6D70 
 3532      6F6E656E 
 3533              	.LASF84:
 3534 0578 55534255 		.ascii	"USBUART_configuration\000"
 3534      4152545F 
 3534      636F6E66 
 3534      69677572 
 3534      6174696F 
 3535              	.LASF57:
 3536 058e 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 3536      4152545F 
 3536      4973436F 
 3536      6E666967 
 3536      75726174 
 3537              	.LASF34:
 3538 05ad 6570496E 		.ascii	"epIntEn\000"
 3538      74456E00 
 3539              	.LASF53:
 3540 05b5 55534255 		.ascii	"USBUART_ReInitComponent\000"
 3540      4152545F 
 3540      5265496E 
 3540      6974436F 
 3540      6D706F6E 
 3541              	.LASF83:
 3542 05cd 55534255 		.ascii	"USBUART_transferState\000"
 3542      4152545F 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\ccEHWz6Q.s 			page 112


 3542      7472616E 
 3542      73666572 
 3542      53746174 
 3543              	.LASF79:
 3544 05e3 55534255 		.ascii	"USBUART_EnableSofInt\000"
 3544      4152545F 
 3544      456E6162 
 3544      6C65536F 
 3544      66496E74 
 3545              	.LASF85:
 3546 05f8 55534255 		.ascii	"USBUART_configurationChanged\000"
 3546      4152545F 
 3546      636F6E66 
 3546      69677572 
 3546      6174696F 
 3547              	.LASF76:
 3548 0615 72657375 		.ascii	"result\000"
 3548      6C7400
 3549              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
