ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyScBoostClk.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CyScBoostClk_Start,"ax",%progbits
  20              		.align	2
  21              		.global	CyScBoostClk_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	CyScBoostClk_Start, %function
  25              	CyScBoostClk_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\CyScBoostClk.c"
   1:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CyScBoostClk.c **** * File Name: CyScBoostClk.c
   3:Generated_Source\PSoC5/CyScBoostClk.c **** * Version 2.20
   4:Generated_Source\PSoC5/CyScBoostClk.c **** *
   5:Generated_Source\PSoC5/CyScBoostClk.c **** *  Description:
   6:Generated_Source\PSoC5/CyScBoostClk.c **** *   This file provides the source code to the API for the clock component.
   7:Generated_Source\PSoC5/CyScBoostClk.c **** *
   8:Generated_Source\PSoC5/CyScBoostClk.c **** *  Note:
   9:Generated_Source\PSoC5/CyScBoostClk.c **** *
  10:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
  11:Generated_Source\PSoC5/CyScBoostClk.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/CyScBoostClk.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:Generated_Source\PSoC5/CyScBoostClk.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:Generated_Source\PSoC5/CyScBoostClk.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/CyScBoostClk.c **** 
  17:Generated_Source\PSoC5/CyScBoostClk.c **** #include <cydevice_trm.h>
  18:Generated_Source\PSoC5/CyScBoostClk.c **** #include "CyScBoostClk.h"
  19:Generated_Source\PSoC5/CyScBoostClk.c **** 
  20:Generated_Source\PSoC5/CyScBoostClk.c **** /* Clock Distribution registers. */
  21:Generated_Source\PSoC5/CyScBoostClk.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:Generated_Source\PSoC5/CyScBoostClk.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
  23:Generated_Source\PSoC5/CyScBoostClk.c **** #define BCFG2_MASK               (0x80u)
  24:Generated_Source\PSoC5/CyScBoostClk.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:Generated_Source\PSoC5/CyScBoostClk.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:Generated_Source\PSoC5/CyScBoostClk.c **** 
  27:Generated_Source\PSoC5/CyScBoostClk.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:Generated_Source\PSoC5/CyScBoostClk.c **** 
  29:Generated_Source\PSoC5/CyScBoostClk.c **** 
  30:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 2


  31:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_Start
  32:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
  33:Generated_Source\PSoC5/CyScBoostClk.c **** *
  34:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
  35:Generated_Source\PSoC5/CyScBoostClk.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  36:Generated_Source\PSoC5/CyScBoostClk.c **** *  "Start on Reset" option is enabled in the DWR.
  37:Generated_Source\PSoC5/CyScBoostClk.c **** *
  38:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
  39:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  40:Generated_Source\PSoC5/CyScBoostClk.c **** *
  41:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
  42:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  43:Generated_Source\PSoC5/CyScBoostClk.c **** *
  44:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
  45:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_Start(void) 
  46:Generated_Source\PSoC5/CyScBoostClk.c **** {
  28              		.loc 1 46 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  47:Generated_Source\PSoC5/CyScBoostClk.c ****     /* Set the bit to enable the clock. */
  48:Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_CLKEN |= CyScBoostClk_CLKEN_MASK;
  38              		.loc 1 48 0
  39 0004 094A     		ldr	r2, .L2
  40 0006 094B     		ldr	r3, .L2
  41 0008 1B78     		ldrb	r3, [r3]
  42 000a DBB2     		uxtb	r3, r3
  43 000c 43F00103 		orr	r3, r3, #1
  44 0010 DBB2     		uxtb	r3, r3
  45 0012 1370     		strb	r3, [r2]
  49:Generated_Source\PSoC5/CyScBoostClk.c **** 	CyScBoostClk_CLKSTBY |= CyScBoostClk_CLKSTBY_MASK;
  46              		.loc 1 49 0
  47 0014 064A     		ldr	r2, .L2+4
  48 0016 064B     		ldr	r3, .L2+4
  49 0018 1B78     		ldrb	r3, [r3]
  50 001a DBB2     		uxtb	r3, r3
  51 001c 43F00103 		orr	r3, r3, #1
  52 0020 DBB2     		uxtb	r3, r3
  53 0022 1370     		strb	r3, [r2]
  50:Generated_Source\PSoC5/CyScBoostClk.c **** }
  54              		.loc 1 50 0
  55 0024 00BF     		nop
  56 0026 BD46     		mov	sp, r7
  57              		.cfi_def_cfa_register 13
  58              		@ sp needed
  59 0028 80BC     		pop	{r7}
  60              		.cfi_restore 7
  61              		.cfi_def_cfa_offset 0
  62 002a 7047     		bx	lr
  63              	.L3:
  64              		.align	2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 3


  65              	.L2:
  66 002c A1430040 		.word	1073759137
  67 0030 B1430040 		.word	1073759153
  68              		.cfi_endproc
  69              	.LFE0:
  70              		.size	CyScBoostClk_Start, .-CyScBoostClk_Start
  71              		.section	.text.CyScBoostClk_Stop,"ax",%progbits
  72              		.align	2
  73              		.global	CyScBoostClk_Stop
  74              		.thumb
  75              		.thumb_func
  76              		.type	CyScBoostClk_Stop, %function
  77              	CyScBoostClk_Stop:
  78              	.LFB1:
  51:Generated_Source\PSoC5/CyScBoostClk.c **** 
  52:Generated_Source\PSoC5/CyScBoostClk.c **** 
  53:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
  54:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_Stop
  55:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
  56:Generated_Source\PSoC5/CyScBoostClk.c **** *
  57:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
  58:Generated_Source\PSoC5/CyScBoostClk.c **** *  Stops the clock and returns immediately. This API does not require the
  59:Generated_Source\PSoC5/CyScBoostClk.c **** *  source clock to be running but may return before the hardware is actually
  60:Generated_Source\PSoC5/CyScBoostClk.c **** *  disabled. If the settings of the clock are changed after calling this
  61:Generated_Source\PSoC5/CyScBoostClk.c **** *  function, the clock may glitch when it is started. To avoid the clock
  62:Generated_Source\PSoC5/CyScBoostClk.c **** *  glitch, use the StopBlock function.
  63:Generated_Source\PSoC5/CyScBoostClk.c **** *
  64:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
  65:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  66:Generated_Source\PSoC5/CyScBoostClk.c **** *
  67:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
  68:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  69:Generated_Source\PSoC5/CyScBoostClk.c **** *
  70:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
  71:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_Stop(void) 
  72:Generated_Source\PSoC5/CyScBoostClk.c **** {
  79              		.loc 1 72 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 1, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84 0000 80B4     		push	{r7}
  85              		.cfi_def_cfa_offset 4
  86              		.cfi_offset 7, -4
  87 0002 00AF     		add	r7, sp, #0
  88              		.cfi_def_cfa_register 7
  73:Generated_Source\PSoC5/CyScBoostClk.c ****     /* Clear the bit to disable the clock. */
  74:Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_CLKEN &= (uint8)(~CyScBoostClk_CLKEN_MASK);
  89              		.loc 1 74 0
  90 0004 094A     		ldr	r2, .L5
  91 0006 094B     		ldr	r3, .L5
  92 0008 1B78     		ldrb	r3, [r3]
  93 000a DBB2     		uxtb	r3, r3
  94 000c 23F00103 		bic	r3, r3, #1
  95 0010 DBB2     		uxtb	r3, r3
  96 0012 1370     		strb	r3, [r2]
  75:Generated_Source\PSoC5/CyScBoostClk.c **** 	CyScBoostClk_CLKSTBY &= (uint8)(~CyScBoostClk_CLKSTBY_MASK);
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 4


  97              		.loc 1 75 0
  98 0014 064A     		ldr	r2, .L5+4
  99 0016 064B     		ldr	r3, .L5+4
 100 0018 1B78     		ldrb	r3, [r3]
 101 001a DBB2     		uxtb	r3, r3
 102 001c 23F00103 		bic	r3, r3, #1
 103 0020 DBB2     		uxtb	r3, r3
 104 0022 1370     		strb	r3, [r2]
  76:Generated_Source\PSoC5/CyScBoostClk.c **** }
 105              		.loc 1 76 0
 106 0024 00BF     		nop
 107 0026 BD46     		mov	sp, r7
 108              		.cfi_def_cfa_register 13
 109              		@ sp needed
 110 0028 80BC     		pop	{r7}
 111              		.cfi_restore 7
 112              		.cfi_def_cfa_offset 0
 113 002a 7047     		bx	lr
 114              	.L6:
 115              		.align	2
 116              	.L5:
 117 002c A1430040 		.word	1073759137
 118 0030 B1430040 		.word	1073759153
 119              		.cfi_endproc
 120              	.LFE1:
 121              		.size	CyScBoostClk_Stop, .-CyScBoostClk_Stop
 122              		.section	.text.CyScBoostClk_StopBlock,"ax",%progbits
 123              		.align	2
 124              		.global	CyScBoostClk_StopBlock
 125              		.thumb
 126              		.thumb_func
 127              		.type	CyScBoostClk_StopBlock, %function
 128              	CyScBoostClk_StopBlock:
 129              	.LFB2:
  77:Generated_Source\PSoC5/CyScBoostClk.c **** 
  78:Generated_Source\PSoC5/CyScBoostClk.c **** 
  79:Generated_Source\PSoC5/CyScBoostClk.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  80:Generated_Source\PSoC5/CyScBoostClk.c **** 
  81:Generated_Source\PSoC5/CyScBoostClk.c **** 
  82:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
  83:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_StopBlock
  84:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
  85:Generated_Source\PSoC5/CyScBoostClk.c **** *
  86:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
  87:Generated_Source\PSoC5/CyScBoostClk.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  88:Generated_Source\PSoC5/CyScBoostClk.c **** *  returning. This ensures that the clock is never truncated (high part of the
  89:Generated_Source\PSoC5/CyScBoostClk.c **** *  cycle will terminate before the clock is disabled and the API returns).
  90:Generated_Source\PSoC5/CyScBoostClk.c **** *  Note that the source clock must be running or this API will never return as
  91:Generated_Source\PSoC5/CyScBoostClk.c **** *  a stopped clock cannot be disabled.
  92:Generated_Source\PSoC5/CyScBoostClk.c **** *
  93:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
  94:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  95:Generated_Source\PSoC5/CyScBoostClk.c **** *
  96:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
  97:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
  98:Generated_Source\PSoC5/CyScBoostClk.c **** *
  99:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 5


 100:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_StopBlock(void) 
 101:Generated_Source\PSoC5/CyScBoostClk.c **** {
 130              		.loc 1 101 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 8
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135 0000 80B4     		push	{r7}
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 7, -4
 138 0002 83B0     		sub	sp, sp, #12
 139              		.cfi_def_cfa_offset 16
 140 0004 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
 102:Generated_Source\PSoC5/CyScBoostClk.c ****     if ((CyScBoostClk_CLKEN & CyScBoostClk_CLKEN_MASK) != 0u)
 142              		.loc 1 102 0
 143 0006 224B     		ldr	r3, .L11
 144 0008 1B78     		ldrb	r3, [r3]
 145 000a DBB2     		uxtb	r3, r3
 146 000c 03F00103 		and	r3, r3, #1
 147 0010 002B     		cmp	r3, #0
 148 0012 37D0     		beq	.L10
 149              	.LBB2:
 103:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 104:Generated_Source\PSoC5/CyScBoostClk.c **** #if HAS_CLKDIST_LD_DISABLE
 105:Generated_Source\PSoC5/CyScBoostClk.c ****         uint16 oldDivider;
 106:Generated_Source\PSoC5/CyScBoostClk.c **** 
 107:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_LD = 0u;
 150              		.loc 1 107 0
 151 0014 1F4B     		ldr	r3, .L11+4
 152 0016 0022     		movs	r2, #0
 153 0018 1A70     		strb	r2, [r3]
 108:Generated_Source\PSoC5/CyScBoostClk.c **** 
 109:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Clear all the mask bits except ours. */
 110:Generated_Source\PSoC5/CyScBoostClk.c **** #if defined(CyScBoostClk__CFG3)
 111:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_AMASK = CyScBoostClk_CLKEN_MASK;
 154              		.loc 1 111 0
 155 001a 1F4B     		ldr	r3, .L11+8
 156 001c 0122     		movs	r2, #1
 157 001e 1A70     		strb	r2, [r3]
 112:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_DMASK = 0x00u;
 158              		.loc 1 112 0
 159 0020 1E4B     		ldr	r3, .L11+12
 160 0022 0022     		movs	r2, #0
 161 0024 1A70     		strb	r2, [r3]
 113:Generated_Source\PSoC5/CyScBoostClk.c **** #else
 114:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_DMASK = CyScBoostClk_CLKEN_MASK;
 115:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_AMASK = 0x00u;
 116:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* CyScBoostClk__CFG3 */
 117:Generated_Source\PSoC5/CyScBoostClk.c **** 
 118:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Clear mask of bus clock. */
 119:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 162              		.loc 1 119 0
 163 0026 1E4A     		ldr	r2, .L11+16
 164 0028 1D4B     		ldr	r3, .L11+16
 165 002a 1B78     		ldrb	r3, [r3]
 166 002c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 6


 167 002e 03F07F03 		and	r3, r3, #127
 168 0032 DBB2     		uxtb	r3, r3
 169 0034 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/CyScBoostClk.c **** 
 121:Generated_Source\PSoC5/CyScBoostClk.c ****         oldDivider = CY_GET_REG16(CyScBoostClk_DIV_PTR);
 170              		.loc 1 121 0
 171 0036 1B4B     		ldr	r3, .L11+20
 172 0038 1B88     		ldrh	r3, [r3]	@ movhi
 173 003a FB80     		strh	r3, [r7, #6]	@ movhi
 122:Generated_Source\PSoC5/CyScBoostClk.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 174              		.loc 1 122 0
 175 003c 1A4A     		ldr	r2, .L11+24
 176 003e FB88     		ldrh	r3, [r7, #6]	@ movhi
 177 0040 1380     		strh	r3, [r2]	@ movhi
 123:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 178              		.loc 1 123 0
 179 0042 144B     		ldr	r3, .L11+4
 180 0044 0722     		movs	r2, #7
 181 0046 1A70     		strb	r2, [r3]
 124:Generated_Source\PSoC5/CyScBoostClk.c **** 
 125:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Wait for clock to be disabled */
 126:Generated_Source\PSoC5/CyScBoostClk.c ****         while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 182              		.loc 1 126 0
 183 0048 00BF     		nop
 184              	.L9:
 185              		.loc 1 126 0 is_stmt 0 discriminator 1
 186 004a 124B     		ldr	r3, .L11+4
 187 004c 1B78     		ldrb	r3, [r3]
 188 004e DBB2     		uxtb	r3, r3
 189 0050 03F00103 		and	r3, r3, #1
 190 0054 002B     		cmp	r3, #0
 191 0056 F8D1     		bne	.L9
 127:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 128:Generated_Source\PSoC5/CyScBoostClk.c **** 
 129:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Clear the bit to disable the clock. */
 130:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_CLKEN &= (uint8)(~CyScBoostClk_CLKEN_MASK);
 192              		.loc 1 130 0 is_stmt 1
 193 0058 0D4A     		ldr	r2, .L11
 194 005a 0D4B     		ldr	r3, .L11
 195 005c 1B78     		ldrb	r3, [r3]
 196 005e DBB2     		uxtb	r3, r3
 197 0060 23F00103 		bic	r3, r3, #1
 198 0064 DBB2     		uxtb	r3, r3
 199 0066 1370     		strb	r3, [r2]
 131:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_CLKSTBY &= (uint8)(~CyScBoostClk_CLKSTBY_MASK);
 200              		.loc 1 131 0
 201 0068 104A     		ldr	r2, .L11+28
 202 006a 104B     		ldr	r3, .L11+28
 203 006c 1B78     		ldrb	r3, [r3]
 204 006e DBB2     		uxtb	r3, r3
 205 0070 23F00103 		bic	r3, r3, #1
 206 0074 DBB2     		uxtb	r3, r3
 207 0076 1370     		strb	r3, [r2]
 132:Generated_Source\PSoC5/CyScBoostClk.c **** 
 133:Generated_Source\PSoC5/CyScBoostClk.c **** #if HAS_CLKDIST_LD_DISABLE
 134:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Clear the disable bit */
 135:Generated_Source\PSoC5/CyScBoostClk.c ****         CLK_DIST_LD = 0x00u;
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 7


 208              		.loc 1 135 0
 209 0078 064B     		ldr	r3, .L11+4
 210 007a 0022     		movs	r2, #0
 211 007c 1A70     		strb	r2, [r3]
 136:Generated_Source\PSoC5/CyScBoostClk.c ****         CY_SET_REG16(CyScBoostClk_DIV_PTR, oldDivider);
 212              		.loc 1 136 0
 213 007e 094A     		ldr	r2, .L11+20
 214 0080 FB88     		ldrh	r3, [r7, #6]	@ movhi
 215 0082 1380     		strh	r3, [r2]	@ movhi
 216              	.L10:
 217              	.LBE2:
 137:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 138:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 139:Generated_Source\PSoC5/CyScBoostClk.c **** }
 218              		.loc 1 139 0
 219 0084 00BF     		nop
 220 0086 0C37     		adds	r7, r7, #12
 221              		.cfi_def_cfa_offset 4
 222 0088 BD46     		mov	sp, r7
 223              		.cfi_def_cfa_register 13
 224              		@ sp needed
 225 008a 80BC     		pop	{r7}
 226              		.cfi_restore 7
 227              		.cfi_def_cfa_offset 0
 228 008c 7047     		bx	lr
 229              	.L12:
 230 008e 00BF     		.align	2
 231              	.L11:
 232 0090 A1430040 		.word	1073759137
 233 0094 01400040 		.word	1073758209
 234 0098 14400040 		.word	1073758228
 235 009c 10400040 		.word	1073758224
 236 00a0 08400040 		.word	1073758216
 237 00a4 00410040 		.word	1073758464
 238 00a8 02400040 		.word	1073758210
 239 00ac B1430040 		.word	1073759153
 240              		.cfi_endproc
 241              	.LFE2:
 242              		.size	CyScBoostClk_StopBlock, .-CyScBoostClk_StopBlock
 243              		.section	.text.CyScBoostClk_StandbyPower,"ax",%progbits
 244              		.align	2
 245              		.global	CyScBoostClk_StandbyPower
 246              		.thumb
 247              		.thumb_func
 248              		.type	CyScBoostClk_StandbyPower, %function
 249              	CyScBoostClk_StandbyPower:
 250              	.LFB3:
 140:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* (CY_PSOC3 || CY_PSOC5LP) */
 141:Generated_Source\PSoC5/CyScBoostClk.c **** 
 142:Generated_Source\PSoC5/CyScBoostClk.c **** 
 143:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 144:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_StandbyPower
 145:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 146:Generated_Source\PSoC5/CyScBoostClk.c **** *
 147:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 148:Generated_Source\PSoC5/CyScBoostClk.c **** *  Sets whether the clock is active in standby mode.
 149:Generated_Source\PSoC5/CyScBoostClk.c **** *
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 8


 150:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 151:Generated_Source\PSoC5/CyScBoostClk.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 152:Generated_Source\PSoC5/CyScBoostClk.c **** *
 153:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 154:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 155:Generated_Source\PSoC5/CyScBoostClk.c **** *
 156:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 157:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_StandbyPower(uint8 state) 
 158:Generated_Source\PSoC5/CyScBoostClk.c **** {
 251              		.loc 1 158 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 8
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 256 0000 80B4     		push	{r7}
 257              		.cfi_def_cfa_offset 4
 258              		.cfi_offset 7, -4
 259 0002 83B0     		sub	sp, sp, #12
 260              		.cfi_def_cfa_offset 16
 261 0004 00AF     		add	r7, sp, #0
 262              		.cfi_def_cfa_register 7
 263 0006 0346     		mov	r3, r0
 264 0008 FB71     		strb	r3, [r7, #7]
 159:Generated_Source\PSoC5/CyScBoostClk.c ****     if(state == 0u)
 265              		.loc 1 159 0
 266 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 267 000c 002B     		cmp	r3, #0
 268 000e 08D1     		bne	.L14
 160:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 161:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_CLKSTBY &= (uint8)(~CyScBoostClk_CLKSTBY_MASK);
 269              		.loc 1 161 0
 270 0010 0A4A     		ldr	r2, .L17
 271 0012 0A4B     		ldr	r3, .L17
 272 0014 1B78     		ldrb	r3, [r3]
 273 0016 DBB2     		uxtb	r3, r3
 274 0018 23F00103 		bic	r3, r3, #1
 275 001c DBB2     		uxtb	r3, r3
 276 001e 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 163:Generated_Source\PSoC5/CyScBoostClk.c ****     else
 164:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 165:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_CLKSTBY |= CyScBoostClk_CLKSTBY_MASK;
 166:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 167:Generated_Source\PSoC5/CyScBoostClk.c **** }
 277              		.loc 1 167 0
 278 0020 07E0     		b	.L16
 279              	.L14:
 165:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 280              		.loc 1 165 0
 281 0022 064A     		ldr	r2, .L17
 282 0024 054B     		ldr	r3, .L17
 283 0026 1B78     		ldrb	r3, [r3]
 284 0028 DBB2     		uxtb	r3, r3
 285 002a 43F00103 		orr	r3, r3, #1
 286 002e DBB2     		uxtb	r3, r3
 287 0030 1370     		strb	r3, [r2]
 288              	.L16:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 9


 289              		.loc 1 167 0
 290 0032 00BF     		nop
 291 0034 0C37     		adds	r7, r7, #12
 292              		.cfi_def_cfa_offset 4
 293 0036 BD46     		mov	sp, r7
 294              		.cfi_def_cfa_register 13
 295              		@ sp needed
 296 0038 80BC     		pop	{r7}
 297              		.cfi_restore 7
 298              		.cfi_def_cfa_offset 0
 299 003a 7047     		bx	lr
 300              	.L18:
 301              		.align	2
 302              	.L17:
 303 003c B1430040 		.word	1073759153
 304              		.cfi_endproc
 305              	.LFE3:
 306              		.size	CyScBoostClk_StandbyPower, .-CyScBoostClk_StandbyPower
 307              		.section	.text.CyScBoostClk_SetDividerRegister,"ax",%progbits
 308              		.align	2
 309              		.global	CyScBoostClk_SetDividerRegister
 310              		.thumb
 311              		.thumb_func
 312              		.type	CyScBoostClk_SetDividerRegister, %function
 313              	CyScBoostClk_SetDividerRegister:
 314              	.LFB4:
 168:Generated_Source\PSoC5/CyScBoostClk.c **** 
 169:Generated_Source\PSoC5/CyScBoostClk.c **** 
 170:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 171:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_SetDividerRegister
 172:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 173:Generated_Source\PSoC5/CyScBoostClk.c **** *
 174:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 175:Generated_Source\PSoC5/CyScBoostClk.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 176:Generated_Source\PSoC5/CyScBoostClk.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 177:Generated_Source\PSoC5/CyScBoostClk.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 178:Generated_Source\PSoC5/CyScBoostClk.c **** *  SetDividerRegister is called, then the source clock must be running.
 179:Generated_Source\PSoC5/CyScBoostClk.c **** *
 180:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 181:Generated_Source\PSoC5/CyScBoostClk.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 182:Generated_Source\PSoC5/CyScBoostClk.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 183:Generated_Source\PSoC5/CyScBoostClk.c **** *    to divide the clock by 2, this parameter should be set to 1.
 184:Generated_Source\PSoC5/CyScBoostClk.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 185:Generated_Source\PSoC5/CyScBoostClk.c **** *   will be truncated and the new divide value will take effect immediately. If
 186:Generated_Source\PSoC5/CyScBoostClk.c **** *   zero, the new divide value will take effect at the end of the current clock
 187:Generated_Source\PSoC5/CyScBoostClk.c **** *   cycle.
 188:Generated_Source\PSoC5/CyScBoostClk.c **** *
 189:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 190:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 191:Generated_Source\PSoC5/CyScBoostClk.c **** *
 192:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 193:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_SetDividerRegister(uint16 clkDivider, uint8 restart)
 194:Generated_Source\PSoC5/CyScBoostClk.c ****                                 
 195:Generated_Source\PSoC5/CyScBoostClk.c **** {
 315              		.loc 1 195 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 10


 318              		@ frame_needed = 1, uses_anonymous_args = 0
 319 0000 80B5     		push	{r7, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 7, -8
 322              		.cfi_offset 14, -4
 323 0002 84B0     		sub	sp, sp, #16
 324              		.cfi_def_cfa_offset 24
 325 0004 00AF     		add	r7, sp, #0
 326              		.cfi_def_cfa_register 7
 327 0006 0346     		mov	r3, r0
 328 0008 0A46     		mov	r2, r1
 329 000a FB80     		strh	r3, [r7, #6]	@ movhi
 330 000c 1346     		mov	r3, r2
 331 000e 7B71     		strb	r3, [r7, #5]
 196:Generated_Source\PSoC5/CyScBoostClk.c ****     uint8 enabled;
 197:Generated_Source\PSoC5/CyScBoostClk.c **** 
 198:Generated_Source\PSoC5/CyScBoostClk.c ****     uint8 currSrc = CyScBoostClk_GetSourceRegister();
 332              		.loc 1 198 0
 333 0010 FFF7FEFF 		bl	CyScBoostClk_GetSourceRegister
 334 0014 0346     		mov	r3, r0
 335 0016 FB73     		strb	r3, [r7, #15]
 199:Generated_Source\PSoC5/CyScBoostClk.c ****     uint16 oldDivider = CyScBoostClk_GetDividerRegister();
 336              		.loc 1 199 0
 337 0018 FFF7FEFF 		bl	CyScBoostClk_GetDividerRegister
 338 001c 0346     		mov	r3, r0
 339 001e BB81     		strh	r3, [r7, #12]	@ movhi
 200:Generated_Source\PSoC5/CyScBoostClk.c **** 
 201:Generated_Source\PSoC5/CyScBoostClk.c ****     if (clkDivider != oldDivider)
 340              		.loc 1 201 0
 341 0020 FA88     		ldrh	r2, [r7, #6]
 342 0022 BB89     		ldrh	r3, [r7, #12]
 343 0024 9A42     		cmp	r2, r3
 344 0026 00F08880 		beq	.L32
 202:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 203:Generated_Source\PSoC5/CyScBoostClk.c ****         enabled = CyScBoostClk_CLKEN & CyScBoostClk_CLKEN_MASK;
 345              		.loc 1 203 0
 346 002a 464B     		ldr	r3, .L33
 347 002c 1B78     		ldrb	r3, [r3]
 348 002e DBB2     		uxtb	r3, r3
 349 0030 03F00103 		and	r3, r3, #1
 350 0034 FB72     		strb	r3, [r7, #11]
 204:Generated_Source\PSoC5/CyScBoostClk.c **** 
 205:Generated_Source\PSoC5/CyScBoostClk.c ****         if ((currSrc == (uint8)CYCLK_SRC_SEL_CLK_SYNC_D) && ((oldDivider == 0u) || (clkDivider == 0
 351              		.loc 1 205 0
 352 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 353 0038 002B     		cmp	r3, #0
 354 003a 20D1     		bne	.L21
 355              		.loc 1 205 0 is_stmt 0 discriminator 1
 356 003c BB89     		ldrh	r3, [r7, #12]
 357 003e 002B     		cmp	r3, #0
 358 0040 02D0     		beq	.L22
 359              		.loc 1 205 0 discriminator 2
 360 0042 FB88     		ldrh	r3, [r7, #6]
 361 0044 002B     		cmp	r3, #0
 362 0046 1AD1     		bne	.L21
 363              	.L22:
 206:Generated_Source\PSoC5/CyScBoostClk.c ****         {
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 11


 207:Generated_Source\PSoC5/CyScBoostClk.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 208:Generated_Source\PSoC5/CyScBoostClk.c ****             if (oldDivider == 0u)
 364              		.loc 1 208 0 is_stmt 1
 365 0048 BB89     		ldrh	r3, [r7, #12]
 366 004a 002B     		cmp	r3, #0
 367 004c 0BD1     		bne	.L23
 209:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 210:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 211:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 212:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* divider is ignored while SSS is set.                                     */
 213:Generated_Source\PSoC5/CyScBoostClk.c ****                 CY_SET_REG16(CyScBoostClk_DIV_PTR, clkDivider);
 368              		.loc 1 213 0
 369 004e 3E4A     		ldr	r2, .L33+4
 370 0050 FB88     		ldrh	r3, [r7, #6]	@ movhi
 371 0052 1380     		strh	r3, [r2]	@ movhi
 214:Generated_Source\PSoC5/CyScBoostClk.c ****                 CyScBoostClk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 372              		.loc 1 214 0
 373 0054 3D4A     		ldr	r2, .L33+8
 374 0056 3D4B     		ldr	r3, .L33+8
 375 0058 1B78     		ldrb	r3, [r3]
 376 005a DBB2     		uxtb	r3, r3
 377 005c 23F04003 		bic	r3, r3, #64
 378 0060 DBB2     		uxtb	r3, r3
 379 0062 1370     		strb	r3, [r2]
 208:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 380              		.loc 1 208 0
 381 0064 69E0     		b	.L20
 382              	.L23:
 215:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 216:Generated_Source\PSoC5/CyScBoostClk.c ****             else
 217:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 218:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 219:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* it without bothering with the shadow load.                               */
 220:Generated_Source\PSoC5/CyScBoostClk.c ****                 CyScBoostClk_MOD_SRC |= CYCLK_SSS;
 383              		.loc 1 220 0
 384 0066 394A     		ldr	r2, .L33+8
 385 0068 384B     		ldr	r3, .L33+8
 386 006a 1B78     		ldrb	r3, [r3]
 387 006c DBB2     		uxtb	r3, r3
 388 006e 43F04003 		orr	r3, r3, #64
 389 0072 DBB2     		uxtb	r3, r3
 390 0074 1370     		strb	r3, [r2]
 221:Generated_Source\PSoC5/CyScBoostClk.c ****                 CY_SET_REG16(CyScBoostClk_DIV_PTR, clkDivider);
 391              		.loc 1 221 0
 392 0076 344A     		ldr	r2, .L33+4
 393 0078 FB88     		ldrh	r3, [r7, #6]	@ movhi
 394 007a 1380     		strh	r3, [r2]	@ movhi
 208:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 395              		.loc 1 208 0
 396 007c 5DE0     		b	.L20
 397              	.L21:
 222:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 223:Generated_Source\PSoC5/CyScBoostClk.c ****         }
 224:Generated_Source\PSoC5/CyScBoostClk.c ****         else
 225:Generated_Source\PSoC5/CyScBoostClk.c ****         {
 226:Generated_Source\PSoC5/CyScBoostClk.c **** 			
 227:Generated_Source\PSoC5/CyScBoostClk.c ****             if (enabled != 0u)
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 12


 398              		.loc 1 227 0
 399 007e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 400 0080 002B     		cmp	r3, #0
 401 0082 33D0     		beq	.L25
 228:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 229:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_LD = 0x00u;
 402              		.loc 1 229 0
 403 0084 324B     		ldr	r3, .L33+12
 404 0086 0022     		movs	r2, #0
 405 0088 1A70     		strb	r2, [r3]
 230:Generated_Source\PSoC5/CyScBoostClk.c **** 
 231:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* Clear all the mask bits except ours. */
 232:Generated_Source\PSoC5/CyScBoostClk.c **** #if defined(CyScBoostClk__CFG3)
 233:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_AMASK = CyScBoostClk_CLKEN_MASK;
 406              		.loc 1 233 0
 407 008a 324B     		ldr	r3, .L33+16
 408 008c 0122     		movs	r2, #1
 409 008e 1A70     		strb	r2, [r3]
 234:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_DMASK = 0x00u;
 410              		.loc 1 234 0
 411 0090 314B     		ldr	r3, .L33+20
 412 0092 0022     		movs	r2, #0
 413 0094 1A70     		strb	r2, [r3]
 235:Generated_Source\PSoC5/CyScBoostClk.c **** #else
 236:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_DMASK = CyScBoostClk_CLKEN_MASK;
 237:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_AMASK = 0x00u;
 238:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* CyScBoostClk__CFG3 */
 239:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* Clear mask of bus clock. */
 240:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_BCFG2 &= (uint8)(~BCFG2_MASK);
 414              		.loc 1 240 0
 415 0096 314A     		ldr	r2, .L33+24
 416 0098 304B     		ldr	r3, .L33+24
 417 009a 1B78     		ldrb	r3, [r3]
 418 009c DBB2     		uxtb	r3, r3
 419 009e 03F07F03 		and	r3, r3, #127
 420 00a2 DBB2     		uxtb	r3, r3
 421 00a4 1370     		strb	r3, [r2]
 241:Generated_Source\PSoC5/CyScBoostClk.c **** 
 242:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* If clock is currently enabled, disable it if async or going from N-to-1*/
 243:Generated_Source\PSoC5/CyScBoostClk.c ****                 if (((CyScBoostClk_MOD_SRC & CYCLK_SYNC) == 0u) || (clkDivider == 0u))
 422              		.loc 1 243 0
 423 00a6 294B     		ldr	r3, .L33+8
 424 00a8 1B78     		ldrb	r3, [r3]
 425 00aa DBB2     		uxtb	r3, r3
 426 00ac 03F00803 		and	r3, r3, #8
 427 00b0 002B     		cmp	r3, #0
 428 00b2 02D0     		beq	.L26
 429              		.loc 1 243 0 is_stmt 0 discriminator 1
 430 00b4 FB88     		ldrh	r3, [r7, #6]
 431 00b6 002B     		cmp	r3, #0
 432 00b8 18D1     		bne	.L25
 433              	.L26:
 244:Generated_Source\PSoC5/CyScBoostClk.c ****                 {
 245:Generated_Source\PSoC5/CyScBoostClk.c **** #if HAS_CLKDIST_LD_DISABLE
 246:Generated_Source\PSoC5/CyScBoostClk.c ****                     CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 434              		.loc 1 246 0 is_stmt 1
 435 00ba 294A     		ldr	r2, .L33+28
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 13


 436 00bc BB89     		ldrh	r3, [r7, #12]	@ movhi
 437 00be 1380     		strh	r3, [r2]	@ movhi
 247:Generated_Source\PSoC5/CyScBoostClk.c ****                     CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 438              		.loc 1 247 0
 439 00c0 234B     		ldr	r3, .L33+12
 440 00c2 0722     		movs	r2, #7
 441 00c4 1A70     		strb	r2, [r3]
 248:Generated_Source\PSoC5/CyScBoostClk.c **** 
 249:Generated_Source\PSoC5/CyScBoostClk.c ****                     /* Wait for clock to be disabled */
 250:Generated_Source\PSoC5/CyScBoostClk.c ****                     while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 442              		.loc 1 250 0
 443 00c6 00BF     		nop
 444              	.L27:
 445              		.loc 1 250 0 is_stmt 0 discriminator 1
 446 00c8 214B     		ldr	r3, .L33+12
 447 00ca 1B78     		ldrb	r3, [r3]
 448 00cc DBB2     		uxtb	r3, r3
 449 00ce 03F00103 		and	r3, r3, #1
 450 00d2 002B     		cmp	r3, #0
 451 00d4 F8D1     		bne	.L27
 251:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 252:Generated_Source\PSoC5/CyScBoostClk.c **** 
 253:Generated_Source\PSoC5/CyScBoostClk.c ****                     CyScBoostClk_CLKEN &= (uint8)(~CyScBoostClk_CLKEN_MASK);
 452              		.loc 1 253 0 is_stmt 1
 453 00d6 1B4A     		ldr	r2, .L33
 454 00d8 1A4B     		ldr	r3, .L33
 455 00da 1B78     		ldrb	r3, [r3]
 456 00dc DBB2     		uxtb	r3, r3
 457 00de 23F00103 		bic	r3, r3, #1
 458 00e2 DBB2     		uxtb	r3, r3
 459 00e4 1370     		strb	r3, [r2]
 254:Generated_Source\PSoC5/CyScBoostClk.c **** 
 255:Generated_Source\PSoC5/CyScBoostClk.c **** #if HAS_CLKDIST_LD_DISABLE
 256:Generated_Source\PSoC5/CyScBoostClk.c ****                     /* Clear the disable bit */
 257:Generated_Source\PSoC5/CyScBoostClk.c ****                     CLK_DIST_LD = 0x00u;
 460              		.loc 1 257 0
 461 00e6 1A4B     		ldr	r3, .L33+12
 462 00e8 0022     		movs	r2, #0
 463 00ea 1A70     		strb	r2, [r3]
 464              	.L25:
 258:Generated_Source\PSoC5/CyScBoostClk.c **** #endif /* HAS_CLKDIST_LD_DISABLE */
 259:Generated_Source\PSoC5/CyScBoostClk.c ****                 }
 260:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 261:Generated_Source\PSoC5/CyScBoostClk.c **** 
 262:Generated_Source\PSoC5/CyScBoostClk.c ****             /* Load divide value. */
 263:Generated_Source\PSoC5/CyScBoostClk.c ****             if ((CyScBoostClk_CLKEN & CyScBoostClk_CLKEN_MASK) != 0u)
 465              		.loc 1 263 0
 466 00ec 154B     		ldr	r3, .L33
 467 00ee 1B78     		ldrb	r3, [r3]
 468 00f0 DBB2     		uxtb	r3, r3
 469 00f2 03F00103 		and	r3, r3, #1
 470 00f6 002B     		cmp	r3, #0
 471 00f8 13D0     		beq	.L28
 264:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 265:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* If the clock is still enabled, use the shadow registers */
 266:Generated_Source\PSoC5/CyScBoostClk.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 472              		.loc 1 266 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 14


 473 00fa 194A     		ldr	r2, .L33+28
 474 00fc FB88     		ldrh	r3, [r7, #6]	@ movhi
 475 00fe 1380     		strh	r3, [r2]	@ movhi
 267:Generated_Source\PSoC5/CyScBoostClk.c **** 
 268:Generated_Source\PSoC5/CyScBoostClk.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | ((restart != 0u) ? CYCLK_LD_SYNC_EN : 0x00u));
 476              		.loc 1 268 0
 477 0100 134A     		ldr	r2, .L33+12
 478 0102 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 479 0104 002B     		cmp	r3, #0
 480 0106 01D0     		beq	.L29
 481              		.loc 1 268 0 is_stmt 0 discriminator 1
 482 0108 0323     		movs	r3, #3
 483 010a 00E0     		b	.L30
 484              	.L29:
 485              		.loc 1 268 0 discriminator 2
 486 010c 0123     		movs	r3, #1
 487              	.L30:
 488              		.loc 1 268 0 discriminator 4
 489 010e 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/CyScBoostClk.c ****                 while ((CLK_DIST_LD & CYCLK_LD_LOAD) != 0u) { }
 490              		.loc 1 269 0 is_stmt 1 discriminator 4
 491 0110 00BF     		nop
 492              	.L31:
 493              		.loc 1 269 0 is_stmt 0 discriminator 1
 494 0112 0F4B     		ldr	r3, .L33+12
 495 0114 1B78     		ldrb	r3, [r3]
 496 0116 DBB2     		uxtb	r3, r3
 497 0118 03F00103 		and	r3, r3, #1
 498 011c 002B     		cmp	r3, #0
 499 011e F8D1     		bne	.L31
 270:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 271:Generated_Source\PSoC5/CyScBoostClk.c ****             else
 272:Generated_Source\PSoC5/CyScBoostClk.c ****             {
 273:Generated_Source\PSoC5/CyScBoostClk.c ****                 /* If the clock is disabled, set the divider directly */
 274:Generated_Source\PSoC5/CyScBoostClk.c ****                 CY_SET_REG16(CyScBoostClk_DIV_PTR, clkDivider);
 275:Generated_Source\PSoC5/CyScBoostClk.c **** 				CyScBoostClk_CLKEN |= enabled;
 276:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 277:Generated_Source\PSoC5/CyScBoostClk.c ****         }
 278:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 279:Generated_Source\PSoC5/CyScBoostClk.c **** }
 500              		.loc 1 279 0 is_stmt 1
 501 0120 0BE0     		b	.L32
 502              	.L28:
 274:Generated_Source\PSoC5/CyScBoostClk.c **** 				CyScBoostClk_CLKEN |= enabled;
 503              		.loc 1 274 0
 504 0122 094A     		ldr	r2, .L33+4
 505 0124 FB88     		ldrh	r3, [r7, #6]	@ movhi
 506 0126 1380     		strh	r3, [r2]	@ movhi
 275:Generated_Source\PSoC5/CyScBoostClk.c ****             }
 507              		.loc 1 275 0
 508 0128 0649     		ldr	r1, .L33
 509 012a 064B     		ldr	r3, .L33
 510 012c 1B78     		ldrb	r3, [r3]
 511 012e DAB2     		uxtb	r2, r3
 512 0130 FB7A     		ldrb	r3, [r7, #11]
 513 0132 1343     		orrs	r3, r3, r2
 514 0134 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 15


 515 0136 0B70     		strb	r3, [r1]
 516              		.loc 1 279 0
 517 0138 FFE7     		b	.L32
 518              	.L20:
 519              	.L32:
 520 013a 00BF     		nop
 521 013c 1037     		adds	r7, r7, #16
 522              		.cfi_def_cfa_offset 8
 523 013e BD46     		mov	sp, r7
 524              		.cfi_def_cfa_register 13
 525              		@ sp needed
 526 0140 80BD     		pop	{r7, pc}
 527              	.L34:
 528 0142 00BF     		.align	2
 529              	.L33:
 530 0144 A1430040 		.word	1073759137
 531 0148 00410040 		.word	1073758464
 532 014c 02410040 		.word	1073758466
 533 0150 01400040 		.word	1073758209
 534 0154 14400040 		.word	1073758228
 535 0158 10400040 		.word	1073758224
 536 015c 08400040 		.word	1073758216
 537 0160 02400040 		.word	1073758210
 538              		.cfi_endproc
 539              	.LFE4:
 540              		.size	CyScBoostClk_SetDividerRegister, .-CyScBoostClk_SetDividerRegister
 541              		.section	.text.CyScBoostClk_GetDividerRegister,"ax",%progbits
 542              		.align	2
 543              		.global	CyScBoostClk_GetDividerRegister
 544              		.thumb
 545              		.thumb_func
 546              		.type	CyScBoostClk_GetDividerRegister, %function
 547              	CyScBoostClk_GetDividerRegister:
 548              	.LFB5:
 280:Generated_Source\PSoC5/CyScBoostClk.c **** 
 281:Generated_Source\PSoC5/CyScBoostClk.c **** 
 282:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 283:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_GetDividerRegister
 284:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 285:Generated_Source\PSoC5/CyScBoostClk.c **** *
 286:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 287:Generated_Source\PSoC5/CyScBoostClk.c **** *  Gets the clock divider register value.
 288:Generated_Source\PSoC5/CyScBoostClk.c **** *
 289:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 290:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 291:Generated_Source\PSoC5/CyScBoostClk.c **** *
 292:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 293:Generated_Source\PSoC5/CyScBoostClk.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 294:Generated_Source\PSoC5/CyScBoostClk.c **** *  divide by 2, the return value will be 1.
 295:Generated_Source\PSoC5/CyScBoostClk.c **** *
 296:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 297:Generated_Source\PSoC5/CyScBoostClk.c **** uint16 CyScBoostClk_GetDividerRegister(void) 
 298:Generated_Source\PSoC5/CyScBoostClk.c **** {
 549              		.loc 1 298 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 16


 553              		@ link register save eliminated.
 554 0000 80B4     		push	{r7}
 555              		.cfi_def_cfa_offset 4
 556              		.cfi_offset 7, -4
 557 0002 00AF     		add	r7, sp, #0
 558              		.cfi_def_cfa_register 7
 299:Generated_Source\PSoC5/CyScBoostClk.c ****     return CY_GET_REG16(CyScBoostClk_DIV_PTR);
 559              		.loc 1 299 0
 560 0004 034B     		ldr	r3, .L37
 561 0006 1B88     		ldrh	r3, [r3]	@ movhi
 562 0008 9BB2     		uxth	r3, r3
 300:Generated_Source\PSoC5/CyScBoostClk.c **** }
 563              		.loc 1 300 0
 564 000a 1846     		mov	r0, r3
 565 000c BD46     		mov	sp, r7
 566              		.cfi_def_cfa_register 13
 567              		@ sp needed
 568 000e 80BC     		pop	{r7}
 569              		.cfi_restore 7
 570              		.cfi_def_cfa_offset 0
 571 0010 7047     		bx	lr
 572              	.L38:
 573 0012 00BF     		.align	2
 574              	.L37:
 575 0014 00410040 		.word	1073758464
 576              		.cfi_endproc
 577              	.LFE5:
 578              		.size	CyScBoostClk_GetDividerRegister, .-CyScBoostClk_GetDividerRegister
 579              		.section	.text.CyScBoostClk_SetModeRegister,"ax",%progbits
 580              		.align	2
 581              		.global	CyScBoostClk_SetModeRegister
 582              		.thumb
 583              		.thumb_func
 584              		.type	CyScBoostClk_SetModeRegister, %function
 585              	CyScBoostClk_SetModeRegister:
 586              	.LFB6:
 301:Generated_Source\PSoC5/CyScBoostClk.c **** 
 302:Generated_Source\PSoC5/CyScBoostClk.c **** 
 303:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 304:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_SetModeRegister
 305:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 306:Generated_Source\PSoC5/CyScBoostClk.c **** *
 307:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 308:Generated_Source\PSoC5/CyScBoostClk.c **** *  Sets flags that control the operating mode of the clock. This function only
 309:Generated_Source\PSoC5/CyScBoostClk.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 310:Generated_Source\PSoC5/CyScBoostClk.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 311:Generated_Source\PSoC5/CyScBoostClk.c **** *  disabled before changing the mode.
 312:Generated_Source\PSoC5/CyScBoostClk.c **** *
 313:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 314:Generated_Source\PSoC5/CyScBoostClk.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 315:Generated_Source\PSoC5/CyScBoostClk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 316:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 317:Generated_Source\PSoC5/CyScBoostClk.c **** *                 occur when the divider count reaches half of the divide
 318:Generated_Source\PSoC5/CyScBoostClk.c **** *                 value.
 319:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 320:Generated_Source\PSoC5/CyScBoostClk.c **** *                 is asserted for approximately half of its period. When
 321:Generated_Source\PSoC5/CyScBoostClk.c **** *                 disabled, the output clock is asserted for one period of the
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 17


 322:Generated_Source\PSoC5/CyScBoostClk.c **** *                 source clock.
 323:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 324:Generated_Source\PSoC5/CyScBoostClk.c **** *                 be enabled for all synchronous clocks.
 325:Generated_Source\PSoC5/CyScBoostClk.c **** *   See the Technical Reference Manual for details about setting the mode of
 326:Generated_Source\PSoC5/CyScBoostClk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 327:Generated_Source\PSoC5/CyScBoostClk.c **** *
 328:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 329:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 330:Generated_Source\PSoC5/CyScBoostClk.c **** *
 331:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 332:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_SetModeRegister(uint8 modeBitMask) 
 333:Generated_Source\PSoC5/CyScBoostClk.c **** {
 587              		.loc 1 333 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 8
 590              		@ frame_needed = 1, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 592 0000 80B4     		push	{r7}
 593              		.cfi_def_cfa_offset 4
 594              		.cfi_offset 7, -4
 595 0002 83B0     		sub	sp, sp, #12
 596              		.cfi_def_cfa_offset 16
 597 0004 00AF     		add	r7, sp, #0
 598              		.cfi_def_cfa_register 7
 599 0006 0346     		mov	r3, r0
 600 0008 FB71     		strb	r3, [r7, #7]
 334:Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_MOD_SRC |= modeBitMask & (uint8)CyScBoostClk_MODE_MASK;
 601              		.loc 1 334 0
 602 000a 0949     		ldr	r1, .L40
 603 000c 084B     		ldr	r3, .L40
 604 000e 1B78     		ldrb	r3, [r3]
 605 0010 DBB2     		uxtb	r3, r3
 606 0012 5AB2     		sxtb	r2, r3
 607 0014 97F90730 		ldrsb	r3, [r7, #7]
 608 0018 23F00703 		bic	r3, r3, #7
 609 001c 5BB2     		sxtb	r3, r3
 610 001e 1343     		orrs	r3, r3, r2
 611 0020 5BB2     		sxtb	r3, r3
 612 0022 DBB2     		uxtb	r3, r3
 613 0024 0B70     		strb	r3, [r1]
 335:Generated_Source\PSoC5/CyScBoostClk.c **** }
 614              		.loc 1 335 0
 615 0026 00BF     		nop
 616 0028 0C37     		adds	r7, r7, #12
 617              		.cfi_def_cfa_offset 4
 618 002a BD46     		mov	sp, r7
 619              		.cfi_def_cfa_register 13
 620              		@ sp needed
 621 002c 80BC     		pop	{r7}
 622              		.cfi_restore 7
 623              		.cfi_def_cfa_offset 0
 624 002e 7047     		bx	lr
 625              	.L41:
 626              		.align	2
 627              	.L40:
 628 0030 02410040 		.word	1073758466
 629              		.cfi_endproc
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 18


 630              	.LFE6:
 631              		.size	CyScBoostClk_SetModeRegister, .-CyScBoostClk_SetModeRegister
 632              		.section	.text.CyScBoostClk_ClearModeRegister,"ax",%progbits
 633              		.align	2
 634              		.global	CyScBoostClk_ClearModeRegister
 635              		.thumb
 636              		.thumb_func
 637              		.type	CyScBoostClk_ClearModeRegister, %function
 638              	CyScBoostClk_ClearModeRegister:
 639              	.LFB7:
 336:Generated_Source\PSoC5/CyScBoostClk.c **** 
 337:Generated_Source\PSoC5/CyScBoostClk.c **** 
 338:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 339:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_ClearModeRegister
 340:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 341:Generated_Source\PSoC5/CyScBoostClk.c **** *
 342:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 343:Generated_Source\PSoC5/CyScBoostClk.c **** *  Clears flags that control the operating mode of the clock. This function
 344:Generated_Source\PSoC5/CyScBoostClk.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 345:Generated_Source\PSoC5/CyScBoostClk.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 346:Generated_Source\PSoC5/CyScBoostClk.c **** *  disabled before changing the mode.
 347:Generated_Source\PSoC5/CyScBoostClk.c **** *
 348:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 349:Generated_Source\PSoC5/CyScBoostClk.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 350:Generated_Source\PSoC5/CyScBoostClk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 351:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 352:Generated_Source\PSoC5/CyScBoostClk.c **** *                 occur when the divider count reaches half of the divide
 353:Generated_Source\PSoC5/CyScBoostClk.c **** *                 value.
 354:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 355:Generated_Source\PSoC5/CyScBoostClk.c **** *                 is asserted for approximately half of its period. When
 356:Generated_Source\PSoC5/CyScBoostClk.c **** *                 disabled, the output clock is asserted for one period of the
 357:Generated_Source\PSoC5/CyScBoostClk.c **** *                 source clock.
 358:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 359:Generated_Source\PSoC5/CyScBoostClk.c **** *                 be enabled for all synchronous clocks.
 360:Generated_Source\PSoC5/CyScBoostClk.c **** *   See the Technical Reference Manual for details about setting the mode of
 361:Generated_Source\PSoC5/CyScBoostClk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 362:Generated_Source\PSoC5/CyScBoostClk.c **** *
 363:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 364:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 365:Generated_Source\PSoC5/CyScBoostClk.c **** *
 366:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 367:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_ClearModeRegister(uint8 modeBitMask) 
 368:Generated_Source\PSoC5/CyScBoostClk.c **** {
 640              		.loc 1 368 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 8
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645 0000 80B4     		push	{r7}
 646              		.cfi_def_cfa_offset 4
 647              		.cfi_offset 7, -4
 648 0002 83B0     		sub	sp, sp, #12
 649              		.cfi_def_cfa_offset 16
 650 0004 00AF     		add	r7, sp, #0
 651              		.cfi_def_cfa_register 7
 652 0006 0346     		mov	r3, r0
 653 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 19


 369:Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_MOD_SRC &= (uint8)(~modeBitMask) | (uint8)(~(uint8)(CyScBoostClk_MODE_MASK));
 654              		.loc 1 369 0
 655 000a 0949     		ldr	r1, .L43
 656 000c 084B     		ldr	r3, .L43
 657 000e 1B78     		ldrb	r3, [r3]
 658 0010 DAB2     		uxtb	r2, r3
 659 0012 FB79     		ldrb	r3, [r7, #7]
 660 0014 DB43     		mvns	r3, r3
 661 0016 DBB2     		uxtb	r3, r3
 662 0018 43F00703 		orr	r3, r3, #7
 663 001c DBB2     		uxtb	r3, r3
 664 001e 1340     		ands	r3, r3, r2
 665 0020 DBB2     		uxtb	r3, r3
 666 0022 0B70     		strb	r3, [r1]
 370:Generated_Source\PSoC5/CyScBoostClk.c **** }
 667              		.loc 1 370 0
 668 0024 00BF     		nop
 669 0026 0C37     		adds	r7, r7, #12
 670              		.cfi_def_cfa_offset 4
 671 0028 BD46     		mov	sp, r7
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 002a 80BC     		pop	{r7}
 675              		.cfi_restore 7
 676              		.cfi_def_cfa_offset 0
 677 002c 7047     		bx	lr
 678              	.L44:
 679 002e 00BF     		.align	2
 680              	.L43:
 681 0030 02410040 		.word	1073758466
 682              		.cfi_endproc
 683              	.LFE7:
 684              		.size	CyScBoostClk_ClearModeRegister, .-CyScBoostClk_ClearModeRegister
 685              		.section	.text.CyScBoostClk_GetModeRegister,"ax",%progbits
 686              		.align	2
 687              		.global	CyScBoostClk_GetModeRegister
 688              		.thumb
 689              		.thumb_func
 690              		.type	CyScBoostClk_GetModeRegister, %function
 691              	CyScBoostClk_GetModeRegister:
 692              	.LFB8:
 371:Generated_Source\PSoC5/CyScBoostClk.c **** 
 372:Generated_Source\PSoC5/CyScBoostClk.c **** 
 373:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 374:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_GetModeRegister
 375:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 376:Generated_Source\PSoC5/CyScBoostClk.c **** *
 377:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 378:Generated_Source\PSoC5/CyScBoostClk.c **** *  Gets the clock mode register value.
 379:Generated_Source\PSoC5/CyScBoostClk.c **** *
 380:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 381:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 382:Generated_Source\PSoC5/CyScBoostClk.c **** *
 383:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 384:Generated_Source\PSoC5/CyScBoostClk.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 385:Generated_Source\PSoC5/CyScBoostClk.c **** *  ClearModeRegister descriptions for details about the mode bits.
 386:Generated_Source\PSoC5/CyScBoostClk.c **** *
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 20


 387:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 388:Generated_Source\PSoC5/CyScBoostClk.c **** uint8 CyScBoostClk_GetModeRegister(void) 
 389:Generated_Source\PSoC5/CyScBoostClk.c **** {
 693              		.loc 1 389 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 1, uses_anonymous_args = 0
 697              		@ link register save eliminated.
 698 0000 80B4     		push	{r7}
 699              		.cfi_def_cfa_offset 4
 700              		.cfi_offset 7, -4
 701 0002 00AF     		add	r7, sp, #0
 702              		.cfi_def_cfa_register 7
 390:Generated_Source\PSoC5/CyScBoostClk.c ****     return CyScBoostClk_MOD_SRC & (uint8)(CyScBoostClk_MODE_MASK);
 703              		.loc 1 390 0
 704 0004 044B     		ldr	r3, .L47
 705 0006 1B78     		ldrb	r3, [r3]
 706 0008 DBB2     		uxtb	r3, r3
 707 000a 23F00703 		bic	r3, r3, #7
 708 000e DBB2     		uxtb	r3, r3
 391:Generated_Source\PSoC5/CyScBoostClk.c **** }
 709              		.loc 1 391 0
 710 0010 1846     		mov	r0, r3
 711 0012 BD46     		mov	sp, r7
 712              		.cfi_def_cfa_register 13
 713              		@ sp needed
 714 0014 80BC     		pop	{r7}
 715              		.cfi_restore 7
 716              		.cfi_def_cfa_offset 0
 717 0016 7047     		bx	lr
 718              	.L48:
 719              		.align	2
 720              	.L47:
 721 0018 02410040 		.word	1073758466
 722              		.cfi_endproc
 723              	.LFE8:
 724              		.size	CyScBoostClk_GetModeRegister, .-CyScBoostClk_GetModeRegister
 725              		.section	.text.CyScBoostClk_SetSourceRegister,"ax",%progbits
 726              		.align	2
 727              		.global	CyScBoostClk_SetSourceRegister
 728              		.thumb
 729              		.thumb_func
 730              		.type	CyScBoostClk_SetSourceRegister, %function
 731              	CyScBoostClk_SetSourceRegister:
 732              	.LFB9:
 392:Generated_Source\PSoC5/CyScBoostClk.c **** 
 393:Generated_Source\PSoC5/CyScBoostClk.c **** 
 394:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 395:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_SetSourceRegister
 396:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 397:Generated_Source\PSoC5/CyScBoostClk.c **** *
 398:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 399:Generated_Source\PSoC5/CyScBoostClk.c **** *  Sets the input source of the clock. The clock must be disabled before
 400:Generated_Source\PSoC5/CyScBoostClk.c **** *  changing the source. The old and new clock sources must be running.
 401:Generated_Source\PSoC5/CyScBoostClk.c **** *
 402:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 403:Generated_Source\PSoC5/CyScBoostClk.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 21


 404:Generated_Source\PSoC5/CyScBoostClk.c **** *   following input sources:
 405:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 406:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_IMO
 407:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_XTALM
 408:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_ILO
 409:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_PLL
 410:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_XTALK
 411:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_DSI_G
 412:Generated_Source\PSoC5/CyScBoostClk.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 413:Generated_Source\PSoC5/CyScBoostClk.c **** *   See the Technical Reference Manual for details on clock sources.
 414:Generated_Source\PSoC5/CyScBoostClk.c **** *
 415:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 416:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 417:Generated_Source\PSoC5/CyScBoostClk.c **** *
 418:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 419:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_SetSourceRegister(uint8 clkSource) 
 420:Generated_Source\PSoC5/CyScBoostClk.c **** {
 733              		.loc 1 420 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 16
 736              		@ frame_needed = 1, uses_anonymous_args = 0
 737 0000 80B5     		push	{r7, lr}
 738              		.cfi_def_cfa_offset 8
 739              		.cfi_offset 7, -8
 740              		.cfi_offset 14, -4
 741 0002 84B0     		sub	sp, sp, #16
 742              		.cfi_def_cfa_offset 24
 743 0004 00AF     		add	r7, sp, #0
 744              		.cfi_def_cfa_register 7
 745 0006 0346     		mov	r3, r0
 746 0008 FB71     		strb	r3, [r7, #7]
 421:Generated_Source\PSoC5/CyScBoostClk.c ****     uint16 currDiv = CyScBoostClk_GetDividerRegister();
 747              		.loc 1 421 0
 748 000a FFF7FEFF 		bl	CyScBoostClk_GetDividerRegister
 749 000e 0346     		mov	r3, r0
 750 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 422:Generated_Source\PSoC5/CyScBoostClk.c ****     uint8 oldSrc = CyScBoostClk_GetSourceRegister();
 751              		.loc 1 422 0
 752 0012 FFF7FEFF 		bl	CyScBoostClk_GetSourceRegister
 753 0016 0346     		mov	r3, r0
 754 0018 7B73     		strb	r3, [r7, #13]
 423:Generated_Source\PSoC5/CyScBoostClk.c **** 
 424:Generated_Source\PSoC5/CyScBoostClk.c ****     if (((oldSrc != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 755              		.loc 1 424 0
 756 001a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 757 001c 002B     		cmp	r3, #0
 758 001e 1CD0     		beq	.L50
 759              		.loc 1 424 0 is_stmt 0 discriminator 1
 760 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 761 0022 002B     		cmp	r3, #0
 762 0024 19D1     		bne	.L50
 425:Generated_Source\PSoC5/CyScBoostClk.c ****         (clkSource == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 763              		.loc 1 425 0 is_stmt 1
 764 0026 FB89     		ldrh	r3, [r7, #14]
 765 0028 002B     		cmp	r3, #0
 766 002a 16D1     		bne	.L50
 426:Generated_Source\PSoC5/CyScBoostClk.c ****     {
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 22


 427:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 428:Generated_Source\PSoC5/CyScBoostClk.c ****         /* then set the source so we are consistent.                                */
 429:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC |= CYCLK_SSS;
 767              		.loc 1 429 0
 768 002c 244A     		ldr	r2, .L53
 769 002e 244B     		ldr	r3, .L53
 770 0030 1B78     		ldrb	r3, [r3]
 771 0032 DBB2     		uxtb	r3, r3
 772 0034 43F04003 		orr	r3, r3, #64
 773 0038 DBB2     		uxtb	r3, r3
 774 003a 1370     		strb	r3, [r2]
 430:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC =
 775              		.loc 1 430 0
 776 003c 2049     		ldr	r1, .L53
 431:Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 777              		.loc 1 431 0
 778 003e 204B     		ldr	r3, .L53
 779 0040 1B78     		ldrb	r3, [r3]
 780 0042 DBB2     		uxtb	r3, r3
 430:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC =
 781              		.loc 1 430 0
 782 0044 5BB2     		sxtb	r3, r3
 783 0046 23F00703 		bic	r3, r3, #7
 784 004a 5AB2     		sxtb	r2, r3
 785 004c 97F90730 		ldrsb	r3, [r7, #7]
 786 0050 1343     		orrs	r3, r3, r2
 787 0052 5BB2     		sxtb	r3, r3
 788 0054 DBB2     		uxtb	r3, r3
 789 0056 0B70     		strb	r3, [r1]
 790 0058 2DE0     		b	.L51
 791              	.L50:
 432:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 433:Generated_Source\PSoC5/CyScBoostClk.c ****     else if (((oldSrc == ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D)) && 
 792              		.loc 1 433 0
 793 005a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 794 005c 002B     		cmp	r3, #0
 795 005e 1CD1     		bne	.L52
 796              		.loc 1 433 0 is_stmt 0 discriminator 1
 797 0060 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 798 0062 002B     		cmp	r3, #0
 799 0064 19D0     		beq	.L52
 434:Generated_Source\PSoC5/CyScBoostClk.c ****             (clkSource != ((uint8)CYCLK_SRC_SEL_CLK_SYNC_D))) && (currDiv == 0u))
 800              		.loc 1 434 0 is_stmt 1
 801 0066 FB89     		ldrh	r3, [r7, #14]
 802 0068 002B     		cmp	r3, #0
 803 006a 16D1     		bne	.L52
 435:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 436:Generated_Source\PSoC5/CyScBoostClk.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 437:Generated_Source\PSoC5/CyScBoostClk.c ****         /* lock when we clear SSS.                                                  */
 438:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC =
 804              		.loc 1 438 0
 805 006c 1449     		ldr	r1, .L53
 439:Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 806              		.loc 1 439 0
 807 006e 144B     		ldr	r3, .L53
 808 0070 1B78     		ldrb	r3, [r3]
 809 0072 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 23


 438:Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 810              		.loc 1 438 0
 811 0074 5BB2     		sxtb	r3, r3
 812 0076 23F00703 		bic	r3, r3, #7
 813 007a 5AB2     		sxtb	r2, r3
 814 007c 97F90730 		ldrsb	r3, [r7, #7]
 815 0080 1343     		orrs	r3, r3, r2
 816 0082 5BB2     		sxtb	r3, r3
 817 0084 DBB2     		uxtb	r3, r3
 818 0086 0B70     		strb	r3, [r1]
 440:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC &= (uint8)(~CYCLK_SSS);
 819              		.loc 1 440 0
 820 0088 0D4A     		ldr	r2, .L53
 821 008a 0D4B     		ldr	r3, .L53
 822 008c 1B78     		ldrb	r3, [r3]
 823 008e DBB2     		uxtb	r3, r3
 824 0090 23F04003 		bic	r3, r3, #64
 825 0094 DBB2     		uxtb	r3, r3
 826 0096 1370     		strb	r3, [r2]
 827 0098 0DE0     		b	.L51
 828              	.L52:
 441:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 442:Generated_Source\PSoC5/CyScBoostClk.c ****     else
 443:Generated_Source\PSoC5/CyScBoostClk.c ****     {
 444:Generated_Source\PSoC5/CyScBoostClk.c ****         CyScBoostClk_MOD_SRC =
 829              		.loc 1 444 0
 830 009a 0949     		ldr	r1, .L53
 445:Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 831              		.loc 1 445 0
 832 009c 084B     		ldr	r3, .L53
 833 009e 1B78     		ldrb	r3, [r3]
 834 00a0 DBB2     		uxtb	r3, r3
 444:Generated_Source\PSoC5/CyScBoostClk.c ****             (CyScBoostClk_MOD_SRC & (uint8)(~CyScBoostClk_SRC_SEL_MSK)) | clkSource;
 835              		.loc 1 444 0
 836 00a2 5BB2     		sxtb	r3, r3
 837 00a4 23F00703 		bic	r3, r3, #7
 838 00a8 5AB2     		sxtb	r2, r3
 839 00aa 97F90730 		ldrsb	r3, [r7, #7]
 840 00ae 1343     		orrs	r3, r3, r2
 841 00b0 5BB2     		sxtb	r3, r3
 842 00b2 DBB2     		uxtb	r3, r3
 843 00b4 0B70     		strb	r3, [r1]
 844              	.L51:
 446:Generated_Source\PSoC5/CyScBoostClk.c ****     }
 447:Generated_Source\PSoC5/CyScBoostClk.c **** }
 845              		.loc 1 447 0
 846 00b6 00BF     		nop
 847 00b8 1037     		adds	r7, r7, #16
 848              		.cfi_def_cfa_offset 8
 849 00ba BD46     		mov	sp, r7
 850              		.cfi_def_cfa_register 13
 851              		@ sp needed
 852 00bc 80BD     		pop	{r7, pc}
 853              	.L54:
 854 00be 00BF     		.align	2
 855              	.L53:
 856 00c0 02410040 		.word	1073758466
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 24


 857              		.cfi_endproc
 858              	.LFE9:
 859              		.size	CyScBoostClk_SetSourceRegister, .-CyScBoostClk_SetSourceRegister
 860              		.section	.text.CyScBoostClk_GetSourceRegister,"ax",%progbits
 861              		.align	2
 862              		.global	CyScBoostClk_GetSourceRegister
 863              		.thumb
 864              		.thumb_func
 865              		.type	CyScBoostClk_GetSourceRegister, %function
 866              	CyScBoostClk_GetSourceRegister:
 867              	.LFB10:
 448:Generated_Source\PSoC5/CyScBoostClk.c **** 
 449:Generated_Source\PSoC5/CyScBoostClk.c **** 
 450:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_GetSourceRegister
 452:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 453:Generated_Source\PSoC5/CyScBoostClk.c **** *
 454:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 455:Generated_Source\PSoC5/CyScBoostClk.c **** *  Gets the input source of the clock.
 456:Generated_Source\PSoC5/CyScBoostClk.c **** *
 457:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 458:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 459:Generated_Source\PSoC5/CyScBoostClk.c **** *
 460:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 461:Generated_Source\PSoC5/CyScBoostClk.c **** *  The input source of the clock. See SetSourceRegister for details.
 462:Generated_Source\PSoC5/CyScBoostClk.c **** *
 463:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 464:Generated_Source\PSoC5/CyScBoostClk.c **** uint8 CyScBoostClk_GetSourceRegister(void) 
 465:Generated_Source\PSoC5/CyScBoostClk.c **** {
 868              		.loc 1 465 0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 0
 871              		@ frame_needed = 1, uses_anonymous_args = 0
 872              		@ link register save eliminated.
 873 0000 80B4     		push	{r7}
 874              		.cfi_def_cfa_offset 4
 875              		.cfi_offset 7, -4
 876 0002 00AF     		add	r7, sp, #0
 877              		.cfi_def_cfa_register 7
 466:Generated_Source\PSoC5/CyScBoostClk.c ****     return CyScBoostClk_MOD_SRC & CyScBoostClk_SRC_SEL_MSK;
 878              		.loc 1 466 0
 879 0004 044B     		ldr	r3, .L57
 880 0006 1B78     		ldrb	r3, [r3]
 881 0008 DBB2     		uxtb	r3, r3
 882 000a 03F00703 		and	r3, r3, #7
 883 000e DBB2     		uxtb	r3, r3
 467:Generated_Source\PSoC5/CyScBoostClk.c **** }
 884              		.loc 1 467 0
 885 0010 1846     		mov	r0, r3
 886 0012 BD46     		mov	sp, r7
 887              		.cfi_def_cfa_register 13
 888              		@ sp needed
 889 0014 80BC     		pop	{r7}
 890              		.cfi_restore 7
 891              		.cfi_def_cfa_offset 0
 892 0016 7047     		bx	lr
 893              	.L58:
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 25


 894              		.align	2
 895              	.L57:
 896 0018 02410040 		.word	1073758466
 897              		.cfi_endproc
 898              	.LFE10:
 899              		.size	CyScBoostClk_GetSourceRegister, .-CyScBoostClk_GetSourceRegister
 900              		.section	.text.CyScBoostClk_SetPhaseRegister,"ax",%progbits
 901              		.align	2
 902              		.global	CyScBoostClk_SetPhaseRegister
 903              		.thumb
 904              		.thumb_func
 905              		.type	CyScBoostClk_SetPhaseRegister, %function
 906              	CyScBoostClk_SetPhaseRegister:
 907              	.LFB11:
 468:Generated_Source\PSoC5/CyScBoostClk.c **** 
 469:Generated_Source\PSoC5/CyScBoostClk.c **** 
 470:Generated_Source\PSoC5/CyScBoostClk.c **** #if defined(CyScBoostClk__CFG3)
 471:Generated_Source\PSoC5/CyScBoostClk.c **** 
 472:Generated_Source\PSoC5/CyScBoostClk.c **** 
 473:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 474:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_SetPhaseRegister
 475:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 476:Generated_Source\PSoC5/CyScBoostClk.c **** *
 477:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 478:Generated_Source\PSoC5/CyScBoostClk.c **** *  Sets the phase delay of the analog clock. This function is only available
 479:Generated_Source\PSoC5/CyScBoostClk.c **** *  for analog clocks. The clock must be disabled before changing the phase
 480:Generated_Source\PSoC5/CyScBoostClk.c **** *  delay to avoid glitches.
 481:Generated_Source\PSoC5/CyScBoostClk.c **** *
 482:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 483:Generated_Source\PSoC5/CyScBoostClk.c **** *  clkPhase: Amount to delay the phase of the clock, in 1.0ns increments.
 484:Generated_Source\PSoC5/CyScBoostClk.c **** *   clkPhase must be from 1 to 11 inclusive. Other values, including 0,
 485:Generated_Source\PSoC5/CyScBoostClk.c **** *   disable the clock. clkPhase = 1 produces a 0ns delay and clkPhase = 11 
 486:Generated_Source\PSoC5/CyScBoostClk.c **** *   produces a 10ns delay.
 487:Generated_Source\PSoC5/CyScBoostClk.c **** *
 488:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 489:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 490:Generated_Source\PSoC5/CyScBoostClk.c **** *
 491:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 492:Generated_Source\PSoC5/CyScBoostClk.c **** void CyScBoostClk_SetPhaseRegister(uint8 clkPhase) 
 493:Generated_Source\PSoC5/CyScBoostClk.c **** {
 908              		.loc 1 493 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 8
 911              		@ frame_needed = 1, uses_anonymous_args = 0
 912              		@ link register save eliminated.
 913 0000 80B4     		push	{r7}
 914              		.cfi_def_cfa_offset 4
 915              		.cfi_offset 7, -4
 916 0002 83B0     		sub	sp, sp, #12
 917              		.cfi_def_cfa_offset 16
 918 0004 00AF     		add	r7, sp, #0
 919              		.cfi_def_cfa_register 7
 920 0006 0346     		mov	r3, r0
 921 0008 FB71     		strb	r3, [r7, #7]
 494:Generated_Source\PSoC5/CyScBoostClk.c ****     CyScBoostClk_PHASE = clkPhase & CyScBoostClk_PHASE_MASK;
 922              		.loc 1 494 0
 923 000a 054A     		ldr	r2, .L60
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 26


 924 000c FB79     		ldrb	r3, [r7, #7]
 925 000e 03F00F03 		and	r3, r3, #15
 926 0012 DBB2     		uxtb	r3, r3
 927 0014 1370     		strb	r3, [r2]
 495:Generated_Source\PSoC5/CyScBoostClk.c **** }
 928              		.loc 1 495 0
 929 0016 00BF     		nop
 930 0018 0C37     		adds	r7, r7, #12
 931              		.cfi_def_cfa_offset 4
 932 001a BD46     		mov	sp, r7
 933              		.cfi_def_cfa_register 13
 934              		@ sp needed
 935 001c 80BC     		pop	{r7}
 936              		.cfi_restore 7
 937              		.cfi_def_cfa_offset 0
 938 001e 7047     		bx	lr
 939              	.L61:
 940              		.align	2
 941              	.L60:
 942 0020 03410040 		.word	1073758467
 943              		.cfi_endproc
 944              	.LFE11:
 945              		.size	CyScBoostClk_SetPhaseRegister, .-CyScBoostClk_SetPhaseRegister
 946              		.section	.text.CyScBoostClk_GetPhaseRegister,"ax",%progbits
 947              		.align	2
 948              		.global	CyScBoostClk_GetPhaseRegister
 949              		.thumb
 950              		.thumb_func
 951              		.type	CyScBoostClk_GetPhaseRegister, %function
 952              	CyScBoostClk_GetPhaseRegister:
 953              	.LFB12:
 496:Generated_Source\PSoC5/CyScBoostClk.c **** 
 497:Generated_Source\PSoC5/CyScBoostClk.c **** 
 498:Generated_Source\PSoC5/CyScBoostClk.c **** /*******************************************************************************
 499:Generated_Source\PSoC5/CyScBoostClk.c **** * Function Name: CyScBoostClk_GetPhase
 500:Generated_Source\PSoC5/CyScBoostClk.c **** ********************************************************************************
 501:Generated_Source\PSoC5/CyScBoostClk.c **** *
 502:Generated_Source\PSoC5/CyScBoostClk.c **** * Summary:
 503:Generated_Source\PSoC5/CyScBoostClk.c **** *  Gets the phase delay of the analog clock. This function is only available
 504:Generated_Source\PSoC5/CyScBoostClk.c **** *  for analog clocks.
 505:Generated_Source\PSoC5/CyScBoostClk.c **** *
 506:Generated_Source\PSoC5/CyScBoostClk.c **** * Parameters:
 507:Generated_Source\PSoC5/CyScBoostClk.c **** *  None
 508:Generated_Source\PSoC5/CyScBoostClk.c **** *
 509:Generated_Source\PSoC5/CyScBoostClk.c **** * Returns:
 510:Generated_Source\PSoC5/CyScBoostClk.c **** *  Phase of the analog clock. See SetPhaseRegister for details.
 511:Generated_Source\PSoC5/CyScBoostClk.c **** *
 512:Generated_Source\PSoC5/CyScBoostClk.c **** *******************************************************************************/
 513:Generated_Source\PSoC5/CyScBoostClk.c **** uint8 CyScBoostClk_GetPhaseRegister(void) 
 514:Generated_Source\PSoC5/CyScBoostClk.c **** {
 954              		.loc 1 514 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 1, uses_anonymous_args = 0
 958              		@ link register save eliminated.
 959 0000 80B4     		push	{r7}
 960              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 27


 961              		.cfi_offset 7, -4
 962 0002 00AF     		add	r7, sp, #0
 963              		.cfi_def_cfa_register 7
 515:Generated_Source\PSoC5/CyScBoostClk.c ****     return CyScBoostClk_PHASE & CyScBoostClk_PHASE_MASK;
 964              		.loc 1 515 0
 965 0004 044B     		ldr	r3, .L64
 966 0006 1B78     		ldrb	r3, [r3]
 967 0008 DBB2     		uxtb	r3, r3
 968 000a 03F00F03 		and	r3, r3, #15
 969 000e DBB2     		uxtb	r3, r3
 516:Generated_Source\PSoC5/CyScBoostClk.c **** }
 970              		.loc 1 516 0
 971 0010 1846     		mov	r0, r3
 972 0012 BD46     		mov	sp, r7
 973              		.cfi_def_cfa_register 13
 974              		@ sp needed
 975 0014 80BC     		pop	{r7}
 976              		.cfi_restore 7
 977              		.cfi_def_cfa_offset 0
 978 0016 7047     		bx	lr
 979              	.L65:
 980              		.align	2
 981              	.L64:
 982 0018 03410040 		.word	1073758467
 983              		.cfi_endproc
 984              	.LFE12:
 985              		.size	CyScBoostClk_GetPhaseRegister, .-CyScBoostClk_GetPhaseRegister
 986              		.text
 987              	.Letext0:
 988              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 989              		.section	.debug_info,"",%progbits
 990              	.Ldebug_info0:
 991 0000 95020000 		.4byte	0x295
 992 0004 0400     		.2byte	0x4
 993 0006 00000000 		.4byte	.Ldebug_abbrev0
 994 000a 04       		.byte	0x4
 995 000b 01       		.uleb128 0x1
 996 000c CC000000 		.4byte	.LASF40
 997 0010 0C       		.byte	0xc
 998 0011 00000000 		.4byte	.LASF41
 999 0015 26000000 		.4byte	.LASF42
 1000 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1001 001d 00000000 		.4byte	0
 1002 0021 00000000 		.4byte	.Ldebug_line0
 1003 0025 02       		.uleb128 0x2
 1004 0026 01       		.byte	0x1
 1005 0027 06       		.byte	0x6
 1006 0028 79020000 		.4byte	.LASF0
 1007 002c 02       		.uleb128 0x2
 1008 002d 01       		.byte	0x1
 1009 002e 08       		.byte	0x8
 1010 002f 5F020000 		.4byte	.LASF1
 1011 0033 02       		.uleb128 0x2
 1012 0034 02       		.byte	0x2
 1013 0035 05       		.byte	0x5
 1014 0036 B0000000 		.4byte	.LASF2
 1015 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 28


 1016 003b 02       		.byte	0x2
 1017 003c 07       		.byte	0x7
 1018 003d A9020000 		.4byte	.LASF3
 1019 0041 02       		.uleb128 0x2
 1020 0042 04       		.byte	0x4
 1021 0043 05       		.byte	0x5
 1022 0044 29020000 		.4byte	.LASF4
 1023 0048 02       		.uleb128 0x2
 1024 0049 04       		.byte	0x4
 1025 004a 07       		.byte	0x7
 1026 004b 1F030000 		.4byte	.LASF5
 1027 004f 02       		.uleb128 0x2
 1028 0050 08       		.byte	0x8
 1029 0051 05       		.byte	0x5
 1030 0052 1B020000 		.4byte	.LASF6
 1031 0056 02       		.uleb128 0x2
 1032 0057 08       		.byte	0x8
 1033 0058 07       		.byte	0x7
 1034 0059 85020000 		.4byte	.LASF7
 1035 005d 03       		.uleb128 0x3
 1036 005e 04       		.byte	0x4
 1037 005f 05       		.byte	0x5
 1038 0060 696E7400 		.ascii	"int\000"
 1039 0064 02       		.uleb128 0x2
 1040 0065 04       		.byte	0x4
 1041 0066 07       		.byte	0x7
 1042 0067 9C020000 		.4byte	.LASF8
 1043 006b 04       		.uleb128 0x4
 1044 006c C6010000 		.4byte	.LASF9
 1045 0070 02       		.byte	0x2
 1046 0071 E401     		.2byte	0x1e4
 1047 0073 2C000000 		.4byte	0x2c
 1048 0077 04       		.uleb128 0x4
 1049 0078 71010000 		.4byte	.LASF10
 1050 007c 02       		.byte	0x2
 1051 007d E501     		.2byte	0x1e5
 1052 007f 3A000000 		.4byte	0x3a
 1053 0083 02       		.uleb128 0x2
 1054 0084 04       		.byte	0x4
 1055 0085 04       		.byte	0x4
 1056 0086 F7010000 		.4byte	.LASF11
 1057 008a 02       		.uleb128 0x2
 1058 008b 08       		.byte	0x8
 1059 008c 04       		.byte	0x4
 1060 008d 31030000 		.4byte	.LASF12
 1061 0091 02       		.uleb128 0x2
 1062 0092 01       		.byte	0x1
 1063 0093 08       		.byte	0x8
 1064 0094 BC020000 		.4byte	.LASF13
 1065 0098 04       		.uleb128 0x4
 1066 0099 1A030000 		.4byte	.LASF14
 1067 009d 02       		.byte	0x2
 1068 009e 8E02     		.2byte	0x28e
 1069 00a0 A4000000 		.4byte	0xa4
 1070 00a4 05       		.uleb128 0x5
 1071 00a5 6B000000 		.4byte	0x6b
 1072 00a9 04       		.uleb128 0x4
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 29


 1073 00aa AA000000 		.4byte	.LASF15
 1074 00ae 02       		.byte	0x2
 1075 00af 8F02     		.2byte	0x28f
 1076 00b1 B5000000 		.4byte	0xb5
 1077 00b5 05       		.uleb128 0x5
 1078 00b6 77000000 		.4byte	0x77
 1079 00ba 06       		.uleb128 0x6
 1080 00bb 40030000 		.4byte	.LASF16
 1081 00bf 01       		.byte	0x1
 1082 00c0 2D       		.byte	0x2d
 1083 00c1 00000000 		.4byte	.LFB0
 1084 00c5 34000000 		.4byte	.LFE0-.LFB0
 1085 00c9 01       		.uleb128 0x1
 1086 00ca 9C       		.byte	0x9c
 1087 00cb 06       		.uleb128 0x6
 1088 00cc BA000000 		.4byte	.LASF17
 1089 00d0 01       		.byte	0x1
 1090 00d1 47       		.byte	0x47
 1091 00d2 00000000 		.4byte	.LFB1
 1092 00d6 34000000 		.4byte	.LFE1-.LFB1
 1093 00da 01       		.uleb128 0x1
 1094 00db 9C       		.byte	0x9c
 1095 00dc 07       		.uleb128 0x7
 1096 00dd 5A010000 		.4byte	.LASF18
 1097 00e1 01       		.byte	0x1
 1098 00e2 64       		.byte	0x64
 1099 00e3 00000000 		.4byte	.LFB2
 1100 00e7 B0000000 		.4byte	.LFE2-.LFB2
 1101 00eb 01       		.uleb128 0x1
 1102 00ec 9C       		.byte	0x9c
 1103 00ed 0A010000 		.4byte	0x10a
 1104 00f1 08       		.uleb128 0x8
 1105 00f2 14000000 		.4byte	.LBB2
 1106 00f6 70000000 		.4byte	.LBE2-.LBB2
 1107 00fa 09       		.uleb128 0x9
 1108 00fb D3020000 		.4byte	.LASF24
 1109 00ff 01       		.byte	0x1
 1110 0100 69       		.byte	0x69
 1111 0101 77000000 		.4byte	0x77
 1112 0105 02       		.uleb128 0x2
 1113 0106 91       		.byte	0x91
 1114 0107 76       		.sleb128 -10
 1115 0108 00       		.byte	0
 1116 0109 00       		.byte	0
 1117 010a 07       		.uleb128 0x7
 1118 010b 53030000 		.4byte	.LASF19
 1119 010f 01       		.byte	0x1
 1120 0110 9D       		.byte	0x9d
 1121 0111 00000000 		.4byte	.LFB3
 1122 0115 40000000 		.4byte	.LFE3-.LFB3
 1123 0119 01       		.uleb128 0x1
 1124 011a 9C       		.byte	0x9c
 1125 011b 2E010000 		.4byte	0x12e
 1126 011f 0A       		.uleb128 0xa
 1127 0120 50020000 		.4byte	.LASF21
 1128 0124 01       		.byte	0x1
 1129 0125 9D       		.byte	0x9d
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 30


 1130 0126 6B000000 		.4byte	0x6b
 1131 012a 02       		.uleb128 0x2
 1132 012b 91       		.byte	0x91
 1133 012c 77       		.sleb128 -9
 1134 012d 00       		.byte	0
 1135 012e 0B       		.uleb128 0xb
 1136 012f 80010000 		.4byte	.LASF20
 1137 0133 01       		.byte	0x1
 1138 0134 C1       		.byte	0xc1
 1139 0135 00000000 		.4byte	.LFB4
 1140 0139 64010000 		.4byte	.LFE4-.LFB4
 1141 013d 01       		.uleb128 0x1
 1142 013e 9C       		.byte	0x9c
 1143 013f 8A010000 		.4byte	0x18a
 1144 0143 0A       		.uleb128 0xa
 1145 0144 CC010000 		.4byte	.LASF22
 1146 0148 01       		.byte	0x1
 1147 0149 C1       		.byte	0xc1
 1148 014a 77000000 		.4byte	0x77
 1149 014e 02       		.uleb128 0x2
 1150 014f 91       		.byte	0x91
 1151 0150 6E       		.sleb128 -18
 1152 0151 0A       		.uleb128 0xa
 1153 0152 78010000 		.4byte	.LASF23
 1154 0156 01       		.byte	0x1
 1155 0157 C1       		.byte	0xc1
 1156 0158 6B000000 		.4byte	0x6b
 1157 015c 02       		.uleb128 0x2
 1158 015d 91       		.byte	0x91
 1159 015e 6D       		.sleb128 -19
 1160 015f 09       		.uleb128 0x9
 1161 0160 38030000 		.4byte	.LASF25
 1162 0164 01       		.byte	0x1
 1163 0165 C4       		.byte	0xc4
 1164 0166 6B000000 		.4byte	0x6b
 1165 016a 02       		.uleb128 0x2
 1166 016b 91       		.byte	0x91
 1167 016c 73       		.sleb128 -13
 1168 016d 09       		.uleb128 0x9
 1169 016e CB020000 		.4byte	.LASF26
 1170 0172 01       		.byte	0x1
 1171 0173 C6       		.byte	0xc6
 1172 0174 6B000000 		.4byte	0x6b
 1173 0178 02       		.uleb128 0x2
 1174 0179 91       		.byte	0x91
 1175 017a 77       		.sleb128 -9
 1176 017b 09       		.uleb128 0x9
 1177 017c D3020000 		.4byte	.LASF24
 1178 0180 01       		.byte	0x1
 1179 0181 C7       		.byte	0xc7
 1180 0182 77000000 		.4byte	0x77
 1181 0186 02       		.uleb128 0x2
 1182 0187 91       		.byte	0x91
 1183 0188 74       		.sleb128 -12
 1184 0189 00       		.byte	0
 1185 018a 0C       		.uleb128 0xc
 1186 018b D7010000 		.4byte	.LASF30
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 31


 1187 018f 01       		.byte	0x1
 1188 0190 2901     		.2byte	0x129
 1189 0192 77000000 		.4byte	0x77
 1190 0196 00000000 		.4byte	.LFB5
 1191 019a 18000000 		.4byte	.LFE5-.LFB5
 1192 019e 01       		.uleb128 0x1
 1193 019f 9C       		.byte	0x9c
 1194 01a0 0D       		.uleb128 0xd
 1195 01a1 85000000 		.4byte	.LASF27
 1196 01a5 01       		.byte	0x1
 1197 01a6 4C01     		.2byte	0x14c
 1198 01a8 00000000 		.4byte	.LFB6
 1199 01ac 34000000 		.4byte	.LFE6-.LFB6
 1200 01b0 01       		.uleb128 0x1
 1201 01b1 9C       		.byte	0x9c
 1202 01b2 C6010000 		.4byte	0x1c6
 1203 01b6 0E       		.uleb128 0xe
 1204 01b7 6D020000 		.4byte	.LASF28
 1205 01bb 01       		.byte	0x1
 1206 01bc 4C01     		.2byte	0x14c
 1207 01be 6B000000 		.4byte	0x6b
 1208 01c2 02       		.uleb128 0x2
 1209 01c3 91       		.byte	0x91
 1210 01c4 77       		.sleb128 -9
 1211 01c5 00       		.byte	0
 1212 01c6 0D       		.uleb128 0xd
 1213 01c7 6D030000 		.4byte	.LASF29
 1214 01cb 01       		.byte	0x1
 1215 01cc 6F01     		.2byte	0x16f
 1216 01ce 00000000 		.4byte	.LFB7
 1217 01d2 34000000 		.4byte	.LFE7-.LFB7
 1218 01d6 01       		.uleb128 0x1
 1219 01d7 9C       		.byte	0x9c
 1220 01d8 EC010000 		.4byte	0x1ec
 1221 01dc 0E       		.uleb128 0xe
 1222 01dd 6D020000 		.4byte	.LASF28
 1223 01e1 01       		.byte	0x1
 1224 01e2 6F01     		.2byte	0x16f
 1225 01e4 6B000000 		.4byte	0x6b
 1226 01e8 02       		.uleb128 0x2
 1227 01e9 91       		.byte	0x91
 1228 01ea 77       		.sleb128 -9
 1229 01eb 00       		.byte	0
 1230 01ec 0C       		.uleb128 0xc
 1231 01ed DE020000 		.4byte	.LASF31
 1232 01f1 01       		.byte	0x1
 1233 01f2 8401     		.2byte	0x184
 1234 01f4 6B000000 		.4byte	0x6b
 1235 01f8 00000000 		.4byte	.LFB8
 1236 01fc 1C000000 		.4byte	.LFE8-.LFB8
 1237 0200 01       		.uleb128 0x1
 1238 0201 9C       		.byte	0x9c
 1239 0202 0F       		.uleb128 0xf
 1240 0203 A0010000 		.4byte	.LASF32
 1241 0207 01       		.byte	0x1
 1242 0208 A301     		.2byte	0x1a3
 1243 020a 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 32


 1244 020e C4000000 		.4byte	.LFE9-.LFB9
 1245 0212 01       		.uleb128 0x1
 1246 0213 9C       		.byte	0x9c
 1247 0214 46020000 		.4byte	0x246
 1248 0218 0E       		.uleb128 0xe
 1249 0219 C1020000 		.4byte	.LASF33
 1250 021d 01       		.byte	0x1
 1251 021e A301     		.2byte	0x1a3
 1252 0220 6B000000 		.4byte	0x6b
 1253 0224 02       		.uleb128 0x2
 1254 0225 91       		.byte	0x91
 1255 0226 6F       		.sleb128 -17
 1256 0227 10       		.uleb128 0x10
 1257 0228 A2000000 		.4byte	.LASF34
 1258 022c 01       		.byte	0x1
 1259 022d A501     		.2byte	0x1a5
 1260 022f 77000000 		.4byte	0x77
 1261 0233 02       		.uleb128 0x2
 1262 0234 91       		.byte	0x91
 1263 0235 76       		.sleb128 -10
 1264 0236 10       		.uleb128 0x10
 1265 0237 BF010000 		.4byte	.LASF35
 1266 023b 01       		.byte	0x1
 1267 023c A601     		.2byte	0x1a6
 1268 023e 6B000000 		.4byte	0x6b
 1269 0242 02       		.uleb128 0x2
 1270 0243 91       		.byte	0x91
 1271 0244 75       		.sleb128 -11
 1272 0245 00       		.byte	0
 1273 0246 0C       		.uleb128 0xc
 1274 0247 FB020000 		.4byte	.LASF36
 1275 024b 01       		.byte	0x1
 1276 024c D001     		.2byte	0x1d0
 1277 024e 6B000000 		.4byte	0x6b
 1278 0252 00000000 		.4byte	.LFB10
 1279 0256 1C000000 		.4byte	.LFE10-.LFB10
 1280 025a 01       		.uleb128 0x1
 1281 025b 9C       		.byte	0x9c
 1282 025c 0D       		.uleb128 0xd
 1283 025d 32020000 		.4byte	.LASF37
 1284 0261 01       		.byte	0x1
 1285 0262 EC01     		.2byte	0x1ec
 1286 0264 00000000 		.4byte	.LFB11
 1287 0268 24000000 		.4byte	.LFE11-.LFB11
 1288 026c 01       		.uleb128 0x1
 1289 026d 9C       		.byte	0x9c
 1290 026e 82020000 		.4byte	0x282
 1291 0272 0E       		.uleb128 0xe
 1292 0273 56020000 		.4byte	.LASF38
 1293 0277 01       		.byte	0x1
 1294 0278 EC01     		.2byte	0x1ec
 1295 027a 6B000000 		.4byte	0x6b
 1296 027e 02       		.uleb128 0x2
 1297 027f 91       		.byte	0x91
 1298 0280 77       		.sleb128 -9
 1299 0281 00       		.byte	0
 1300 0282 0C       		.uleb128 0xc
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 33


 1301 0283 FD010000 		.4byte	.LASF39
 1302 0287 01       		.byte	0x1
 1303 0288 0102     		.2byte	0x201
 1304 028a 6B000000 		.4byte	0x6b
 1305 028e 00000000 		.4byte	.LFB12
 1306 0292 1C000000 		.4byte	.LFE12-.LFB12
 1307 0296 01       		.uleb128 0x1
 1308 0297 9C       		.byte	0x9c
 1309 0298 00       		.byte	0
 1310              		.section	.debug_abbrev,"",%progbits
 1311              	.Ldebug_abbrev0:
 1312 0000 01       		.uleb128 0x1
 1313 0001 11       		.uleb128 0x11
 1314 0002 01       		.byte	0x1
 1315 0003 25       		.uleb128 0x25
 1316 0004 0E       		.uleb128 0xe
 1317 0005 13       		.uleb128 0x13
 1318 0006 0B       		.uleb128 0xb
 1319 0007 03       		.uleb128 0x3
 1320 0008 0E       		.uleb128 0xe
 1321 0009 1B       		.uleb128 0x1b
 1322 000a 0E       		.uleb128 0xe
 1323 000b 55       		.uleb128 0x55
 1324 000c 17       		.uleb128 0x17
 1325 000d 11       		.uleb128 0x11
 1326 000e 01       		.uleb128 0x1
 1327 000f 10       		.uleb128 0x10
 1328 0010 17       		.uleb128 0x17
 1329 0011 00       		.byte	0
 1330 0012 00       		.byte	0
 1331 0013 02       		.uleb128 0x2
 1332 0014 24       		.uleb128 0x24
 1333 0015 00       		.byte	0
 1334 0016 0B       		.uleb128 0xb
 1335 0017 0B       		.uleb128 0xb
 1336 0018 3E       		.uleb128 0x3e
 1337 0019 0B       		.uleb128 0xb
 1338 001a 03       		.uleb128 0x3
 1339 001b 0E       		.uleb128 0xe
 1340 001c 00       		.byte	0
 1341 001d 00       		.byte	0
 1342 001e 03       		.uleb128 0x3
 1343 001f 24       		.uleb128 0x24
 1344 0020 00       		.byte	0
 1345 0021 0B       		.uleb128 0xb
 1346 0022 0B       		.uleb128 0xb
 1347 0023 3E       		.uleb128 0x3e
 1348 0024 0B       		.uleb128 0xb
 1349 0025 03       		.uleb128 0x3
 1350 0026 08       		.uleb128 0x8
 1351 0027 00       		.byte	0
 1352 0028 00       		.byte	0
 1353 0029 04       		.uleb128 0x4
 1354 002a 16       		.uleb128 0x16
 1355 002b 00       		.byte	0
 1356 002c 03       		.uleb128 0x3
 1357 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 34


 1358 002e 3A       		.uleb128 0x3a
 1359 002f 0B       		.uleb128 0xb
 1360 0030 3B       		.uleb128 0x3b
 1361 0031 05       		.uleb128 0x5
 1362 0032 49       		.uleb128 0x49
 1363 0033 13       		.uleb128 0x13
 1364 0034 00       		.byte	0
 1365 0035 00       		.byte	0
 1366 0036 05       		.uleb128 0x5
 1367 0037 35       		.uleb128 0x35
 1368 0038 00       		.byte	0
 1369 0039 49       		.uleb128 0x49
 1370 003a 13       		.uleb128 0x13
 1371 003b 00       		.byte	0
 1372 003c 00       		.byte	0
 1373 003d 06       		.uleb128 0x6
 1374 003e 2E       		.uleb128 0x2e
 1375 003f 00       		.byte	0
 1376 0040 3F       		.uleb128 0x3f
 1377 0041 19       		.uleb128 0x19
 1378 0042 03       		.uleb128 0x3
 1379 0043 0E       		.uleb128 0xe
 1380 0044 3A       		.uleb128 0x3a
 1381 0045 0B       		.uleb128 0xb
 1382 0046 3B       		.uleb128 0x3b
 1383 0047 0B       		.uleb128 0xb
 1384 0048 27       		.uleb128 0x27
 1385 0049 19       		.uleb128 0x19
 1386 004a 11       		.uleb128 0x11
 1387 004b 01       		.uleb128 0x1
 1388 004c 12       		.uleb128 0x12
 1389 004d 06       		.uleb128 0x6
 1390 004e 40       		.uleb128 0x40
 1391 004f 18       		.uleb128 0x18
 1392 0050 9742     		.uleb128 0x2117
 1393 0052 19       		.uleb128 0x19
 1394 0053 00       		.byte	0
 1395 0054 00       		.byte	0
 1396 0055 07       		.uleb128 0x7
 1397 0056 2E       		.uleb128 0x2e
 1398 0057 01       		.byte	0x1
 1399 0058 3F       		.uleb128 0x3f
 1400 0059 19       		.uleb128 0x19
 1401 005a 03       		.uleb128 0x3
 1402 005b 0E       		.uleb128 0xe
 1403 005c 3A       		.uleb128 0x3a
 1404 005d 0B       		.uleb128 0xb
 1405 005e 3B       		.uleb128 0x3b
 1406 005f 0B       		.uleb128 0xb
 1407 0060 27       		.uleb128 0x27
 1408 0061 19       		.uleb128 0x19
 1409 0062 11       		.uleb128 0x11
 1410 0063 01       		.uleb128 0x1
 1411 0064 12       		.uleb128 0x12
 1412 0065 06       		.uleb128 0x6
 1413 0066 40       		.uleb128 0x40
 1414 0067 18       		.uleb128 0x18
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 35


 1415 0068 9742     		.uleb128 0x2117
 1416 006a 19       		.uleb128 0x19
 1417 006b 01       		.uleb128 0x1
 1418 006c 13       		.uleb128 0x13
 1419 006d 00       		.byte	0
 1420 006e 00       		.byte	0
 1421 006f 08       		.uleb128 0x8
 1422 0070 0B       		.uleb128 0xb
 1423 0071 01       		.byte	0x1
 1424 0072 11       		.uleb128 0x11
 1425 0073 01       		.uleb128 0x1
 1426 0074 12       		.uleb128 0x12
 1427 0075 06       		.uleb128 0x6
 1428 0076 00       		.byte	0
 1429 0077 00       		.byte	0
 1430 0078 09       		.uleb128 0x9
 1431 0079 34       		.uleb128 0x34
 1432 007a 00       		.byte	0
 1433 007b 03       		.uleb128 0x3
 1434 007c 0E       		.uleb128 0xe
 1435 007d 3A       		.uleb128 0x3a
 1436 007e 0B       		.uleb128 0xb
 1437 007f 3B       		.uleb128 0x3b
 1438 0080 0B       		.uleb128 0xb
 1439 0081 49       		.uleb128 0x49
 1440 0082 13       		.uleb128 0x13
 1441 0083 02       		.uleb128 0x2
 1442 0084 18       		.uleb128 0x18
 1443 0085 00       		.byte	0
 1444 0086 00       		.byte	0
 1445 0087 0A       		.uleb128 0xa
 1446 0088 05       		.uleb128 0x5
 1447 0089 00       		.byte	0
 1448 008a 03       		.uleb128 0x3
 1449 008b 0E       		.uleb128 0xe
 1450 008c 3A       		.uleb128 0x3a
 1451 008d 0B       		.uleb128 0xb
 1452 008e 3B       		.uleb128 0x3b
 1453 008f 0B       		.uleb128 0xb
 1454 0090 49       		.uleb128 0x49
 1455 0091 13       		.uleb128 0x13
 1456 0092 02       		.uleb128 0x2
 1457 0093 18       		.uleb128 0x18
 1458 0094 00       		.byte	0
 1459 0095 00       		.byte	0
 1460 0096 0B       		.uleb128 0xb
 1461 0097 2E       		.uleb128 0x2e
 1462 0098 01       		.byte	0x1
 1463 0099 3F       		.uleb128 0x3f
 1464 009a 19       		.uleb128 0x19
 1465 009b 03       		.uleb128 0x3
 1466 009c 0E       		.uleb128 0xe
 1467 009d 3A       		.uleb128 0x3a
 1468 009e 0B       		.uleb128 0xb
 1469 009f 3B       		.uleb128 0x3b
 1470 00a0 0B       		.uleb128 0xb
 1471 00a1 27       		.uleb128 0x27
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 36


 1472 00a2 19       		.uleb128 0x19
 1473 00a3 11       		.uleb128 0x11
 1474 00a4 01       		.uleb128 0x1
 1475 00a5 12       		.uleb128 0x12
 1476 00a6 06       		.uleb128 0x6
 1477 00a7 40       		.uleb128 0x40
 1478 00a8 18       		.uleb128 0x18
 1479 00a9 9642     		.uleb128 0x2116
 1480 00ab 19       		.uleb128 0x19
 1481 00ac 01       		.uleb128 0x1
 1482 00ad 13       		.uleb128 0x13
 1483 00ae 00       		.byte	0
 1484 00af 00       		.byte	0
 1485 00b0 0C       		.uleb128 0xc
 1486 00b1 2E       		.uleb128 0x2e
 1487 00b2 00       		.byte	0
 1488 00b3 3F       		.uleb128 0x3f
 1489 00b4 19       		.uleb128 0x19
 1490 00b5 03       		.uleb128 0x3
 1491 00b6 0E       		.uleb128 0xe
 1492 00b7 3A       		.uleb128 0x3a
 1493 00b8 0B       		.uleb128 0xb
 1494 00b9 3B       		.uleb128 0x3b
 1495 00ba 05       		.uleb128 0x5
 1496 00bb 27       		.uleb128 0x27
 1497 00bc 19       		.uleb128 0x19
 1498 00bd 49       		.uleb128 0x49
 1499 00be 13       		.uleb128 0x13
 1500 00bf 11       		.uleb128 0x11
 1501 00c0 01       		.uleb128 0x1
 1502 00c1 12       		.uleb128 0x12
 1503 00c2 06       		.uleb128 0x6
 1504 00c3 40       		.uleb128 0x40
 1505 00c4 18       		.uleb128 0x18
 1506 00c5 9742     		.uleb128 0x2117
 1507 00c7 19       		.uleb128 0x19
 1508 00c8 00       		.byte	0
 1509 00c9 00       		.byte	0
 1510 00ca 0D       		.uleb128 0xd
 1511 00cb 2E       		.uleb128 0x2e
 1512 00cc 01       		.byte	0x1
 1513 00cd 3F       		.uleb128 0x3f
 1514 00ce 19       		.uleb128 0x19
 1515 00cf 03       		.uleb128 0x3
 1516 00d0 0E       		.uleb128 0xe
 1517 00d1 3A       		.uleb128 0x3a
 1518 00d2 0B       		.uleb128 0xb
 1519 00d3 3B       		.uleb128 0x3b
 1520 00d4 05       		.uleb128 0x5
 1521 00d5 27       		.uleb128 0x27
 1522 00d6 19       		.uleb128 0x19
 1523 00d7 11       		.uleb128 0x11
 1524 00d8 01       		.uleb128 0x1
 1525 00d9 12       		.uleb128 0x12
 1526 00da 06       		.uleb128 0x6
 1527 00db 40       		.uleb128 0x40
 1528 00dc 18       		.uleb128 0x18
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 37


 1529 00dd 9742     		.uleb128 0x2117
 1530 00df 19       		.uleb128 0x19
 1531 00e0 01       		.uleb128 0x1
 1532 00e1 13       		.uleb128 0x13
 1533 00e2 00       		.byte	0
 1534 00e3 00       		.byte	0
 1535 00e4 0E       		.uleb128 0xe
 1536 00e5 05       		.uleb128 0x5
 1537 00e6 00       		.byte	0
 1538 00e7 03       		.uleb128 0x3
 1539 00e8 0E       		.uleb128 0xe
 1540 00e9 3A       		.uleb128 0x3a
 1541 00ea 0B       		.uleb128 0xb
 1542 00eb 3B       		.uleb128 0x3b
 1543 00ec 05       		.uleb128 0x5
 1544 00ed 49       		.uleb128 0x49
 1545 00ee 13       		.uleb128 0x13
 1546 00ef 02       		.uleb128 0x2
 1547 00f0 18       		.uleb128 0x18
 1548 00f1 00       		.byte	0
 1549 00f2 00       		.byte	0
 1550 00f3 0F       		.uleb128 0xf
 1551 00f4 2E       		.uleb128 0x2e
 1552 00f5 01       		.byte	0x1
 1553 00f6 3F       		.uleb128 0x3f
 1554 00f7 19       		.uleb128 0x19
 1555 00f8 03       		.uleb128 0x3
 1556 00f9 0E       		.uleb128 0xe
 1557 00fa 3A       		.uleb128 0x3a
 1558 00fb 0B       		.uleb128 0xb
 1559 00fc 3B       		.uleb128 0x3b
 1560 00fd 05       		.uleb128 0x5
 1561 00fe 27       		.uleb128 0x27
 1562 00ff 19       		.uleb128 0x19
 1563 0100 11       		.uleb128 0x11
 1564 0101 01       		.uleb128 0x1
 1565 0102 12       		.uleb128 0x12
 1566 0103 06       		.uleb128 0x6
 1567 0104 40       		.uleb128 0x40
 1568 0105 18       		.uleb128 0x18
 1569 0106 9642     		.uleb128 0x2116
 1570 0108 19       		.uleb128 0x19
 1571 0109 01       		.uleb128 0x1
 1572 010a 13       		.uleb128 0x13
 1573 010b 00       		.byte	0
 1574 010c 00       		.byte	0
 1575 010d 10       		.uleb128 0x10
 1576 010e 34       		.uleb128 0x34
 1577 010f 00       		.byte	0
 1578 0110 03       		.uleb128 0x3
 1579 0111 0E       		.uleb128 0xe
 1580 0112 3A       		.uleb128 0x3a
 1581 0113 0B       		.uleb128 0xb
 1582 0114 3B       		.uleb128 0x3b
 1583 0115 05       		.uleb128 0x5
 1584 0116 49       		.uleb128 0x49
 1585 0117 13       		.uleb128 0x13
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 38


 1586 0118 02       		.uleb128 0x2
 1587 0119 18       		.uleb128 0x18
 1588 011a 00       		.byte	0
 1589 011b 00       		.byte	0
 1590 011c 00       		.byte	0
 1591              		.section	.debug_aranges,"",%progbits
 1592 0000 7C000000 		.4byte	0x7c
 1593 0004 0200     		.2byte	0x2
 1594 0006 00000000 		.4byte	.Ldebug_info0
 1595 000a 04       		.byte	0x4
 1596 000b 00       		.byte	0
 1597 000c 0000     		.2byte	0
 1598 000e 0000     		.2byte	0
 1599 0010 00000000 		.4byte	.LFB0
 1600 0014 34000000 		.4byte	.LFE0-.LFB0
 1601 0018 00000000 		.4byte	.LFB1
 1602 001c 34000000 		.4byte	.LFE1-.LFB1
 1603 0020 00000000 		.4byte	.LFB2
 1604 0024 B0000000 		.4byte	.LFE2-.LFB2
 1605 0028 00000000 		.4byte	.LFB3
 1606 002c 40000000 		.4byte	.LFE3-.LFB3
 1607 0030 00000000 		.4byte	.LFB4
 1608 0034 64010000 		.4byte	.LFE4-.LFB4
 1609 0038 00000000 		.4byte	.LFB5
 1610 003c 18000000 		.4byte	.LFE5-.LFB5
 1611 0040 00000000 		.4byte	.LFB6
 1612 0044 34000000 		.4byte	.LFE6-.LFB6
 1613 0048 00000000 		.4byte	.LFB7
 1614 004c 34000000 		.4byte	.LFE7-.LFB7
 1615 0050 00000000 		.4byte	.LFB8
 1616 0054 1C000000 		.4byte	.LFE8-.LFB8
 1617 0058 00000000 		.4byte	.LFB9
 1618 005c C4000000 		.4byte	.LFE9-.LFB9
 1619 0060 00000000 		.4byte	.LFB10
 1620 0064 1C000000 		.4byte	.LFE10-.LFB10
 1621 0068 00000000 		.4byte	.LFB11
 1622 006c 24000000 		.4byte	.LFE11-.LFB11
 1623 0070 00000000 		.4byte	.LFB12
 1624 0074 1C000000 		.4byte	.LFE12-.LFB12
 1625 0078 00000000 		.4byte	0
 1626 007c 00000000 		.4byte	0
 1627              		.section	.debug_ranges,"",%progbits
 1628              	.Ldebug_ranges0:
 1629 0000 00000000 		.4byte	.LFB0
 1630 0004 34000000 		.4byte	.LFE0
 1631 0008 00000000 		.4byte	.LFB1
 1632 000c 34000000 		.4byte	.LFE1
 1633 0010 00000000 		.4byte	.LFB2
 1634 0014 B0000000 		.4byte	.LFE2
 1635 0018 00000000 		.4byte	.LFB3
 1636 001c 40000000 		.4byte	.LFE3
 1637 0020 00000000 		.4byte	.LFB4
 1638 0024 64010000 		.4byte	.LFE4
 1639 0028 00000000 		.4byte	.LFB5
 1640 002c 18000000 		.4byte	.LFE5
 1641 0030 00000000 		.4byte	.LFB6
 1642 0034 34000000 		.4byte	.LFE6
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 39


 1643 0038 00000000 		.4byte	.LFB7
 1644 003c 34000000 		.4byte	.LFE7
 1645 0040 00000000 		.4byte	.LFB8
 1646 0044 1C000000 		.4byte	.LFE8
 1647 0048 00000000 		.4byte	.LFB9
 1648 004c C4000000 		.4byte	.LFE9
 1649 0050 00000000 		.4byte	.LFB10
 1650 0054 1C000000 		.4byte	.LFE10
 1651 0058 00000000 		.4byte	.LFB11
 1652 005c 24000000 		.4byte	.LFE11
 1653 0060 00000000 		.4byte	.LFB12
 1654 0064 1C000000 		.4byte	.LFE12
 1655 0068 00000000 		.4byte	0
 1656 006c 00000000 		.4byte	0
 1657              		.section	.debug_line,"",%progbits
 1658              	.Ldebug_line0:
 1659 0000 CB010000 		.section	.debug_str,"MS",%progbits,1
 1659      02004900 
 1659      00000201 
 1659      FB0E0D00 
 1659      01010101 
 1660              	.LASF41:
 1661 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\CyScBoostClk.c\000"
 1661      72617465 
 1661      645F536F 
 1661      75726365 
 1661      5C50536F 
 1662              	.LASF42:
 1663 0026 433A5C55 		.ascii	"C:\\Users\\HPz420\\Documents\\GitHub\\land-boards\\"
 1663      73657273 
 1663      5C48507A 
 1663      3432305C 
 1663      446F6375 
 1664 0053 52617350 		.ascii	"RasPi\\RPI_PSOC5\\RPI_PSOC5_CARD_TEST_STATION.cydsn"
 1664      695C5250 
 1664      495F5053 
 1664      4F43355C 
 1664      5250495F 
 1665 0084 00       		.ascii	"\000"
 1666              	.LASF27:
 1667 0085 43795363 		.ascii	"CyScBoostClk_SetModeRegister\000"
 1667      426F6F73 
 1667      74436C6B 
 1667      5F536574 
 1667      4D6F6465 
 1668              	.LASF34:
 1669 00a2 63757272 		.ascii	"currDiv\000"
 1669      44697600 
 1670              	.LASF15:
 1671 00aa 72656731 		.ascii	"reg16\000"
 1671      3600
 1672              	.LASF2:
 1673 00b0 73686F72 		.ascii	"short int\000"
 1673      7420696E 
 1673      7400
 1674              	.LASF17:
 1675 00ba 43795363 		.ascii	"CyScBoostClk_Stop\000"
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 40


 1675      426F6F73 
 1675      74436C6B 
 1675      5F53746F 
 1675      7000
 1676              	.LASF40:
 1677 00cc 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1677      43313120 
 1677      352E342E 
 1677      31203230 
 1677      31363036 
 1678 00ff 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1678      20726576 
 1678      6973696F 
 1678      6E203233 
 1678      37373135 
 1679 0132 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1679      66756E63 
 1679      74696F6E 
 1679      2D736563 
 1679      74696F6E 
 1680              	.LASF18:
 1681 015a 43795363 		.ascii	"CyScBoostClk_StopBlock\000"
 1681      426F6F73 
 1681      74436C6B 
 1681      5F53746F 
 1681      70426C6F 
 1682              	.LASF10:
 1683 0171 75696E74 		.ascii	"uint16\000"
 1683      313600
 1684              	.LASF23:
 1685 0178 72657374 		.ascii	"restart\000"
 1685      61727400 
 1686              	.LASF20:
 1687 0180 43795363 		.ascii	"CyScBoostClk_SetDividerRegister\000"
 1687      426F6F73 
 1687      74436C6B 
 1687      5F536574 
 1687      44697669 
 1688              	.LASF32:
 1689 01a0 43795363 		.ascii	"CyScBoostClk_SetSourceRegister\000"
 1689      426F6F73 
 1689      74436C6B 
 1689      5F536574 
 1689      536F7572 
 1690              	.LASF35:
 1691 01bf 6F6C6453 		.ascii	"oldSrc\000"
 1691      726300
 1692              	.LASF9:
 1693 01c6 75696E74 		.ascii	"uint8\000"
 1693      3800
 1694              	.LASF22:
 1695 01cc 636C6B44 		.ascii	"clkDivider\000"
 1695      69766964 
 1695      657200
 1696              	.LASF30:
 1697 01d7 43795363 		.ascii	"CyScBoostClk_GetDividerRegister\000"
 1697      426F6F73 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 41


 1697      74436C6B 
 1697      5F476574 
 1697      44697669 
 1698              	.LASF11:
 1699 01f7 666C6F61 		.ascii	"float\000"
 1699      7400
 1700              	.LASF39:
 1701 01fd 43795363 		.ascii	"CyScBoostClk_GetPhaseRegister\000"
 1701      426F6F73 
 1701      74436C6B 
 1701      5F476574 
 1701      50686173 
 1702              	.LASF6:
 1703 021b 6C6F6E67 		.ascii	"long long int\000"
 1703      206C6F6E 
 1703      6720696E 
 1703      7400
 1704              	.LASF4:
 1705 0229 6C6F6E67 		.ascii	"long int\000"
 1705      20696E74 
 1705      00
 1706              	.LASF37:
 1707 0232 43795363 		.ascii	"CyScBoostClk_SetPhaseRegister\000"
 1707      426F6F73 
 1707      74436C6B 
 1707      5F536574 
 1707      50686173 
 1708              	.LASF21:
 1709 0250 73746174 		.ascii	"state\000"
 1709      6500
 1710              	.LASF38:
 1711 0256 636C6B50 		.ascii	"clkPhase\000"
 1711      68617365 
 1711      00
 1712              	.LASF1:
 1713 025f 756E7369 		.ascii	"unsigned char\000"
 1713      676E6564 
 1713      20636861 
 1713      7200
 1714              	.LASF28:
 1715 026d 6D6F6465 		.ascii	"modeBitMask\000"
 1715      4269744D 
 1715      61736B00 
 1716              	.LASF0:
 1717 0279 7369676E 		.ascii	"signed char\000"
 1717      65642063 
 1717      68617200 
 1718              	.LASF7:
 1719 0285 6C6F6E67 		.ascii	"long long unsigned int\000"
 1719      206C6F6E 
 1719      6720756E 
 1719      7369676E 
 1719      65642069 
 1720              	.LASF8:
 1721 029c 756E7369 		.ascii	"unsigned int\000"
 1721      676E6564 
 1721      20696E74 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 42


 1721      00
 1722              	.LASF3:
 1723 02a9 73686F72 		.ascii	"short unsigned int\000"
 1723      7420756E 
 1723      7369676E 
 1723      65642069 
 1723      6E7400
 1724              	.LASF13:
 1725 02bc 63686172 		.ascii	"char\000"
 1725      00
 1726              	.LASF33:
 1727 02c1 636C6B53 		.ascii	"clkSource\000"
 1727      6F757263 
 1727      6500
 1728              	.LASF26:
 1729 02cb 63757272 		.ascii	"currSrc\000"
 1729      53726300 
 1730              	.LASF24:
 1731 02d3 6F6C6444 		.ascii	"oldDivider\000"
 1731      69766964 
 1731      657200
 1732              	.LASF31:
 1733 02de 43795363 		.ascii	"CyScBoostClk_GetModeRegister\000"
 1733      426F6F73 
 1733      74436C6B 
 1733      5F476574 
 1733      4D6F6465 
 1734              	.LASF36:
 1735 02fb 43795363 		.ascii	"CyScBoostClk_GetSourceRegister\000"
 1735      426F6F73 
 1735      74436C6B 
 1735      5F476574 
 1735      536F7572 
 1736              	.LASF14:
 1737 031a 72656738 		.ascii	"reg8\000"
 1737      00
 1738              	.LASF5:
 1739 031f 6C6F6E67 		.ascii	"long unsigned int\000"
 1739      20756E73 
 1739      69676E65 
 1739      6420696E 
 1739      7400
 1740              	.LASF12:
 1741 0331 646F7562 		.ascii	"double\000"
 1741      6C6500
 1742              	.LASF25:
 1743 0338 656E6162 		.ascii	"enabled\000"
 1743      6C656400 
 1744              	.LASF16:
 1745 0340 43795363 		.ascii	"CyScBoostClk_Start\000"
 1745      426F6F73 
 1745      74436C6B 
 1745      5F537461 
 1745      727400
 1746              	.LASF19:
 1747 0353 43795363 		.ascii	"CyScBoostClk_StandbyPower\000"
 1747      426F6F73 
ARM GAS  C:\Users\HPz420\AppData\Local\Temp\cc2yexEB.s 			page 43


 1747      74436C6B 
 1747      5F537461 
 1747      6E646279 
 1748              	.LASF29:
 1749 036d 43795363 		.ascii	"CyScBoostClk_ClearModeRegister\000"
 1749      426F6F73 
 1749      74436C6B 
 1749      5F436C65 
 1749      61724D6F 
 1750              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
